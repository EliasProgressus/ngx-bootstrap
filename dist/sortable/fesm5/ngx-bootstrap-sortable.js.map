{"version":3,"file":"ngx-bootstrap-sortable.js.map","sources":["ng://ngx-bootstrap/sortable/draggable-item.service.ts","ng://ngx-bootstrap/sortable/sortable.component.ts","ng://ngx-bootstrap/sortable/sortable.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { DraggableItem } from './draggable-item';\r\n\r\n@Injectable()\r\nexport class DraggableItemService {\r\n  private draggableItem: DraggableItem;\r\n\r\n  private onCapture: Subject<DraggableItem> = new Subject<DraggableItem>();\r\n\r\n  dragStart(item: DraggableItem): void {\r\n    this.draggableItem = item;\r\n  }\r\n\r\n  getItem(): DraggableItem {\r\n    return this.draggableItem;\r\n  }\r\n\r\n  captureItem(overZoneIndex: number, newIndex: number): DraggableItem {\r\n    if (this.draggableItem.overZoneIndex !== overZoneIndex) {\r\n      this.draggableItem.lastZoneIndex = this.draggableItem.overZoneIndex;\r\n      this.draggableItem.overZoneIndex = overZoneIndex;\r\n      this.onCapture.next(this.draggableItem);\r\n      this.draggableItem = Object.assign({}, this.draggableItem, {\r\n        overZoneIndex,\r\n        i: newIndex\r\n      });\r\n    }\r\n\r\n    return this.draggableItem;\r\n  }\r\n\r\n  onCaptureItem(): Subject<DraggableItem> {\r\n    return this.onCapture;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  forwardRef,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { DraggableItem } from './draggable-item';\r\nimport { DraggableItemService } from './draggable-item.service';\r\n\r\n/* tslint:disable */\r\n@Component({\r\n  selector: 'bs-sortable',\r\n  exportAs: 'bs-sortable',\r\n  template: `\r\n<div\r\n    [ngClass]=\"wrapperClass\"\r\n    [ngStyle]=\"wrapperStyle\"\r\n    [ngStyle]=\"wrapperStyle\"\r\n    (dragover)=\"cancelEvent($event)\"\r\n    (dragenter)=\"cancelEvent($event)\"\r\n    (drop)=\"resetActiveItem($event)\"\r\n    (mouseleave)=\"resetActiveItem($event)\">\r\n  <div\r\n        *ngIf=\"showPlaceholder\"\r\n        [ngClass]=\"placeholderClass\"\r\n        [ngStyle]=\"placeholderStyle\"\r\n        (dragover)=\"onItemDragover($event, 0)\"\r\n        (dragenter)=\"cancelEvent($event)\"\r\n    >{{placeholderItem}}</div>\r\n    <div\r\n        *ngFor=\"let item of items; let i=index;\"\r\n        [ngClass]=\"[ itemClass, i === activeItem ? itemActiveClass : '' ]\"\r\n        [ngStyle]=\"getItemStyle(i === activeItem)\"\r\n        draggable=\"true\"\r\n        (dragstart)=\"onItemDragstart($event, item, i)\"\r\n        (dragend)=\"resetActiveItem($event)\"\r\n        (dragover)=\"onItemDragover($event, i)\"\r\n        (dragenter)=\"cancelEvent($event)\"\r\n        aria-dropeffect=\"move\"\r\n        [attr.aria-grabbed]=\"i === activeItem\"\r\n    ><ng-template [ngTemplateOutlet]=\"itemTemplate || defItemTemplate\"\r\n  [ngTemplateOutletContext]=\"{item:item, index: i}\"></ng-template></div>\r\n</div>\r\n\r\n<ng-template #defItemTemplate let-item=\"item\">{{item.value}}</ng-template>  \r\n`,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => SortableComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\n/* tslint:enable */\r\nexport class SortableComponent implements ControlValueAccessor {\r\n  private static globalZoneIndex = 0;\r\n  /** field name if input array consists of objects */\r\n  @Input() fieldName: string;\r\n\r\n  /** class name for items wrapper */\r\n  @Input() wrapperClass = '';\r\n\r\n  /** style object for items wrapper */\r\n  @Input() wrapperStyle: { [key: string]: string } = {};\r\n\r\n  /** class name for item */\r\n  @Input() itemClass = '';\r\n\r\n  /** style object for item */\r\n  @Input() itemStyle: { [key: string]: string } = {};\r\n\r\n  /** class name for active item */\r\n  @Input() itemActiveClass = '';\r\n\r\n  /** style object for active item */\r\n  @Input() itemActiveStyle: { [key: string]: string } = {};\r\n\r\n  /** class name for placeholder */\r\n  @Input() placeholderClass = '';\r\n\r\n  /** style object for placeholder */\r\n  @Input() placeholderStyle: { [key: string]: string } = {};\r\n\r\n  /** placeholder item which will be shown if collection is empty */\r\n  @Input() placeholderItem = '';\r\n\r\n  /** used to specify a custom item template. Template variables: item and index; */\r\n  /* tslint:disable-next-line: no-any */\r\n  @Input() itemTemplate: TemplateRef<any>;\r\n\r\n  /** fired on array change (reordering, insert, remove), same as <code>ngModelChange</code>.\r\n   *  Returns new items collection as a payload.\r\n   */\r\n  /* tslint:disable-next-line: no-any */\r\n  @Output() onChange: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n\r\n  showPlaceholder = false;\r\n  activeItem = -1;\r\n\r\n  get items(): SortableItem[] {\r\n    return this._items;\r\n  }\r\n\r\n  set items(value: SortableItem[]) {\r\n    this._items = value;\r\n    const out = this.items.map((x: SortableItem) => x.initData);\r\n    this.onChanged(out);\r\n    this.onChange.emit(out);\r\n  }\r\n\r\n  /* tslint:disable-next-line: no-any */\r\n  onTouched: any = Function.prototype;\r\n  /* tslint:disable-next-line: no-any */\r\n  onChanged: any = Function.prototype;\r\n\r\n  private transfer: DraggableItemService;\r\n  private currentZoneIndex: number;\r\n  private _items: SortableItem[];\r\n\r\n  constructor(transfer: DraggableItemService) {\r\n    this.transfer = transfer;\r\n    this.currentZoneIndex = SortableComponent.globalZoneIndex++;\r\n    this.transfer\r\n      .onCaptureItem()\r\n      .subscribe((item: DraggableItem) => this.onDrop(item));\r\n  }\r\n\r\n  onItemDragstart(\r\n    event: DragEvent,\r\n    item: SortableItem,\r\n    i: number\r\n  ): void {\r\n    this.initDragstartEvent(event);\r\n    this.onTouched();\r\n    this.transfer.dragStart({\r\n      event,\r\n      item,\r\n      i,\r\n      initialIndex: i,\r\n      lastZoneIndex: this.currentZoneIndex,\r\n      overZoneIndex: this.currentZoneIndex\r\n    });\r\n  }\r\n\r\n  onItemDragover(event: DragEvent, i: number): void {\r\n    if (!this.transfer.getItem()) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    const dragItem = this.transfer.captureItem(\r\n      this.currentZoneIndex,\r\n      this.items.length\r\n    );\r\n\r\n    /* tslint:disable-next-line: no-any */\r\n    let newArray: any[] = [];\r\n\r\n    if (!this.items.length) {\r\n      newArray = [dragItem.item];\r\n    } else if (dragItem.i > i) {\r\n      newArray = [\r\n        ...this.items.slice(0, i),\r\n        dragItem.item,\r\n        ...this.items.slice(i, dragItem.i),\r\n        ...this.items.slice(dragItem.i + 1)\r\n      ];\r\n    } else {\r\n      // this.draggedItem.i < i\r\n      newArray = [\r\n        ...this.items.slice(0, dragItem.i),\r\n        ...this.items.slice(dragItem.i + 1, i + 1),\r\n        dragItem.item,\r\n        ...this.items.slice(i + 1)\r\n      ];\r\n    }\r\n    this.items = newArray;\r\n    dragItem.i = i;\r\n    this.activeItem = i;\r\n    this.updatePlaceholderState();\r\n  }\r\n\r\n  cancelEvent(event: DragEvent): void {\r\n    if (!this.transfer.getItem() || !event) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  onDrop(item: DraggableItem): void {\r\n    if (\r\n      item &&\r\n      item.overZoneIndex !== this.currentZoneIndex &&\r\n      item.lastZoneIndex === this.currentZoneIndex\r\n    ) {\r\n      this.items = this.items.filter(\r\n        (x: SortableItem, i: number) => i !== item.i\r\n      );\r\n      this.updatePlaceholderState();\r\n    }\r\n    this.resetActiveItem(undefined);\r\n  }\r\n\r\n  resetActiveItem(event: DragEvent): void {\r\n    this.cancelEvent(event);\r\n    this.activeItem = -1;\r\n  }\r\n\r\n  registerOnChange(callback: () => void): void {\r\n    this.onChanged = callback;\r\n  }\r\n\r\n  registerOnTouched(callback: () => void): void {\r\n    this.onTouched = callback;\r\n  }\r\n\r\n  /* tslint:disable-next-line: no-any */\r\n  writeValue(value: any[]): void {\r\n    if (value) {\r\n      /* tslint:disable-next-line: no-any */\r\n      this.items = value.map((x: any, i: number) => ({\r\n        id: i,\r\n        initData: x,\r\n        value: this.fieldName ? x[this.fieldName] : x\r\n      }));\r\n    } else {\r\n      this.items = [];\r\n    }\r\n    this.updatePlaceholderState();\r\n  }\r\n\r\n  updatePlaceholderState(): void {\r\n    this.showPlaceholder = !this._items.length;\r\n  }\r\n\r\n  getItemStyle(isActive: boolean): {} {\r\n    return isActive\r\n      ? Object.assign({}, this.itemStyle, this.itemActiveStyle)\r\n      : this.itemStyle;\r\n  }\r\n\r\n  // tslint:disable-next-line\r\n  private initDragstartEvent(event: DragEvent): void {\r\n    // it is necessary for mozilla\r\n    // data type should be 'Text' instead of 'text/plain' to keep compatibility\r\n    // with IE\r\n    event.dataTransfer.setData('Text', 'placeholder');\r\n  }\r\n}\r\n\r\nexport declare interface SortableItem {\r\n  id: number;\r\n  value: string;\r\n  /* tslint:disable-next-line: no-any */\r\n  initData: any;\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SortableComponent } from './sortable.component';\r\nimport { DraggableItemService } from './draggable-item.service';\r\n\r\n@NgModule({\r\n  declarations: [SortableComponent],\r\n  imports: [CommonModule],\r\n  exports: [SortableComponent]\r\n})\r\nexport class SortableModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return { ngModule: SortableModule, providers: [DraggableItemService] };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}
