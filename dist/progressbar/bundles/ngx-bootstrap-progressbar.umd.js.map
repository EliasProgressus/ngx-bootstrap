{"version":3,"file":"ngx-bootstrap-progressbar.umd.js.map","sources":["ng://ngx-bootstrap/progressbar/progressbar.config.ts","ng://ngx-bootstrap/progressbar/progressbar.component.ts","ng://ngx-bootstrap/progressbar/bar.component.ts","ng://ngx-bootstrap/progressbar/progressbar.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ProgressbarConfig {\r\n  /** if `true` changing value of progress bar will be animated */\r\n  animate: Boolean = false;\r\n  /** maximum total value of progress element */\r\n  max = 100;\r\n}\r\n","import { Component, HostBinding, Input } from '@angular/core';\r\nimport { ProgressbarConfig } from './progressbar.config';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\nimport { BarComponent } from './bar.component';\r\n\r\n@Component({\r\n  selector: 'progressbar',\r\n  templateUrl: './progressbar.component.html',\r\n  styles: [\r\n    `\r\n    :host {\r\n      width: 100%;\r\n      display: flex;\r\n    }\r\n  `\r\n  ]\r\n})\r\nexport class ProgressbarComponent {\r\n  /** if `true` changing value of progress bar will be animated */\r\n  @Input()\r\n  set animate(value: boolean) {\r\n    this._animate = value;\r\n    this.bars.forEach((b: BarComponent) => {\r\n      b.animate = value;\r\n    });\r\n  }\r\n  /** If `true`, striped classes are applied */\r\n  @Input()\r\n  set striped(value: boolean) {\r\n    this._striped = value;\r\n    this.bars.forEach((b: BarComponent) => {\r\n      b.striped = value;\r\n    });\r\n  }\r\n\r\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n  @Input() type: string;\r\n  /** current value of progress bar. Could be a number or array of objects\r\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\r\n   */\r\n  @Input()\r\n  /* tslint:disable-next-line:no-any */\r\n  set value(value: number | any[]) {\r\n    this.isStacked = Array.isArray(value);\r\n    this._value = value;\r\n  }\r\n  isStacked = false;\r\n  _striped: boolean;\r\n  _animate: boolean;\r\n  /* tslint:disable-next-line:no-any */\r\n  _value: number | any[];\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  /** maximum total value of progress element */\r\n  @HostBinding('attr.max')\r\n  @Input()\r\n  get max(): number {\r\n    return this._max;\r\n  }\r\n\r\n  set max(v: number) {\r\n    this._max = v;\r\n    this.bars.forEach((bar: BarComponent) => {\r\n      bar.recalculatePercentage();\r\n    });\r\n  }\r\n\r\n  @HostBinding('class.progress') addClass = true;\r\n\r\n  /* tslint:disable-next-line:no-any */\r\n  bars: BarComponent[] = [];\r\n\r\n  protected _max = 100;\r\n\r\n  constructor(config: ProgressbarConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n  addBar(bar: BarComponent): void {\r\n    bar.animate = this._animate;\r\n    bar.striped = this._striped;\r\n\r\n    this.bars.push(bar);\r\n  }\r\n\r\n  removeBar(bar: BarComponent): void {\r\n    this.bars.splice(this.bars.indexOf(bar), 1);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { ProgressbarComponent } from './progressbar.component';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\n\r\n// todo: number pipe\r\n// todo: use query from progress?\r\n@Component({\r\n  selector: 'bar',\r\n  templateUrl: './bar.component.html',\r\n  host: {\r\n    role: 'progressbar',\r\n    'aria-valuemin': '0',\r\n    '[class]': '\"progress-bar \" + (type ? \"progress-bar-\" + type + \" bg-\" + type : \"\")',\r\n    '[class.progress-bar-animated]': '!isBs3 && animate',\r\n    '[class.progress-bar-striped]': 'striped',\r\n    '[class.active]': 'isBs3 && animate',\r\n    '[attr.aria-valuenow]': 'value',\r\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\r\n    '[attr.aria-valuemax]': 'max',\r\n    '[style.height.%]': '\"100\"'\r\n  }\r\n})\r\nexport class BarComponent implements OnInit, OnDestroy {\r\n  max: number;\r\n\r\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n  @Input() type: string;\r\n\r\n  /** current value of progress bar */\r\n  @Input()\r\n  get value(): number {\r\n    return this._value;\r\n  }\r\n\r\n  set value(v: number) {\r\n    if (!v && v !== 0) {\r\n      return;\r\n    }\r\n    this._value = v;\r\n    this.recalculatePercentage();\r\n  }\r\n\r\n  @HostBinding('style.width.%')\r\n  get setBarWidth() {\r\n    this.recalculatePercentage();\r\n\r\n    return this.percent;\r\n  }\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  striped: boolean;\r\n  animate: boolean;\r\n  percent = 0;\r\n  progress: ProgressbarComponent;\r\n\r\n  protected _value: number;\r\n\r\n  constructor(@Host() progress: ProgressbarComponent) {\r\n    this.progress = progress;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.progress.addBar(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.progress.removeBar(this);\r\n  }\r\n\r\n  recalculatePercentage(): void {\r\n    this.percent = +(this.value / this.progress.max * 100).toFixed(2);\r\n\r\n    const totalPercentage = this.progress.bars\r\n      .reduce(function (total: number, bar: BarComponent): number {\r\n        return total + bar.percent;\r\n      }, 0);\r\n\r\n    if (totalPercentage > 100) {\r\n      this.percent -= totalPercentage - 100;\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { BarComponent } from './bar.component';\r\nimport { ProgressbarComponent } from './progressbar.component';\r\nimport { ProgressbarConfig } from './progressbar.config';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [BarComponent, ProgressbarComponent],\r\n  exports: [BarComponent, ProgressbarComponent]\r\n})\r\nexport class ProgressbarModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return { ngModule: ProgressbarModule, providers: [ProgressbarConfig] };\r\n  }\r\n}\r\n"],"names":["Injectable","isBs3","Component","Input","HostBinding","Host","NgModule","CommonModule"],"mappings":"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"}
