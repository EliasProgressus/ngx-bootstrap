{"version":3,"file":"ngx-bootstrap-dropdown.js.map","sources":["ng://ngx-bootstrap/dropdown/bs-dropdown.config.ts","ng://ngx-bootstrap/dropdown/bs-dropdown.state.ts","ng://ngx-bootstrap/dropdown/bs-dropdown-container.component.ts","ng://ngx-bootstrap/dropdown/bs-dropdown.directive.ts","ng://ngx-bootstrap/dropdown/bs-dropdown-menu.directive.ts","ng://ngx-bootstrap/dropdown/bs-dropdown-toggle.directive.ts","ng://ngx-bootstrap/dropdown/bs-dropdown.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/** Default dropdown configuration */\r\n@Injectable()\r\nexport class BsDropdownConfig {\r\n  /** default dropdown auto closing behavior */\r\n  autoClose = true;\r\n  /** default dropdown auto closing behavior */\r\n  insideClick = false;\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { BsComponentRef } from 'ngx-bootstrap/component-loader';\r\n\r\n@Injectable()\r\nexport class BsDropdownState {\r\n  direction: 'down' | 'up' = 'down';\r\n  autoClose: boolean;\r\n  insideClick: boolean;\r\n  isOpenChange = new EventEmitter<boolean>();\r\n  isDisabledChange = new EventEmitter<boolean>();\r\n  toggleClick = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   * Content to be displayed as popover.\r\n   */\r\n  // tslint:disable:no-any\r\n  dropdownMenu: Promise<BsComponentRef<any>>;\r\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\r\n\r\n  constructor() {\r\n    this.dropdownMenu = new Promise(resolve => {\r\n      this.resolveDropdownMenu = resolve;\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { BsDropdownState } from './bs-dropdown.state';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\n\r\n@Component({\r\n  selector: 'bs-dropdown-container',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    style: 'display:block;position: absolute;'\r\n  },\r\n  template: `\r\n    <div [class.dropup]=\"direction === 'up'\"\r\n         [class.dropdown]=\"direction === 'down'\"\r\n         [class.show]=\"isOpen\"\r\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\r\n  `\r\n})\r\nexport class BsDropdownContainerComponent implements OnDestroy {\r\n  isOpen = false;\r\n\r\n  get direction(): 'down' | 'up' {\r\n    return this._state.direction;\r\n  }\r\n\r\n// tslint:disable-next-line:no-any\r\n  private _subscription: any;\r\n\r\n  constructor(\r\n    private _state: BsDropdownState,\r\n    private cd: ChangeDetectorRef,\r\n    private _renderer: Renderer2,\r\n    private _element: ElementRef\r\n  ) {\r\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\r\n      this.isOpen = value;\r\n      const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\r\n      if (dropdown && !isBs3()) {\r\n        this._renderer.addClass(dropdown, 'show');\r\n        if (dropdown.classList.contains('dropdown-menu-right')) {\r\n          this._renderer.setStyle(dropdown, 'left', 'auto');\r\n          this._renderer.setStyle(dropdown, 'right', '0');\r\n        }\r\n        if (this.direction === 'up') {\r\n          this._renderer.setStyle(dropdown, 'top', 'auto');\r\n          this._renderer.setStyle(\r\n            dropdown,\r\n            'transform',\r\n            'translateY(-101%)'\r\n          );\r\n        }\r\n      }\r\n      this.cd.markForCheck();\r\n      this.cd.detectChanges();\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  _contains(el: Element): boolean {\r\n    return this._element.nativeElement.contains(el);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscription.unsubscribe();\r\n  }\r\n}\r\n","// tslint:disable:max-file-line-count\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  EmbeddedViewRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { ComponentLoader, ComponentLoaderFactory, BsComponentRef } from 'ngx-bootstrap/component-loader';\r\n\r\nimport { BsDropdownConfig } from './bs-dropdown.config';\r\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\r\nimport { BsDropdownState } from './bs-dropdown.state';\r\nimport { BsDropdownMenuDirective } from './index';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\n\r\n@Directive({\r\n  selector: '[bsDropdown],[dropdown]',\r\n  exportAs: 'bs-dropdown',\r\n  providers: [BsDropdownState],\r\n  host: {\r\n    '[class.dropup]': 'dropup',\r\n    '[class.open]': 'isOpen',\r\n    '[class.show]': 'isOpen && isBs4'\r\n  }\r\n})\r\nexport class BsDropdownDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  @Input() placement: string;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * This attribute indicates that the dropdown should be opened upwards\r\n   */\r\n  @Input() dropup: boolean;\r\n\r\n  /**\r\n   * Indicates that dropdown will be closed on item or document click,\r\n   * and after pressing ESC\r\n   */\r\n  @Input()\r\n  set autoClose(value: boolean) {\r\n    this._state.autoClose = value;\r\n  }\r\n\r\n  get autoClose(): boolean {\r\n    return this._state.autoClose;\r\n  }\r\n\r\n  /**\r\n   * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\r\n   */\r\n  @Input()\r\n  set insideClick(value: boolean) {\r\n    this._state.insideClick = value;\r\n  }\r\n\r\n  get insideClick(): boolean {\r\n    return this._state.insideClick;\r\n  }\r\n\r\n  /**\r\n   * Disables dropdown toggle and hides dropdown menu if opened\r\n   */\r\n  @Input()\r\n  set isDisabled(value: boolean) {\r\n    this._isDisabled = value;\r\n    this._state.isDisabledChange.emit(value);\r\n    if (value) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  get isDisabled(): boolean {\r\n    return this._isDisabled;\r\n  }\r\n\r\n  /**\r\n   * Returns whether or not the popover is currently being shown\r\n   */\r\n  @Input()\r\n  get isOpen(): boolean {\r\n    if (this._showInline) {\r\n      return this._isInlineOpen;\r\n    }\r\n\r\n    return this._dropdown.isShown;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emits an event when isOpen change\r\n   */\r\n  @Output() isOpenChange: EventEmitter<boolean>;\r\n\r\n  /**\r\n   * Emits an event when the popover is shown\r\n   */\r\n  @Output() onShown: EventEmitter<boolean>;\r\n\r\n  /**\r\n   * Emits an event when the popover is hidden\r\n   */\r\n  @Output() onHidden: EventEmitter<boolean>;\r\n\r\n  get isBs4(): boolean {\r\n    return !isBs3();\r\n  }\r\n\r\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\r\n\r\n  private get _showInline(): boolean {\r\n    return !this.container;\r\n  }\r\n\r\n  // todo: move to component loader\r\n  private _isInlineOpen = false;\r\n\r\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\r\n  private _isDisabled: boolean;\r\n  private _subscriptions: Subscription[] = [];\r\n  private _isInited = false;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _renderer: Renderer2,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              private _cis: ComponentLoaderFactory,\r\n              private _config: BsDropdownConfig,\r\n              private _state: BsDropdownState) {\r\n    // set initial dropdown state from config\r\n    this._state.autoClose = this._config.autoClose;\r\n    this._state.insideClick = this._config.insideClick;\r\n\r\n    // create dropdown component loader\r\n    this._dropdown = this._cis\r\n      .createLoader<BsDropdownContainerComponent>(\r\n        this._elementRef,\r\n        this._viewContainerRef,\r\n        this._renderer\r\n      )\r\n      .provide({provide: BsDropdownState, useValue: this._state});\r\n\r\n    this.onShown = this._dropdown.onShown;\r\n    this.onHidden = this._dropdown.onHidden;\r\n    this.isOpenChange = this._state.isOpenChange;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // fix: seems there are an issue with `routerLinkActive`\r\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\r\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\r\n    if (this._isInited) {\r\n      return;\r\n    }\r\n    this._isInited = true;\r\n\r\n    // attach DOM listeners\r\n    this._dropdown.listen({\r\n      // because of dropdown inline mode\r\n      outsideClick: false,\r\n      triggers: this.triggers,\r\n      show: () => this.show()\r\n    });\r\n\r\n    // toggle visibility on toggle element click\r\n    this._subscriptions.push(\r\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\r\n    );\r\n\r\n    // hide dropdown if set disabled while opened\r\n    this._subscriptions.push(\r\n      this._state.isDisabledChange\r\n        .pipe(\r\n          filter((value: boolean) => value)\r\n        )\r\n        .subscribe((value: boolean) => this.hide())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Opens an elementâs popover. This is considered a âmanualâ triggering of\r\n   * the popover.\r\n   */\r\n  show(): void {\r\n    if (this.isOpen || this.isDisabled) {\r\n      return;\r\n    }\r\n\r\n    if (this._showInline) {\r\n      if (!this._inlinedMenu) {\r\n        this._state.dropdownMenu.then(\r\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\r\n            this._dropdown.attachInline(\r\n              dropdownMenu.viewContainer,\r\n              dropdownMenu.templateRef\r\n            );\r\n            this._inlinedMenu = this._dropdown._inlineViewRef;\r\n            this.addBs4Polyfills();\r\n          }\r\n        )\r\n        // swallow errors\r\n          .catch();\r\n      }\r\n      this.addBs4Polyfills();\r\n      this._isInlineOpen = true;\r\n      this.onShown.emit(true);\r\n      this._state.isOpenChange.emit(true);\r\n\r\n      return;\r\n    }\r\n    this._state.dropdownMenu.then(dropdownMenu => {\r\n      // check direction in which dropdown should be opened\r\n      const _dropup =\r\n        this.dropup ||\r\n        (typeof this.dropup !== 'undefined' && this.dropup);\r\n      this._state.direction = _dropup ? 'up' : 'down';\r\n      const _placement =\r\n        this.placement || (_dropup ? 'top left' : 'bottom left');\r\n\r\n      // show dropdown\r\n      this._dropdown\r\n        .attach(BsDropdownContainerComponent)\r\n        .to(this.container)\r\n        .position({attachment: _placement})\r\n        .show({\r\n          content: dropdownMenu.templateRef,\r\n          placement: _placement\r\n        });\r\n\r\n      this._state.isOpenChange.emit(true);\r\n    })\r\n    // swallow error\r\n      .catch();\r\n  }\r\n\r\n  /**\r\n   * Closes an elementâs popover. This is considered a âmanualâ triggering of\r\n   * the popover.\r\n   */\r\n  hide(): void {\r\n    if (!this.isOpen) {\r\n      return;\r\n    }\r\n\r\n    if (this._showInline) {\r\n      this.removeShowClass();\r\n      this.removeDropupStyles();\r\n      this._isInlineOpen = false;\r\n      this.onHidden.emit(true);\r\n    } else {\r\n      this._dropdown.hide();\r\n    }\r\n\r\n    this._state.isOpenChange.emit(false);\r\n  }\r\n\r\n  /**\r\n   * Toggles an elementâs popover. This is considered a âmanualâ triggering of\r\n   * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\r\n   * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\r\n   */\r\n  toggle(value?: boolean): void {\r\n    if (this.isOpen || !value) {\r\n      return this.hide();\r\n    }\r\n\r\n    return this.show();\r\n  }\r\n\r\n  /** @internal */\r\n  _contains(event: any): boolean {\r\n    return this._elementRef.nativeElement.contains(event.target) ||\r\n      (this._dropdown.instance && this._dropdown.instance._contains(event.target));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // clean up subscriptions and destroy dropdown\r\n    for (const sub of this._subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n    this._dropdown.dispose();\r\n  }\r\n\r\n  private addBs4Polyfills(): void {\r\n    if (!isBs3()) {\r\n      this.addShowClass();\r\n      this.checkRightAlignment();\r\n      this.addDropupStyles();\r\n    }\r\n  }\r\n\r\n  private addShowClass(): void {\r\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\r\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\r\n    }\r\n  }\r\n\r\n  private removeShowClass(): void {\r\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\r\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\r\n    }\r\n  }\r\n\r\n  private checkRightAlignment(): void {\r\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\r\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\r\n        'dropdown-menu-right'\r\n      );\r\n      this._renderer.setStyle(\r\n        this._inlinedMenu.rootNodes[0],\r\n        'left',\r\n        isRightAligned ? 'auto' : '0'\r\n      );\r\n      this._renderer.setStyle(\r\n        this._inlinedMenu.rootNodes[0],\r\n        'right',\r\n        isRightAligned ? '0' : 'auto'\r\n      );\r\n    }\r\n  }\r\n\r\n  private addDropupStyles(): void {\r\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\r\n      // a little hack to not break support of bootstrap 4 beta\r\n      this._renderer.setStyle(\r\n        this._inlinedMenu.rootNodes[0],\r\n        'top',\r\n        this.dropup ? 'auto' : '100%'\r\n      );\r\n      this._renderer.setStyle(\r\n        this._inlinedMenu.rootNodes[0],\r\n        'transform',\r\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\r\n      );\r\n      this._renderer.setStyle(\r\n        this._inlinedMenu.rootNodes[0],\r\n        'bottom',\r\n        'auto'\r\n      );\r\n    }\r\n  }\r\n\r\n  private removeDropupStyles(): void {\r\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\r\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\r\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\r\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\r\n    }\r\n  }\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { BsDropdownState } from './bs-dropdown.state';\r\n\r\n@Directive({\r\n  selector: '[bsDropdownMenu],[dropdownMenu]',\r\n  exportAs: 'bs-dropdown-menu'\r\n})\r\nexport class BsDropdownMenuDirective {\r\n  // tslint:disable:no-any\r\n  constructor(\r\n    _state: BsDropdownState,\r\n    _viewContainer: ViewContainerRef,\r\n    _templateRef: TemplateRef<any>\r\n  ) {\r\n    _state.resolveDropdownMenu({\r\n      templateRef: _templateRef,\r\n      viewContainer: _viewContainer\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { BsDropdownState } from './bs-dropdown.state';\r\nimport { BsDropdownDirective } from './bs-dropdown.directive';\r\n\r\n@Directive({\r\n  selector: '[bsDropdownToggle],[dropdownToggle]',\r\n  exportAs: 'bs-dropdown-toggle',\r\n  host: {\r\n    '[attr.aria-haspopup]': 'true'\r\n  }\r\n})\r\nexport class BsDropdownToggleDirective implements OnDestroy {\r\n  @HostBinding('attr.disabled') isDisabled: boolean = null;\r\n\r\n  // @HostBinding('class.active')\r\n  @HostBinding('attr.aria-expanded') isOpen: boolean;\r\n\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  constructor(private _state: BsDropdownState, private _element: ElementRef, private dropdown: BsDropdownDirective) {\r\n    // sync is open value with state\r\n    this._subscriptions.push(\r\n      this._state.isOpenChange.subscribe(\r\n        (value: boolean) => (this.isOpen = value)\r\n      )\r\n    );\r\n    // populate disabled state\r\n    this._subscriptions.push(\r\n      this._state.isDisabledChange.subscribe(\r\n        (value: boolean) => (this.isDisabled = value || null)\r\n      )\r\n    );\r\n  }\r\n\r\n  @HostListener('click', [])\r\n  onClick(): void {\r\n    if (this.isDisabled) {\r\n      return;\r\n    }\r\n    this._state.toggleClick.emit(true);\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: MouseEvent): void {\r\n    if (\r\n      this._state.autoClose &&\r\n      event.button !== 2 &&\r\n      !this._element.nativeElement.contains(event.target) &&\r\n      !(this._state.insideClick && this.dropdown._contains(event))\r\n    ) {\r\n      this._state.toggleClick.emit(false);\r\n    }\r\n  }\r\n\r\n  @HostListener('keyup.esc')\r\n  onEsc(): void {\r\n    if (this._state.autoClose) {\r\n      this._state.toggleClick.emit(false);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const sub of this._subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\n\r\nimport { PositioningService } from 'ngx-bootstrap/positioning';\r\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\r\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\r\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\r\nimport { BsDropdownConfig } from './bs-dropdown.config';\r\n\r\nimport { BsDropdownDirective } from './bs-dropdown.directive';\r\nimport { BsDropdownState } from './bs-dropdown.state';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BsDropdownMenuDirective,\r\n    BsDropdownToggleDirective,\r\n    BsDropdownContainerComponent,\r\n    BsDropdownDirective\r\n  ],\r\n  exports: [\r\n    BsDropdownMenuDirective,\r\n    BsDropdownToggleDirective,\r\n    BsDropdownDirective\r\n  ],\r\n  entryComponents: [BsDropdownContainerComponent]\r\n})\r\nexport class BsDropdownModule {\r\n  // tslint:disable-next-line:no-any\r\n  static forRoot(config?: any): ModuleWithProviders {\r\n    return {\r\n      ngModule: BsDropdownModule,\r\n      providers: [\r\n        ComponentLoaderFactory,\r\n        PositioningService,\r\n        BsDropdownState,\r\n        {\r\n          provide: BsDropdownConfig,\r\n          useValue: config ? config : { autoClose: true, insideClick: false }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":["tslib_1.__values"],"mappings":"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"}
