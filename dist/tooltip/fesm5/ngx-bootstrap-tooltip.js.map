{"version":3,"file":"ngx-bootstrap-tooltip.js.map","sources":["ng://ngx-bootstrap/tooltip/tooltip.config.ts","ng://ngx-bootstrap/tooltip/tooltip-container.component.ts","ng://ngx-bootstrap/tooltip/tooltip.directive.ts","ng://ngx-bootstrap/tooltip/tooltip.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/** Default values provider for tooltip */\r\n@Injectable()\r\nexport class TooltipConfig {\r\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\r\n  placement = 'top';\r\n  /** array of event names which triggers tooltip opening */\r\n  triggers = 'hover focus';\r\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\r\n  container: string;\r\n  /** delay before showing the tooltip */\r\n  delay = 0;\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { TooltipConfig } from './tooltip.config';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\n\r\n@Component({\r\n  selector: 'bs-tooltip-container',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // tslint:disable-next-line\r\n  host: {\r\n    '[class]':\r\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\r\n    '[class.show]': '!isBs3',\r\n    '[class.bs3]': 'isBs3',\r\n    '[attr.id]': 'this.id',\r\n    role: 'tooltip'\r\n  },\r\n  styles: [\r\n    `\r\n    :host.tooltip {\r\n      display: block;\r\n      pointer-events: none;\r\n    }\r\n    :host.bs3.tooltip.top>.arrow {\r\n      margin-left: -2px;\r\n    }\r\n    :host.bs3.tooltip.bottom {\r\n      margin-top: 0px;\r\n    }\r\n    :host.bs3.bs-tooltip-left, :host.bs3.bs-tooltip-right{\r\n      margin: 0px;\r\n    }\r\n    :host.bs3.bs-tooltip-right .arrow, :host.bs3.bs-tooltip-left .arrow {\r\n      margin: .3rem 0;\r\n    }\r\n  `\r\n  ],\r\n  template: `\r\n    <div class=\"tooltip-arrow arrow\"></div>\r\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\r\n    `\r\n})\r\nexport class TooltipContainerComponent implements AfterViewInit {\r\n  classMap: { [key: string]: boolean };\r\n  placement: string;\r\n  containerClass: string;\r\n  animation: boolean;\r\n  id: string;\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  constructor(config: TooltipConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.classMap = { in: false, fade: false };\r\n    this.classMap[this.placement] = true;\r\n    this.classMap[`tooltip-${this.placement}`] = true;\r\n\r\n    this.classMap.in = true;\r\n    if (this.animation) {\r\n      this.classMap.fade = true;\r\n    }\r\n\r\n    if (this.containerClass) {\r\n      this.classMap[this.containerClass] = true;\r\n    }\r\n  }\r\n}\r\n","/* tslint:disable: max-file-line-count deprecation */\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { TooltipContainerComponent } from './tooltip-container.component';\r\nimport { TooltipConfig } from './tooltip.config';\r\n\r\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\nimport { OnChange, warnOnce, parseTriggers } from 'ngx-bootstrap/utils';\r\nimport { PositioningService } from 'ngx-bootstrap/positioning';\r\n\r\nimport { timer } from 'rxjs';\r\n\r\nlet id = 0;\r\n\r\n@Directive({\r\n  selector: '[tooltip], [tooltipHtml]',\r\n  exportAs: 'bs-tooltip'\r\n})\r\nexport class TooltipDirective implements OnInit, OnDestroy {\r\n  tooltipId = id++;\r\n  /**\r\n   * Content to be displayed as tooltip.\r\n   */\r\n  @OnChange()\r\n  @Input()\r\n  /* tslint:disable-next-line:no-any */\r\n  tooltip: string | TemplateRef<any>;\r\n  /** Fired when tooltip content changes */\r\n  @Output()\r\n  /* tslint:disable-next-line:no-any */\r\n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\r\n\r\n  /**\r\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  @Input() placement: string;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the tooltip should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n  /**\r\n   * Css class for tooltip container\r\n   */\r\n  @Input() containerClass = '';\r\n  /**\r\n   * Returns whether or not the tooltip is currently being shown\r\n   */\r\n  @Input()\r\n  get isOpen(): boolean {\r\n    return this._tooltip.isShown;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Allows to disable tooltip\r\n   */\r\n  @Input() isDisabled: boolean;\r\n\r\n  /**\r\n   * Delay before showing the tooltip\r\n   */\r\n  @Input() delay: number;\r\n\r\n  /**\r\n   * Emits an event when the tooltip is shown\r\n   */\r\n  /* tslint:disable-next-line:no-any */\r\n  @Output() onShown: EventEmitter<any>;\r\n  /**\r\n   * Emits an event when the tooltip is hidden\r\n   */\r\n  /* tslint:disable-next-line:no-any */\r\n  @Output() onHidden: EventEmitter<any>;\r\n\r\n  /** @deprecated - please use `tooltip` instead */\r\n  @Input('tooltipHtml')\r\n  /* tslint:disable-next-line:no-any */\r\n  set htmlContent(value: string | TemplateRef<any>) {\r\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\r\n    this.tooltip = value;\r\n  }\r\n\r\n  /** @deprecated - please use `placement` instead */\r\n  @Input('tooltipPlacement')\r\n  set _placement(value: string) {\r\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\r\n    this.placement = value;\r\n  }\r\n\r\n  /** @deprecated - please use `isOpen` instead */\r\n  @Input('tooltipIsOpen')\r\n  set _isOpen(value: boolean) {\r\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\r\n    this.isOpen = value;\r\n  }\r\n\r\n  get _isOpen(): boolean {\r\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\r\n\r\n    return this.isOpen;\r\n  }\r\n\r\n  /** @deprecated - please use `isDisabled` instead */\r\n  @Input('tooltipEnable')\r\n  set _enable(value: boolean) {\r\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\r\n    this.isDisabled = !value;\r\n  }\r\n\r\n  get _enable(): boolean {\r\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\r\n\r\n    return this.isDisabled;\r\n  }\r\n\r\n  /** @deprecated - please use `container=\"body\"` instead */\r\n  @Input('tooltipAppendToBody')\r\n  set _appendToBody(value: boolean) {\r\n    warnOnce(\r\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\r\n    );\r\n    this.container = value ? 'body' : this.container;\r\n  }\r\n\r\n  get _appendToBody(): boolean {\r\n    warnOnce(\r\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\r\n    );\r\n\r\n    return this.container === 'body';\r\n  }\r\n\r\n  /** @deprecated - removed, will be added to configuration */\r\n  @Input() tooltipAnimation = true;\r\n\r\n  /** @deprecated - will replaced with customClass */\r\n  @Input('tooltipClass')\r\n  set _popupClass(value: string) {\r\n    warnOnce('tooltipClass deprecated');\r\n  }\r\n\r\n  /** @deprecated - removed */\r\n  @Input('tooltipContext')\r\n  /* tslint:disable-next-line:no-any */\r\n  set _tooltipContext(value: any) {\r\n    warnOnce('tooltipContext deprecated');\r\n  }\r\n\r\n  /** @deprecated */\r\n  @Input('tooltipPopupDelay')\r\n  set _tooltipPopupDelay(value: number) {\r\n    warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\r\n    this.delay = value;\r\n  }\r\n\r\n  /** @deprecated */\r\n  @Input() tooltipFadeDuration = 150;\r\n\r\n  /** @deprecated -  please use `triggers` instead */\r\n  @Input('tooltipTrigger')\r\n  get _tooltipTrigger(): string | string[] {\r\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\r\n\r\n    return this.triggers;\r\n  }\r\n\r\n  set _tooltipTrigger(value: string | string[]) {\r\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\r\n    this.triggers = (value || '').toString();\r\n  }\r\n\r\n  @HostBinding('attr.aria-describedby') ariaDescribedby = `tooltip-${this.tooltipId}`;\r\n\r\n  /** @deprecated */\r\n  @Output()\r\n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  /* tslint:disable-next-line:no-any */\r\n  protected _delayTimeoutId: number | any;\r\n  protected _tooltipCancelShowFn: Function;\r\n\r\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\r\n  constructor(\r\n    _viewContainerRef: ViewContainerRef,\r\n    cis: ComponentLoaderFactory,\r\n    config: TooltipConfig,\r\n    private _elementRef: ElementRef,\r\n    private _renderer: Renderer2,\r\n    private _positionService: PositioningService\r\n  ) {\r\n\r\n    this._tooltip = cis\r\n      .createLoader<TooltipContainerComponent>(\r\n        this._elementRef,\r\n        _viewContainerRef,\r\n        this._renderer\r\n      )\r\n      .provide({provide: TooltipConfig, useValue: config});\r\n\r\n    Object.assign(this, config);\r\n    this.onShown = this._tooltip.onShown;\r\n    this.onHidden = this._tooltip.onHidden;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._positionService.setOptions({\r\n      modifiers: {\r\n        flip: {\r\n          enabled: true\r\n        }\r\n      }\r\n    });\r\n\r\n    this._tooltip.listen({\r\n      triggers: this.triggers,\r\n      show: () => this.show()\r\n    });\r\n    /* tslint:disable-next-line:no-any */\r\n    this.tooltipChange.subscribe((value: any) => {\r\n      if (!value) {\r\n        this._tooltip.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of\r\n   * the tooltip.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen) {\r\n      return this.hide();\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  /**\r\n   * Opens an elementâs tooltip. This is considered a âmanualâ triggering of\r\n   * the tooltip.\r\n   */\r\n  show(): void {\r\n    if (\r\n      this.isOpen ||\r\n      this.isDisabled ||\r\n      this._delayTimeoutId ||\r\n      !this.tooltip\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const showTooltip = () => {\r\n      if (this._delayTimeoutId) {\r\n        this._delayTimeoutId = undefined;\r\n      }\r\n\r\n      this._tooltip\r\n        .attach(TooltipContainerComponent)\r\n        .to(this.container)\r\n        .position({attachment: this.placement})\r\n        .show({\r\n          content: this.tooltip,\r\n          placement: this.placement,\r\n          containerClass: this.containerClass,\r\n          id: this.ariaDescribedby\r\n        });\r\n    };\r\n    const cancelDelayedTooltipShowing = () => {\r\n      if (this._tooltipCancelShowFn) {\r\n        this._tooltipCancelShowFn();\r\n      }\r\n    };\r\n\r\n    if (this.delay) {\r\n      const _timer = timer(this.delay).subscribe(() => {\r\n        showTooltip();\r\n        cancelDelayedTooltipShowing();\r\n      });\r\n\r\n      if (this.triggers) {\r\n        const triggers = parseTriggers(this.triggers);\r\n        this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, triggers[0].close, () => {\r\n          _timer.unsubscribe();\r\n          cancelDelayedTooltipShowing();\r\n        });\r\n      }\r\n    } else {\r\n      showTooltip();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes an elementâs tooltip. This is considered a âmanualâ triggering of\r\n   * the tooltip.\r\n   */\r\n  hide(): void {\r\n    if (this._delayTimeoutId) {\r\n      clearTimeout(this._delayTimeoutId);\r\n      this._delayTimeoutId = undefined;\r\n    }\r\n\r\n    if (!this._tooltip.isShown) {\r\n      return;\r\n    }\r\n\r\n    this._tooltip.instance.classMap.in = false;\r\n    setTimeout(() => {\r\n      this._tooltip.hide();\r\n    }, this.tooltipFadeDuration);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._tooltip.dispose();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { TooltipContainerComponent } from './tooltip-container.component';\r\nimport { TooltipDirective } from './tooltip.directive';\r\nimport { TooltipConfig } from './tooltip.config';\r\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\nimport { PositioningService } from 'ngx-bootstrap/positioning';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [TooltipDirective, TooltipContainerComponent],\r\n  exports: [TooltipDirective],\r\n  entryComponents: [TooltipContainerComponent]\r\n})\r\nexport class TooltipModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: TooltipModule,\r\n      providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}
