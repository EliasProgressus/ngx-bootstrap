{"version":3,"sources":["ng://ngx-bootstrap/component-loader/bs-component-ref.class.ts","ng://ngx-bootstrap/component-loader/content-ref.class.ts","ng://ngx-bootstrap/component-loader/component-loader.class.ts","ng://ngx-bootstrap/component-loader/component-loader.factory.ts"],"names":["BsComponentRef","ContentRef","nodes","viewRef","componentRef","this","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","EventEmitter","Function","prototype","Object","defineProperty","_isHiding","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","provide","provider","_providers","push","show","_subscribePositioning","_innerComponent","onBeforeShow","emit","_contentRef","_getContentRef","content","context","initialState","injector","Injector","create","providers","parent","attachView","hostView","instance","assign","ElementRef","nativeElement","appendChild","location","document","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","onShown","_registerOutsideClick","hide","deletePositionElement","onBeforeHide","componentEl","parentNode","removeChild","destroy","remove","indexOf","_removeGlobalListener","onHidden","toggle","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listen","listenOpts","_this","triggers","_listenOpts","outsideClick","outsideEsc","target","registerHide","listenToTriggersV2","_globalListener","attachInline","vRef","template","_inlineViewRef","createEmbeddedView","target_1","setTimeout","registerOutsideClick","targets","registerEscClick","getInnerComponent","_zoneSubscription","onStable","subscribe","element","appendToBody","unsubscribe","TemplateRef","_viewRef","rootNodes","createText","contentCmptFactory","modalContentInjector","ComponentLoaderFactory","createLoader","Injectable","ComponentFactoryResolver","NgZone","PositioningService","ApplicationRef"],"mappings":"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","sourcesContent":["import { TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\nexport class BsComponentRef<T> {\r\n  templateRef: TemplateRef<T>;\r\n  viewContainer: ViewContainerRef;\r\n}\r\n","/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\r\n\r\nimport { ComponentRef, ViewRef } from '@angular/core';\r\n\r\nexport class ContentRef {\r\n  /* tslint:disable-next-line: no-any */\r\n  nodes: any[];\r\n  viewRef?: ViewRef;\r\n  /* tslint:disable-next-line: no-any */\r\n  componentRef?: ComponentRef<any>;\r\n\r\n  constructor(\r\n    /* tslint:disable-next-line: no-any */\r\n    nodes: any[],\r\n    viewRef?: ViewRef,\r\n    /* tslint:disable-next-line: no-any */\r\n    componentRef?: ComponentRef<any>\r\n  ) {\r\n    this.nodes = nodes;\r\n    this.viewRef = viewRef;\r\n    this.componentRef = componentRef;\r\n  }\r\n}\r\n","// tslint:disable:max-file-line-count\r\n// todo: add delay support\r\n// todo: merge events onShow, onShown, etc...\r\n// todo: add global positioning configuration?\r\nimport {\r\n  ApplicationRef,\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ElementRef,\r\n  EmbeddedViewRef,\r\n  EventEmitter,\r\n  Injector,\r\n  NgZone,\r\n  Renderer2,\r\n  StaticProvider,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { PositioningOptions, PositioningService } from 'ngx-bootstrap/positioning';\r\n\r\nimport {\r\n  listenToTriggersV2,\r\n  registerEscClick,\r\n  registerOutsideClick\r\n} from 'ngx-bootstrap/utils';\r\n\r\nimport { ContentRef } from './content-ref.class';\r\nimport { ListenOptions } from './listen-options.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport class ComponentLoader<T> {\r\n  onBeforeShow: EventEmitter<void> = new EventEmitter();\r\n  /* tslint:disable-next-line: no-any*/\r\n  onShown: EventEmitter<any> = new EventEmitter();\r\n  /* tslint:disable-next-line: no-any*/\r\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\r\n  onHidden: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  instance: T;\r\n  _componentRef: ComponentRef<T>;\r\n  _inlineViewRef: EmbeddedViewRef<T>;\r\n\r\n  private _providers: StaticProvider[] = [];\r\n  private _componentFactory: ComponentFactory<T>;\r\n  private _zoneSubscription: Subscription;\r\n  private _contentRef: ContentRef;\r\n  private _innerComponent: ComponentRef<T>;\r\n\r\n  private _unregisterListenersFn: Function;\r\n\r\n  get isShown(): boolean {\r\n    if (this._isHiding) {\r\n      return false;\r\n    }\r\n\r\n    return !!this._componentRef;\r\n  }\r\n\r\n  private _isHiding = false;\r\n\r\n  /**\r\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  private attachment: string;\r\n\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  /* tslint:disable-next-line: no-any*/\r\n  private container: string | ElementRef | any;\r\n\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  private triggers: string;\r\n\r\n  private _listenOpts: ListenOptions = {};\r\n  private _globalListener = Function.prototype;\r\n\r\n  /**\r\n   * Do not use this directly, it should be instanced via\r\n   * `ComponentLoadFactory.attach`\r\n   * @internal\r\n   */\r\n  // tslint:disable-next-line\r\n  public constructor(\r\n    private _viewContainerRef: ViewContainerRef,\r\n    private _renderer: Renderer2,\r\n    private _elementRef: ElementRef,\r\n    private _injector: Injector,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _ngZone: NgZone,\r\n    private _applicationRef: ApplicationRef,\r\n    private _posService: PositioningService\r\n  ) {}\r\n\r\n  attach(compType: Type<T>): ComponentLoader<T> {\r\n    this._componentFactory = this._componentFactoryResolver\r\n      .resolveComponentFactory<T>(compType);\r\n\r\n    return this;\r\n  }\r\n\r\n  // todo: add behaviour: to target element, `body`, custom element\r\n  to(container?: string | ElementRef): ComponentLoader<T> {\r\n    this.container = container || this.container;\r\n\r\n    return this;\r\n  }\r\n\r\n  position(opts?: PositioningOptions): ComponentLoader<T> {\r\n    this.attachment = opts.attachment || this.attachment;\r\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\r\n\r\n    return this;\r\n  }\r\n\r\n  provide(provider: StaticProvider): ComponentLoader<T> {\r\n    this._providers.push(provider);\r\n\r\n    return this;\r\n  }\r\n\r\n  // todo: appendChild to element or document.querySelector(this.container)\r\n\r\n  show(opts: {\r\n    /* tslint:disable-next-line: no-any*/\r\n    content?: string | TemplateRef<any>;\r\n    /* tslint:disable-next-line: no-any*/\r\n    context?: any;\r\n    /* tslint:disable-next-line: no-any*/\r\n    initialState?: any;\r\n    /* tslint:disable-next-line: no-any*/\r\n    [key: string]: any;\r\n  } = {}\r\n  ): ComponentRef<T> {\r\n\r\n    this._subscribePositioning();\r\n    this._innerComponent = null;\r\n\r\n    if (!this._componentRef) {\r\n      this.onBeforeShow.emit();\r\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\r\n\r\n      const injector = Injector.create({\r\n        providers: this._providers,\r\n        parent: this._injector\r\n      });\r\n\r\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\r\n      this._applicationRef.attachView(this._componentRef.hostView);\r\n      // this._componentRef = this._viewContainerRef\r\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\r\n      this.instance = this._componentRef.instance;\r\n\r\n      Object.assign(this._componentRef.instance, opts);\r\n\r\n      if (this.container instanceof ElementRef) {\r\n        this.container.nativeElement.appendChild(\r\n          this._componentRef.location.nativeElement\r\n        );\r\n      }\r\n\r\n      if (this.container === 'body' && typeof document !== 'undefined') {\r\n        document\r\n          .querySelector(this.container as string)\r\n          .appendChild(this._componentRef.location.nativeElement);\r\n      }\r\n\r\n      if (\r\n        !this.container &&\r\n        this._elementRef &&\r\n        this._elementRef.nativeElement.parentElement\r\n      ) {\r\n        this._elementRef.nativeElement.parentElement.appendChild(\r\n          this._componentRef.location.nativeElement\r\n        );\r\n      }\r\n\r\n      // we need to manually invoke change detection since events registered\r\n      // via\r\n      // Renderer::listen() are not picked up by change detection with the\r\n      // OnPush strategy\r\n      if (this._contentRef.componentRef) {\r\n        this._innerComponent = this._contentRef.componentRef.instance;\r\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\r\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\r\n      }\r\n      this._componentRef.changeDetectorRef.markForCheck();\r\n      this._componentRef.changeDetectorRef.detectChanges();\r\n      this.onShown.emit(this._componentRef.instance);\r\n    }\r\n\r\n    this._registerOutsideClick();\r\n\r\n    return this._componentRef;\r\n  }\r\n\r\n  hide(): ComponentLoader<T> {\r\n    if (!this._componentRef) {\r\n      return this;\r\n    }\r\n\r\n    this._posService.deletePositionElement(this._componentRef.location);\r\n\r\n    this.onBeforeHide.emit(this._componentRef.instance);\r\n\r\n    const componentEl = this._componentRef.location.nativeElement;\r\n    componentEl.parentNode.removeChild(componentEl);\r\n    if (this._contentRef.componentRef) {\r\n      this._contentRef.componentRef.destroy();\r\n    }\r\n    this._componentRef.destroy();\r\n    if (this._viewContainerRef && this._contentRef.viewRef) {\r\n      this._viewContainerRef.remove(\r\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\r\n      );\r\n    }\r\n    if (this._contentRef.viewRef) {\r\n      this._contentRef.viewRef.destroy();\r\n    }\r\n\r\n    this._contentRef = null;\r\n    this._componentRef = null;\r\n    this._removeGlobalListener();\r\n\r\n    this.onHidden.emit();\r\n\r\n    return this;\r\n  }\r\n\r\n  toggle(): void {\r\n    if (this.isShown) {\r\n      this.hide();\r\n\r\n      return;\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  dispose(): void {\r\n    if (this.isShown) {\r\n      this.hide();\r\n    }\r\n\r\n    this._unsubscribePositioning();\r\n\r\n    if (this._unregisterListenersFn) {\r\n      this._unregisterListenersFn();\r\n    }\r\n  }\r\n\r\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\r\n    this.triggers = listenOpts.triggers || this.triggers;\r\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\r\n    this._listenOpts.outsideEsc = listenOpts.outsideEsc;\r\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\r\n\r\n    const hide = (this._listenOpts.hide = () =>\r\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\r\n    const show = (this._listenOpts.show = (registerHide: Function) => {\r\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\r\n      registerHide();\r\n    });\r\n\r\n    const toggle = (registerHide: Function) => {\r\n      this.isShown ? hide() : show(registerHide);\r\n    };\r\n\r\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\r\n      target: listenOpts.target,\r\n      triggers: listenOpts.triggers,\r\n      show,\r\n      hide,\r\n      toggle\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  _removeGlobalListener() {\r\n    if (this._globalListener) {\r\n      this._globalListener();\r\n      this._globalListener = null;\r\n    }\r\n  }\r\n\r\n  attachInline(\r\n    vRef: ViewContainerRef,\r\n    /* tslint:disable-next-line: no-any*/\r\n    template: TemplateRef<any>\r\n  ): ComponentLoader<T> {\r\n    this._inlineViewRef = vRef.createEmbeddedView(template);\r\n\r\n    return this;\r\n  }\r\n\r\n  _registerOutsideClick(): void {\r\n    if (!this._componentRef || !this._componentRef.location) {\r\n      return;\r\n    }\r\n    // why: should run after first event bubble\r\n    if (this._listenOpts.outsideClick) {\r\n      const target = this._componentRef.location.nativeElement;\r\n      setTimeout(() => {\r\n        this._globalListener = registerOutsideClick(this._renderer, {\r\n          targets: [target, this._elementRef.nativeElement],\r\n          outsideClick: this._listenOpts.outsideClick,\r\n          hide: () => this._listenOpts.hide()\r\n        });\r\n      });\r\n    }\r\n    if (this._listenOpts.outsideEsc) {\r\n      const target = this._componentRef.location.nativeElement;\r\n      this._globalListener = registerEscClick(this._renderer, {\r\n        targets: [target, this._elementRef.nativeElement],\r\n        outsideEsc: this._listenOpts.outsideEsc,\r\n        hide: () => this._listenOpts.hide()\r\n      });\r\n    }\r\n  }\r\n\r\n  getInnerComponent(): ComponentRef<T> {\r\n    return this._innerComponent;\r\n  }\r\n\r\n  private _subscribePositioning(): void {\r\n    if (this._zoneSubscription || !this.attachment) {\r\n      return;\r\n    }\r\n\r\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\r\n      if (!this._componentRef) {\r\n        return;\r\n      }\r\n      this._posService.position({\r\n        element: this._componentRef.location,\r\n        target: this._elementRef,\r\n        attachment: this.attachment,\r\n        appendToBody: this.container === 'body'\r\n      });\r\n    });\r\n  }\r\n\r\n  private _unsubscribePositioning(): void {\r\n    if (!this._zoneSubscription) {\r\n      return;\r\n    }\r\n\r\n    this._zoneSubscription.unsubscribe();\r\n    this._zoneSubscription = null;\r\n  }\r\n\r\n  private _getContentRef(\r\n    /* tslint:disable-next-line: no-any*/\r\n    content: string | TemplateRef<any> | any,\r\n    /* tslint:disable-next-line: no-any*/\r\n    context?: any,\r\n    /* tslint:disable-next-line: no-any*/\r\n    initialState?: any\r\n  ): ContentRef {\r\n    if (!content) {\r\n      return new ContentRef([]);\r\n    }\r\n\r\n    if (content instanceof TemplateRef) {\r\n      if (this._viewContainerRef) {\r\n        const _viewRef = this._viewContainerRef\r\n          .createEmbeddedView<TemplateRef<T>>(content, context);\r\n        _viewRef.markForCheck();\r\n\r\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\r\n      }\r\n      const viewRef = content.createEmbeddedView({});\r\n      this._applicationRef.attachView(viewRef);\r\n\r\n      return new ContentRef([viewRef.rootNodes], viewRef);\r\n    }\r\n\r\n    if (typeof content === 'function') {\r\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\r\n        content\r\n      );\r\n\r\n      const modalContentInjector = Injector.create({\r\n        providers: this._providers,\r\n        parent: this._injector\r\n      });\r\n\r\n      const componentRef = contentCmptFactory.create(modalContentInjector);\r\n      Object.assign(componentRef.instance, initialState);\r\n      this._applicationRef.attachView(componentRef.hostView);\r\n\r\n      return new ContentRef(\r\n        [[componentRef.location.nativeElement]],\r\n        componentRef.hostView,\r\n        componentRef\r\n      );\r\n    }\r\n\r\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\r\n  }\r\n}\r\n","import {\r\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\r\n  NgZone, Renderer2, ViewContainerRef\r\n} from '@angular/core';\r\nimport { ComponentLoader } from './component-loader.class';\r\nimport { PositioningService } from 'ngx-bootstrap/positioning';\r\n\r\n@Injectable()\r\nexport class ComponentLoaderFactory {\r\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\r\n              private _ngZone: NgZone,\r\n              private _injector: Injector,\r\n              private _posService: PositioningService,\r\n              private _applicationRef: ApplicationRef) {}\r\n\r\n  /**\r\n   *\r\n   * @param _elementRef\r\n   * @param _viewContainerRef\r\n   * @param _renderer\r\n   */\r\n  createLoader<T>(_elementRef: ElementRef,\r\n                  _viewContainerRef: ViewContainerRef,\r\n                  _renderer: Renderer2): ComponentLoader<T> {\r\n    return new ComponentLoader<T>(\r\n      _viewContainerRef,\r\n      _renderer,\r\n      _elementRef,\r\n      this._injector,\r\n      this._componentFactoryResolver,\r\n      this._ngZone,\r\n      this._applicationRef,\r\n      this._posService\r\n    );\r\n  }\r\n}\r\n"]}