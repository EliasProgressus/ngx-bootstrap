{"version":3,"sources":["ng://ngx-bootstrap/chronos/utils.ts","ng://ngx-bootstrap/chronos/utils/type-checks.ts","ng://ngx-bootstrap/chronos/units/aliases.ts","ng://ngx-bootstrap/chronos/units/constants.ts","ng://ngx-bootstrap/chronos/utils/zero-fill.ts","ng://ngx-bootstrap/chronos/format/format.ts","ng://ngx-bootstrap/chronos/create/date-from-array.ts","ng://ngx-bootstrap/chronos/utils/date-getters.ts","ng://ngx-bootstrap/chronos/parse/regex.ts","ng://ngx-bootstrap/chronos/parse/token.ts","ng://ngx-bootstrap/chronos/create/parsing-flags.ts","ng://ngx-bootstrap/chronos/units/year.ts","ng://ngx-bootstrap/chronos/units/month.ts","ng://ngx-bootstrap/chronos/utils/date-setters.ts","ng://ngx-bootstrap/chronos/create/clone.ts","ng://ngx-bootstrap/chronos/utils/start-end-of.ts","ng://ngx-bootstrap/chronos/units/day-of-week.ts","ng://ngx-bootstrap/chronos/units/day-of-year.ts","ng://ngx-bootstrap/chronos/units/week-calendar-utils.ts","ng://ngx-bootstrap/chronos/locale/locale.class.ts","ng://ngx-bootstrap/chronos/locale/calendar.ts","ng://ngx-bootstrap/chronos/locale/locale.defaults.ts","ng://ngx-bootstrap/chronos/utils/compare-arrays.ts","ng://ngx-bootstrap/chronos/units/week.ts","ng://ngx-bootstrap/chronos/units/week-year.ts","ng://ngx-bootstrap/chronos/units/timestamp.ts","ng://ngx-bootstrap/chronos/units/quarter.ts","ng://ngx-bootstrap/chronos/units/offset.ts","ng://ngx-bootstrap/chronos/units/hour.ts","ng://ngx-bootstrap/chronos/locale/locales.ts","ng://ngx-bootstrap/chronos/units/timezone.ts","ng://ngx-bootstrap/chronos/units/second.ts","ng://ngx-bootstrap/chronos/units/minute.ts","ng://ngx-bootstrap/chronos/units/millisecond.ts","ng://ngx-bootstrap/chronos/units/day-of-month.ts","ng://ngx-bootstrap/chronos/duration/valid.ts","ng://ngx-bootstrap/chronos/utils/abs-ceil.ts","ng://ngx-bootstrap/chronos/duration/bubble.ts","ng://ngx-bootstrap/chronos/duration/humanize.ts","ng://ngx-bootstrap/chronos/duration/constructor.ts","ng://ngx-bootstrap/chronos/create/valid.ts","ng://ngx-bootstrap/chronos/create/from-string.ts","ng://ngx-bootstrap/chronos/format.ts","ng://ngx-bootstrap/chronos/utils/defaults.ts","ng://ngx-bootstrap/chronos/create/from-array.ts","ng://ngx-bootstrap/chronos/create/check-overflow.ts","ng://ngx-bootstrap/chronos/create/from-string-and-format.ts","ng://ngx-bootstrap/chronos/create/from-object.ts","ng://ngx-bootstrap/chronos/create/from-anything.ts","ng://ngx-bootstrap/chronos/create/from-string-and-array.ts","ng://ngx-bootstrap/chronos/create/local.ts","ng://ngx-bootstrap/chronos/utils/abs-round.ts","ng://ngx-bootstrap/chronos/utils/date-compare.ts","ng://ngx-bootstrap/chronos/duration/create.ts","ng://ngx-bootstrap/chronos/moment/add-subtract.ts","ng://ngx-bootstrap/chronos/i18n/ar.ts","ng://ngx-bootstrap/chronos/i18n/bg.ts","ng://ngx-bootstrap/chronos/i18n/ca.ts","ng://ngx-bootstrap/chronos/i18n/cs.ts","ng://ngx-bootstrap/chronos/i18n/da.ts","ng://ngx-bootstrap/chronos/i18n/de.ts","ng://ngx-bootstrap/chronos/i18n/en-gb.ts","ng://ngx-bootstrap/chronos/i18n/es-do.ts","ng://ngx-bootstrap/chronos/i18n/es.ts","ng://ngx-bootstrap/chronos/i18n/es-us.ts","ng://ngx-bootstrap/chronos/i18n/fi.ts","ng://ngx-bootstrap/chronos/i18n/fr.ts","ng://ngx-bootstrap/chronos/i18n/gl.ts","ng://ngx-bootstrap/chronos/i18n/he.ts","ng://ngx-bootstrap/chronos/i18n/hi.ts","ng://ngx-bootstrap/chronos/i18n/hu.ts","ng://ngx-bootstrap/chronos/i18n/id.ts","ng://ngx-bootstrap/chronos/i18n/it.ts","ng://ngx-bootstrap/chronos/i18n/ja.ts","ng://ngx-bootstrap/chronos/i18n/ko.ts","ng://ngx-bootstrap/chronos/i18n/lt.ts","ng://ngx-bootstrap/chronos/i18n/mn.ts","ng://ngx-bootstrap/chronos/i18n/nb.ts","ng://ngx-bootstrap/chronos/i18n/nl-be.ts","ng://ngx-bootstrap/chronos/i18n/nl.ts","ng://ngx-bootstrap/chronos/i18n/pl.ts","ng://ngx-bootstrap/chronos/i18n/pt-br.ts","ng://ngx-bootstrap/chronos/i18n/ro.ts","ng://ngx-bootstrap/chronos/i18n/ru.ts","ng://ngx-bootstrap/chronos/i18n/sk.ts","ng://ngx-bootstrap/chronos/i18n/sl.ts","ng://ngx-bootstrap/chronos/i18n/sv.ts","ng://ngx-bootstrap/chronos/i18n/th.ts","ng://ngx-bootstrap/chronos/i18n/tr.ts","ng://ngx-bootstrap/chronos/i18n/zh-cn.ts"],"names":["absFloor","num","Math","ceil","floor","isString","str","isDate","value","Date","Object","prototype","toString","call","isDateValid","date","getTime","isNaN","isFunction","fn","Function","isNumber","isArray","input","Array","hasOwnProp","a","b","hasOwnProperty","isObject","isUndefined","toInt","argumentForCoercion","coercedNumber","isFinite","aliases","_mapUnits","hour","minute","second","millisecond","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","_unit","normalizeUnits","units","undefined","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","zeroFill","targetLength","forceSign","absNumber","abs","zerosToFill","length","pow","max","substr","formatFunctions","formatTokenFunctions","formattingTokens","addFormatToken","token","padded","ordinal","callback","apply","arguments","opts","locale","createUTCDate","y","m","d","UTC","getUTCFullYear","setUTCFullYear","createDate","h","M","s","ms","getFullYear","setFullYear","getHours","isUTC","getUTCHours","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getMilliseconds","getUTCMilliseconds","getDay","getUTCDay","getDate","getUTCDate","getMonth","getUTCMonth","isSameMonth","date1","date2","isSameYear","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","unescapeFormat","regexEscape","replace","matched","p1","p2","p3","p4","tokens","addParseToken","_token","func","array","config","i","addWeekParseToken","_w","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getYear","parseTwoDigitYear","daysInYear","year","isLeapYear","daysInMonth$1","month","NaN","modMonth","mod","n","x","defaultTimeUnit","day","seconds","getNum","def","setMonth","dayOfMonth","min","daysInMonth","setUTCMonth","setDate","setUTCDate","cloneDate","startOf","_date","setHours","setUTCHours","setMinutes","setUTCMinutes","setSeconds","setUTCSeconds","setMilliseconds","setUTCMilliseconds","setLocaleDayOfWeek","weekday","getLocaleDayOfWeek","add","setISODayOfWeek","parseIsoWeekday","getLocale","weekdaysParse","setDayOfWeek","getDayOfWeek","endOf","subtract","getDayOfYear","someDate","round","firstWeekOffset","dow","doy","fwd","weekOfYear","resWeek","resYear","weekOffset","week","weeksInYear","weekOffsetNext","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultMonthsShortRegex","defaultMonthsRegex","Locale","this","set","confKey","prop","_config","calendar","key","now","output","_calendar","longDateFormat","format","_longDateFormat","formatUpper","toUpperCase","val","slice","defineProperty","_invalidDate","_ordinal","preparse","postformat","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","months","_months","standalone","isFormat","test","monthsShort","_monthsShort","monthsParse","monthName","strict","_monthsParseExact","handleMonthStrictParse","_monthsParse","_longMonthsParse","_shortMonthsParse","_shortMonths","monthsRegex","computeMonthsParse","_monthsStrictRegex","_monthsRegex","monthsShortRegex","_monthsShortStrictRegex","_monthsShortRegex","_week","firstDayOfWeek","firstDayOfYear","weekdays","_weekdays","_key","weekdaysMin","_weekdaysMin","weekdaysShort","_weekdaysShort","weekdayName","_weekdaysParseExact","handleWeekStrictParse","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","isPM","charAt","hours","minutes","isLower","formatLongDate","ii","mom","llc","toLocaleLowerCase","indexOf","shortPieces","longPieces","mixedPieces","push","sort","cmpLenRev","join","minPieces","minp","shortp","longp","baseConfig","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","invalidDate","dayOfMonthOrdinalParse","future","past","ss","mm","hh","dd","MM","yy","meridiemParse","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","initWeek","getWeek","getISOWeek","addWeekYearFormatToken","getter","_getWeekYearFormatCb","getWeekYear","_getISOWeekYearFormatCb","getISOWeekYear","initTimestamp","unix","valueOf","_d","parseFloat","initQuarter","getQuarter","addOffsetFormatToken","separator","offset","getUTCOffset","_offset","_isUTC","getDateOffset","getTimezoneOffset","sign","initOffset","_useUTC","_tzm","offsetFromString","matcher","matches","match","parts","chunkOffset","parseInt","_min","initHour","hFormat","lowercase","matchMeridiem","_meridiemParse","kFormat","kInput","_isPm","_locale","_meridiem","bigHour","pos","pos1","pos2","globalLocale","locales","localeFamilies","normalizeLocale","mergeConfigs","parentConfig","childConfig","parentProp","res","assign","childProp","loadLocale","name","console","error","getSetGlobalLocale","values","data","defineLocale","_abbr","abbr","parentLocale","forEach","setDefaultLocale","initWeekYear","initYear","initTimezone","initSecond","initMonth","_strict","initMinute","initMillisecond","parseMs","initDayOfYear","_dayOfYear","initDayOfWeek","getISODayOfWeek","invalidWeekday","initDayOfMonth","_dayOfMonthOrdinalParse","_ordinalParse","chooseLocale","names","next","j","ordering","orderingHash","reduce","mem","order","absCeil","number","daysToMonths","monthsToDays","thresholds","Duration","duration","normalizedInput","years","quarters","quarter","weeks","days","milliseconds","_isValid","isDurationValid","keys","some","unitHasDecimal","_milliseconds","_days","bubble","dur","_data","monthsFromDays","isValid","humanize","withSuffix","localeData","posNegDuration","createDuration","as","substituteTimeAgo","localeKey","mathAbs","_units","Error","flags","parsedParts","isNowValid","isFrozen","createInvalid","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","_i","allowTime","dateFormat","timeFormat","tzFormat","l","exec","_f","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","configFromRFC2822","preprocessRFC2822","trim","markInvalid","parsedArray","checkWeekday","weekdayStr","parsedInput","_a","calculateOffset","obsOffset","militaryOffset","numOffset","hm","expandFormat","_format","localFormattingTokens","replaceLongDateFormatTokens","lastIndex","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","currentDateArray","nowValue","dayOfYearFromWeekInfo","w","weekYear","temp","weekdayOverflow","GG","W","E","curWeek","gg","e","_overflowWeeks","_overflowWeekday","dayOfYearFromWeeks","resDayOfYear","dayOfYear","_overflowDayOfYear","_nextDay","checkOverflow","ISO_8601","RFC_2822","skipped","totalParsedInputLength","inputLength","meridiemFixWrap","_hour","meridiemHour","isPm","configFromObject","normalizeObjectUnits","inputObject","normalizedProp","map","obj","createFromConfig","prepareConfig","_l","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromInput","configFromString","_arr","createLocalOrUTC","_input","isObjectEmpty","getOwnPropertyNames","k","parseDate","absRound","isAfter","isBefore","aspNetRegex","isoRegex","convertDuration","isDuration","parseIso","diffRes","momentsDifference","base","other","_other","cloneWithOffset","offsetDiff","setTime","positiveMomentsDifference","from","to","inp","period","addSubtract","isAdding","parseWeekday","_num","_weekDay","symbolMap","1","2","3","4","5","6","7","8","9","0","numberMap","١","٢","٣","٤","٥","٦","٧","٨","٩","٠","pluralForm","plurals","pluralize","u","f","arLocale","weekdaysParseExact","bgLocale","Number","lastDigit","last2Digits","monthsShortDot","caLocale","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","plural","translate","csLocale","months$1","monthsShort$1","daLocale","processRelativeTime","deLocale","monthsParseExact","enGbLocale","esDoLocale","monthsRegex$1","monthsParse$1","esLocale","monthsRegex$2","monthsParse$2","esUsLocale","numbersPast","numbersFuture","translate$1","verbalNumber","fiLocale","ll","lll","llll","frLocale","glLocale","monthsRegex$3","monthsParse$3","heLocale","१","२","३","४","५","६","७","८","९","०","hiLocale","weekEndings","translate$2","huLocale","idLocale","itLocale","jaLocale","koLocale","isUpper","translateSingular","forms","special","translate$3","ltLocale","translateSeconds","translate$4","mnLocale","nbLocale","monthsShortWithDots","monthsShortWithoutDots","nlBeLocale","monthsRegex$4","monthsParse$4","nlLocale","monthsRegex$5","monthsParse$5","monthsNominative","monthsSubjective","plural$1","translate$5","plLocale","ptBrLocale","relativeTimeWithPlural","roLocale","relativeTimeWithPlural$1","plural$2","word","ruLocale","monthsParse$6","plural$3","translate$6","skLocale","processRelativeTime$1","slLocale","svLocale","thLocale","suffixes","70","80","20","50","100","10","30","60","90","trLocale","zhCnLocale","isFirstDayOfWeek","isSameDay","getFirstDayOfMonth","formatDate","formatMoment","makeFormatFunction","formatArr","listLocales","updateLocale","tmpLocale","isDisabledDay","daysDisabled","isSame","inputMs","shiftDate","setFullDate"],"mappings":"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","sourcesContent":["\r\n\r\nexport function mod(n: number, x: number): number {\r\n  return (n % x + x) % x;\r\n}\r\n\r\nexport function absFloor(num: number): number {\r\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\r\n}\r\n\r\n","import { absFloor } from '../utils';\r\n\r\nexport function isString(str: any): str is string {\r\n  return typeof str === 'string';\r\n}\r\n\r\nexport function isDate(value: any): value is Date {\r\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\r\n}\r\n\r\nexport function isBoolean(value: any): value is boolean {\r\n  return value === true || value === false;\r\n}\r\n\r\nexport function isDateValid(date: Date): boolean {\r\n  return date && date.getTime && !isNaN(date.getTime());\r\n}\r\n\r\nexport function isFunction(fn: any): fn is Function {\r\n  return (\r\n    fn instanceof Function ||\r\n    Object.prototype.toString.call(fn) === '[object Function]'\r\n  );\r\n}\r\n\r\nexport function isNumber(value?: any): value is number {\r\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\r\n}\r\n\r\nexport function isArray<T>(input?: any): input is T[] {\r\n  return (\r\n    input instanceof Array ||\r\n    Object.prototype.toString.call(input) === '[object Array]'\r\n  );\r\n}\r\n\r\n// TODO: returned type should be changed to \"b is Extract<keyof T, string>\"\r\n// after update to typescript 3.1.1 (issue 4728)\r\nexport function hasOwnProp<T>(a: T /*object*/, b: string): boolean {\r\n  return Object.prototype.hasOwnProperty.call(a, b);\r\n}\r\n\r\nexport function isObject<T>(input: any /*object*/): input is T {\r\n  // IE8 will treat undefined and null as object if it wasn't for\r\n  // input != null\r\n  return (\r\n    input != null && Object.prototype.toString.call(input) === '[object Object]'\r\n  );\r\n}\r\n\r\nexport function isObjectEmpty(obj: any): boolean {\r\n  if (Object.getOwnPropertyNames) {\r\n    return (Object.getOwnPropertyNames(obj).length === 0);\r\n  }\r\n  let k;\r\n  for (k in obj) {\r\n    if (obj.hasOwnProperty(k)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n\r\nexport function isUndefined(input: any): boolean {\r\n  return input === void 0;\r\n}\r\n\r\nexport function toInt<T>(argumentForCoercion: string | number | T): number {\r\n  const coercedNumber = +argumentForCoercion;\r\n  let value = 0;\r\n\r\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\r\n    value = absFloor(coercedNumber);\r\n  }\r\n\r\n  return value;\r\n}\r\n","import { hasOwnProp, isString } from '../utils/type-checks';\r\nimport { DateObject, UnitOfTime } from '../types';\r\n\r\nconst aliases: { [key: string]: string } = {};\r\n\r\nexport type ExtendedUnitOfTime = UnitOfTime | 'date' | 'week' | 'isoWeek' | 'dayOfYear' |\r\n  'weekday' | 'isoWeekday' | 'second' | 'millisecond' | 'minute' | 'hour' | 'quarter' | 'weekYear' | 'isoWeekYear';\r\n\r\nconst _mapUnits: { [key: string]: UnitOfTime } = {\r\n  date: 'day',\r\n  hour: 'hours',\r\n  minute: 'minutes',\r\n  second: 'seconds',\r\n  millisecond: 'milliseconds'\r\n};\r\n\r\nexport function addUnitAlias(unit: ExtendedUnitOfTime, shorthand: string): void {\r\n  const lowerCase = unit.toLowerCase();\r\n  let _unit = unit;\r\n  if (lowerCase in _mapUnits) {\r\n    _unit = _mapUnits[lowerCase];\r\n  }\r\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\r\n}\r\n\r\nexport function normalizeUnits(units: string | string[]): string {\r\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\r\n}\r\n\r\nexport function normalizeObjectUnits(inputObject: { [key: string]: number }): DateObject {\r\n  const normalizedInput: { [key: string]: number } = {};\r\n  let normalizedProp;\r\n  let prop;\r\n\r\n  for (prop in inputObject) {\r\n    if (hasOwnProp(inputObject, prop)) {\r\n      normalizedProp = normalizeUnits(prop);\r\n      if (normalizedProp) {\r\n        normalizedInput[normalizedProp] = inputObject[prop];\r\n      }\r\n    }\r\n  }\r\n\r\n  return normalizedInput as any;\r\n}\r\n","// place in new Date([array])\r\nexport const YEAR = 0;\r\nexport const MONTH = 1;\r\nexport const DATE = 2;\r\nexport const HOUR = 3;\r\nexport const MINUTE = 4;\r\nexport const SECOND = 5;\r\nexport const MILLISECOND = 6;\r\nexport const WEEK = 7;\r\nexport const WEEKDAY = 8;\r\n","export function zeroFill(num: number,\r\n                         targetLength: number,\r\n                         forceSign?: boolean): string {\r\n  const absNumber = `${Math.abs(num)}`;\r\n  const zerosToFill = targetLength - absNumber.length;\r\n  const sign = num >= 0;\r\n  const _sign = sign ? (forceSign ? '+' : '') : '-';\r\n  // todo: this is crazy slow\r\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\r\n\r\n  return (_sign + _zeros + absNumber);\r\n}\r\n","import { Locale } from '../locale/locale.class';\r\nimport { zeroFill } from '../utils/zero-fill';\r\nimport { isFunction } from '../utils/type-checks';\r\nimport { DateFormatterOptions, DateFormatterFn } from '../types';\r\n\r\nexport let formatFunctions: {\r\n  [key: string]: (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string;\r\n} = {};\r\nexport let formatTokenFunctions: { [key: string]: DateFormatterFn } = {};\r\n\r\n// tslint:disable-next-line\r\nexport const formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\r\n\r\n// token:    'M'\r\n// padded:   ['MM', 2]\r\n// ordinal:  'Mo'\r\n// callback: function () { this.month() + 1 }\r\nexport function addFormatToken(token: string,\r\n                               padded: [string, number, boolean],\r\n                               ordinal: string,\r\n                               callback: DateFormatterFn): void {\r\n\r\n  if (token) {\r\n    formatTokenFunctions[token] = callback;\r\n  }\r\n\r\n  if (padded) {\r\n    formatTokenFunctions[padded[0]] = function (): string {\r\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\r\n    };\r\n  }\r\n\r\n  if (ordinal) {\r\n    formatTokenFunctions[ordinal] = function (date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\r\n    };\r\n  }\r\n}\r\n\r\nexport function makeFormatFunction(format: string):\r\n  (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string {\r\n\r\n  const array: string[] = format.match(formattingTokens);\r\n  const length = array.length;\r\n\r\n  const formatArr: string[] | DateFormatterFn[] = new Array(length);\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    formatArr[i] = formatTokenFunctions[array[i]]\r\n      ? formatTokenFunctions[array[i]]\r\n      : removeFormattingTokens(array[i]);\r\n  }\r\n\r\n  return function (date: Date, locale: Locale, isUTC: boolean, offset = 0): string {\r\n    let output = '';\r\n    for (let j = 0; j < length; j++) {\r\n      output += isFunction(formatArr[j])\r\n        ? (formatArr[j] as DateFormatterFn).call(null, date, {format, locale, isUTC, offset})\r\n        : formatArr[j];\r\n    }\r\n\r\n    return output;\r\n  };\r\n}\r\n\r\nfunction removeFormattingTokens(input: string): string {\r\n  if (input.match(/\\[[\\s\\S]/)) {\r\n    return input.replace(/^\\[|\\]$/g, '');\r\n  }\r\n\r\n  return input.replace(/\\\\/g, '');\r\n}\r\n","export function createUTCDate(y?: number,\r\n                              m?: number,\r\n                              d?: number): Date {\r\n  const date = new Date(Date.UTC.apply(null, arguments));\r\n\r\n  // the Date.UTC function remaps years 0-99 to 1900-1999\r\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\r\n    date.setUTCFullYear(y);\r\n  }\r\n\r\n  return date;\r\n}\r\n\r\nexport function createDate(y?: number,\r\n                           m = 0,\r\n                           d = 1,\r\n                           h = 0,\r\n                           M = 0,\r\n                           s = 0,\r\n                           ms = 0): Date {\r\n  const date = new Date(y, m, d, h, M, s, ms);\r\n\r\n  // the date constructor remaps years 0-99 to 1900-1999\r\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\r\n    date.setFullYear(y);\r\n  }\r\n\r\n  return date;\r\n}\r\n","import { createDate } from '../create/date-from-array';\r\n\r\nexport function getHours(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCHours() : date.getHours();\r\n}\r\n\r\nexport function getMinutes(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\r\n}\r\n\r\nexport function getSeconds(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\r\n}\r\n\r\nexport function getMilliseconds(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\r\n}\r\nexport function getTime(date: Date): number {\r\n  return date.getTime();\r\n}\r\n\r\nexport function getDay(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCDay() : date.getDay();\r\n}\r\n\r\nexport function getDate(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCDate() : date.getDate();\r\n}\r\n\r\nexport function getMonth(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCMonth() : date.getMonth();\r\n}\r\n\r\nexport function getFullYear(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\r\n}\r\n\r\nexport function getUnixTime(date: Date): number {\r\n  return Math.floor(date.valueOf() / 1000);\r\n}\r\n\r\nexport function unix(date: Date): number {\r\n  return Math.floor(date.valueOf() / 1000);\r\n}\r\n\r\nexport function getFirstDayOfMonth(date: Date): Date {\r\n  return createDate(\r\n    date.getFullYear(),\r\n    date.getMonth(),\r\n    1,\r\n    date.getHours(),\r\n    date.getMinutes(),\r\n    date.getSeconds()\r\n  );\r\n}\r\n\r\nexport function daysInMonth(date: Date): number {\r\n  return _daysInMonth(date.getFullYear(), date.getMonth());\r\n}\r\n\r\nexport function _daysInMonth(year: number, month: number): number {\r\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\r\n}\r\n\r\nexport function isFirstDayOfWeek(date: Date, firstDayOfWeek: number): boolean {\r\n  return date.getDay() === firstDayOfWeek;\r\n}\r\n\r\nexport function isSameMonth(date1: Date, date2: Date) {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\r\n}\r\n\r\nexport function isSameYear(date1: Date, date2: Date) {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  return getFullYear(date1) === getFullYear(date2);\r\n}\r\n\r\nexport function isSameDay(date1: Date, date2: Date): boolean {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    isSameYear(date1, date2) &&\r\n    isSameMonth(date1, date2) &&\r\n    getDate(date1) === getDate(date2)\r\n  );\r\n}\r\n","import { hasOwnProp, isFunction } from '../utils/type-checks';\r\nimport { Locale } from '../locale/locale.class';\r\n\r\nexport const match1 = /\\d/;            //       0 - 9\r\nexport const match2 = /\\d\\d/;          //      00 - 99\r\nexport const match3 = /\\d{3}/;         //     000 - 999\r\nexport const match4 = /\\d{4}/;         //    0000 - 9999\r\nexport const match6 = /[+-]?\\d{6}/;    // -999999 - 999999\r\nexport const match1to2 = /\\d\\d?/;         //       0 - 99\r\nexport const match3to4 = /\\d\\d\\d\\d?/;     //     999 - 9999\r\nexport const match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\r\nexport const match1to3 = /\\d{1,3}/;       //       0 - 999\r\nexport const match1to4 = /\\d{1,4}/;       //       0 - 9999\r\nexport const match1to6 = /[+-]?\\d{1,6}/;  // -999999 - 999999\r\n\r\nexport const matchUnsigned = /\\d+/;           //       0 - inf\r\nexport const matchSigned = /[+-]?\\d+/;      //    -inf - inf\r\n\r\nexport const matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\r\nexport const matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\r\n\r\nexport const matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\r\n\r\n// any word (or two) characters or numbers including two/three word month in arabic.\r\n// includes scottish gaelic two word and hyphenated months\r\n// tslint:disable-next-line\r\nexport const matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\r\n\r\nexport type RegExpTokenFn = (isStrict: boolean, locale: Locale) => RegExp;\r\nconst regexes: {[key: string]: RegExpTokenFn} = {};\r\n\r\n\r\nexport function addRegexToken(token: string, regex: RegExp | RegExpTokenFn, strictRegex?: RegExp): void {\r\n  if (isFunction(regex)) {\r\n    regexes[token] = regex;\r\n\r\n    return;\r\n  }\r\n\r\n  regexes[token] = function (isStrict: boolean, locale: Locale) {\r\n    return (isStrict && strictRegex) ? strictRegex : regex;\r\n  };\r\n}\r\n\r\nexport function getParseRegexForToken(token: string, locale: Locale): RegExp {\r\n  const _strict = false;\r\n  if (!hasOwnProp(regexes, token)) {\r\n    return new RegExp(unescapeFormat(token));\r\n  }\r\n\r\n  return regexes[token](_strict, locale);\r\n}\r\n\r\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\r\nfunction unescapeFormat(str: string): string {\r\n  // tslint:disable-next-line\r\n  return regexEscape(str\r\n    .replace('\\\\', '')\r\n    .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4)\r\n  );\r\n}\r\n\r\nexport function regexEscape(str: string): string {\r\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n}\r\n","// tslint:disable:max-line-length\r\nimport { hasOwnProp, isArray, isFunction, isNumber, isString, toInt } from '../utils/type-checks';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { DateArray, DateParseTokenFn } from '../types';\r\n\r\nconst tokens: {[key: string]: DateParseTokenFn} = {};\r\n\r\nexport function addParseToken(token: string | string[], callback: DateParseTokenFn | number) {\r\n  const _token = isString(token) ? [token] : token;\r\n  let func = callback;\r\n\r\n  if (isNumber(callback)) {\r\n    func = function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n      array[callback] = toInt(input);\r\n\r\n      return config;\r\n    };\r\n  }\r\n\r\n  if (isArray<string>(_token) && isFunction(func)) {\r\n    let i;\r\n    for (i = 0; i < _token.length; i++) {\r\n      tokens[_token[i]] = func;\r\n    }\r\n  }\r\n}\r\n\r\nexport function addWeekParseToken(token: string[], callback: DateParseTokenFn): void {\r\n  addParseToken(token, function (input: string, array: DateArray, config: DateParsingConfig, _token: string): DateParsingConfig {\r\n    config._w = config._w || {};\r\n\r\n    return callback(input, config._w, config, _token);\r\n  });\r\n}\r\n\r\n\r\nexport function addTimeToArrayFromToken(token: string, input: string, config: DateParsingConfig): DateParsingConfig {\r\n  if (input != null && hasOwnProp(tokens, token)) {\r\n    tokens[token](input, config._a, config, token);\r\n  }\r\n\r\n  return config;\r\n}\r\n","import { DateParsingConfig, DateParsingFlags } from './parsing.types';\r\n\r\nfunction defaultParsingFlags(): DateParsingFlags {\r\n  // We need to deep clone this object.\r\n  return {\r\n    empty: false,\r\n    unusedTokens: [],\r\n    unusedInput: [],\r\n    overflow: -2,\r\n    charsLeftOver: 0,\r\n    nullInput: false,\r\n    invalidMonth: null,\r\n    invalidFormat: false,\r\n    userInvalidated: false,\r\n    iso: false,\r\n    parsedDateParts: [],\r\n    meridiem: null,\r\n    rfc2822: false,\r\n    weekdayMismatch: false\r\n  };\r\n}\r\n\r\nexport function getParsingFlags(config: DateParsingConfig): DateParsingFlags {\r\n  if (config._pf == null) {\r\n    config._pf = defaultParsingFlags();\r\n  }\r\n\r\n  return config._pf;\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { getFullYear } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { YEAR } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { DateFormatterOptions } from '../types';\r\n\r\n// FORMATTING\r\n\r\nfunction getYear(date: Date, opts: DateFormatterOptions): string {\r\n  return getFullYear(date, opts.isUTC).toString();\r\n}\r\n\r\nexport function initYear() {\r\n  addFormatToken('Y', null, null,\r\n    function (date: Date, opts: DateFormatterOptions): string {\r\n    const y = getFullYear(date, opts.isUTC);\r\n\r\n    return y <= 9999 ? y.toString(10) : `+${y}`;\r\n  });\r\n\r\n  addFormatToken(null, ['YY', 2, false], null,\r\n    function (date: Date, opts: DateFormatterOptions): string {\r\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\r\n  });\r\n\r\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\r\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\r\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\r\n\r\n  // ALIASES\r\n\r\n  addUnitAlias('year', 'y');\r\n\r\n  // PRIORITIES\r\n\r\n  addUnitPriority('year', 1);\r\n\r\n  // PARSING\r\n\r\n  addRegexToken('Y', matchSigned);\r\n  addRegexToken('YY', match1to2, match2);\r\n  addRegexToken('YYYY', match1to4, match4);\r\n  addRegexToken('YYYYY', match1to6, match6);\r\n  addRegexToken('YYYYYY', match1to6, match6);\r\n\r\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\r\n  addParseToken('YYYY', function (input, array, config) {\r\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\r\n\r\n    return config;\r\n  });\r\n  addParseToken('YY', function (input, array, config) {\r\n    array[YEAR] = parseTwoDigitYear(input);\r\n\r\n    return config;\r\n  });\r\n  addParseToken('Y', function (input, array, config) {\r\n    array[YEAR] = parseInt(input, 10);\r\n\r\n    return config;\r\n  });\r\n}\r\n\r\nexport function parseTwoDigitYear(input: string): number {\r\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\r\n}\r\n\r\nexport function daysInYear(year: number): number {\r\n  return isLeapYear(year) ? 366 : 365;\r\n}\r\n\r\nexport function isLeapYear(year: number): boolean {\r\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { isLeapYear } from './year';\r\nimport { mod } from '../utils';\r\nimport { getMonth } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { MONTH } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { getParsingFlags } from '../create/parsing-flags';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\n\r\n// todo: this is duplicate, source in date-getters.ts\r\nexport function daysInMonth(year: number, month: number): number {\r\n  if (isNaN(year) || isNaN(month)) {\r\n    return NaN;\r\n  }\r\n  const modMonth = mod(month, 12);\r\n  const _year = year + (month - modMonth) / 12;\r\n\r\n  return modMonth === 1\r\n    ? isLeapYear(_year) ? 29 : 28\r\n    : (31 - modMonth % 7 % 2);\r\n}\r\n\r\nexport function initMonth() {\r\n// FORMATTING\r\n\r\n  addFormatToken('M', ['MM', 2, false], 'Mo',\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMonth(date, opts.isUTC) + 1).toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken('MMM', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.monthsShort(date, opts.format, opts.isUTC);\r\n    }\r\n  );\r\n\r\n  addFormatToken('MMMM', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.months(date, opts.format, opts.isUTC);\r\n    }\r\n  );\r\n\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('month', 'M');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('month', 8);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('M', match1to2);\r\n  addRegexToken('MM', match1to2, match2);\r\n  addRegexToken('MMM', function(isStrict, locale) {\r\n    return locale.monthsShortRegex(isStrict);\r\n  });\r\n  addRegexToken('MMMM', function(isStrict, locale) {\r\n    return locale.monthsRegex(isStrict);\r\n  });\r\n\r\n  addParseToken(['M', 'MM'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    array[MONTH] = toInt(input) - 1;\r\n\r\n    return config;\r\n  });\r\n\r\n  addParseToken(\r\n    ['MMM', 'MMMM'],\r\n    function(input: string, array: DateArray, config: DateParsingConfig, token: string): DateParsingConfig {\r\n      const month = config._locale.monthsParse(input, token, config._strict);\r\n      // if we didn't find a month name, mark the date as invalid.\r\n      if (month != null) {\r\n        array[MONTH] = month;\r\n      } else {\r\n        getParsingFlags(config).invalidMonth = !!input;\r\n      }\r\n\r\n      return config;\r\n    }\r\n  );\r\n}\r\n","import { TimeUnit } from '../types';\r\nimport { daysInMonth } from '../units/month';\r\nimport { isNumber } from './type-checks';\r\nimport { getDate, getFullYear, getMonth } from './date-getters';\r\nimport { isLeapYear } from '../units/year';\r\nimport { createDate } from '../create/date-from-array';\r\n\r\nconst defaultTimeUnit: TimeUnit = {\r\n  year: 0,\r\n  month: 0,\r\n  day: 0,\r\n  hour: 0,\r\n  minute: 0,\r\n  seconds: 0\r\n};\r\n\r\nexport function shiftDate(date: Date, unit: TimeUnit): Date {\r\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\r\n  const year = date.getFullYear() + (_unit.year || 0);\r\n  const month = date.getMonth() + (_unit.month || 0);\r\n  let day = date.getDate() + (_unit.day || 0);\r\n  if (_unit.month && !_unit.day) {\r\n    day = Math.min(day, daysInMonth(year, month));\r\n  }\r\n\r\n  return createDate(\r\n    year,\r\n    month,\r\n    day,\r\n    date.getHours() + (_unit.hour || 0),\r\n    date.getMinutes() + (_unit.minute || 0),\r\n    date.getSeconds() + (_unit.seconds || 0)\r\n  );\r\n}\r\n\r\nexport function setFullDate(date: Date, unit: TimeUnit): Date {\r\n  return createDate(\r\n    getNum(date.getFullYear(), unit.year),\r\n    getNum(date.getMonth(), unit.month),\r\n    getNum(date.getDate(), unit.day),\r\n    getNum(date.getHours(), unit.hour),\r\n    getNum(date.getMinutes(), unit.minute),\r\n    getNum(date.getSeconds(), unit.seconds),\r\n    getNum(date.getMilliseconds(), unit.milliseconds)\r\n  );\r\n}\r\n\r\nfunction getNum(def: number, num?: number): number {\r\n  return isNumber(num) ? num : def;\r\n}\r\n\r\nexport function setFullYear(date: Date, value: number, isUTC?: boolean): Date {\r\n  const _month = getMonth(date, isUTC);\r\n  const _date = getDate(date, isUTC);\r\n  const _year = getFullYear(date, isUTC);\r\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\r\n    const _daysInMonth = daysInMonth(value, _month);\r\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\r\n  }\r\n\r\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setMonth(date: Date, value: number, isUTC?: boolean): Date {\r\n  const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\r\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setDay(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setHours(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setMinutes(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setSeconds(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setMilliseconds(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setDate(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setTime(date: Date, value: number): Date {\r\n  date.setTime(value);\r\n\r\n  return date;\r\n}\r\n","// fastest way to clone date\r\n// https://jsperf.com/clone-date-object2\r\nexport function cloneDate(date: Date): Date {\r\n  return new Date(date.getTime());\r\n}\r\n","// tslint:disable: switch-default\r\nimport { TimeUnit, UnitOfTime } from '../types';\r\nimport {\r\n  setDate, setFullDate, setHours, setMilliseconds, setMinutes, setMonth, setSeconds,\r\n  shiftDate\r\n} from './date-setters';\r\nimport { cloneDate } from '../create/clone';\r\nimport { setISODayOfWeek, setLocaleDayOfWeek } from '../units/day-of-week';\r\nimport { getMonth } from './date-getters';\r\nimport { add, subtract } from '../moment/add-subtract';\r\n\r\nexport function startOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\r\n  const _date = cloneDate(date);\r\n  // the following switch intentionally omits break keywords\r\n  // to utilize falling through the cases.\r\n  switch (unit) {\r\n    case 'year':\r\n      setMonth(_date, 0, isUTC);\r\n    /* falls through */\r\n    case 'quarter':\r\n    case 'month':\r\n      setDate(_date, 1, isUTC);\r\n    /* falls through */\r\n    case 'week':\r\n    case 'isoWeek':\r\n    case 'day':\r\n    case 'date':\r\n      setHours(_date, 0, isUTC);\r\n    /* falls through */\r\n    case 'hours':\r\n      setMinutes(_date, 0, isUTC);\r\n    /* falls through */\r\n    case 'minutes':\r\n      setSeconds(_date, 0, isUTC);\r\n    /* falls through */\r\n    case 'seconds':\r\n      setMilliseconds(_date, 0, isUTC);\r\n  }\r\n\r\n  // weeks are a special case\r\n  if (unit === 'week') {\r\n    setLocaleDayOfWeek(_date, 0, {isUTC});\r\n  }\r\n  if (unit === 'isoWeek') {\r\n    setISODayOfWeek(_date, 1);\r\n  }\r\n\r\n  // quarters are also special\r\n  if (unit === 'quarter') {\r\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\r\n  }\r\n\r\n  return _date;\r\n}\r\n\r\nexport function endOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\r\n  let _unit = unit;\r\n  // 'date' is an alias for 'day', so it should be considered as such.\r\n  if (_unit === 'date') {\r\n    _unit = 'day';\r\n  }\r\n\r\n  const start = startOf(date, _unit, isUTC);\r\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\r\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\r\n\r\n  return res;\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { getDay } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2 } from '../parse/regex';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addWeekParseToken } from '../parse/token';\r\nimport { getParsingFlags } from '../create/parsing-flags';\r\nimport { isNumber, isString, toInt } from '../utils/type-checks';\r\nimport { DateFormatterOptions, WeekParsing } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { add } from '../moment/add-subtract';\r\nimport { getLocale } from '../locale/locales';\r\n\r\n\r\nexport function initDayOfWeek() {\r\n// FORMATTING\r\n\r\n  addFormatToken('d', null, 'do',\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getDay(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken('dd', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\r\n    }\r\n  );\r\n\r\n  addFormatToken('ddd', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\r\n    }\r\n  );\r\n\r\n  addFormatToken('dddd', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.weekdays(date, opts.format, opts.isUTC);\r\n    }\r\n  );\r\n\r\n  addFormatToken('e', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getLocaleDayOfWeek(date, opts.locale, opts.isUTC)\r\n        .toString(10);\r\n      // return getDay(date, opts.isUTC).toString(10);\r\n    }\r\n  );\r\n  addFormatToken('E', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getISODayOfWeek(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('day', 'd');\r\n  addUnitAlias('weekday', 'e');\r\n  addUnitAlias('isoWeekday', 'E');\r\n\r\n// PRIORITY\r\n  addUnitPriority('day', 11);\r\n  addUnitPriority('weekday', 11);\r\n  addUnitPriority('isoWeekday', 11);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('d', match1to2);\r\n  addRegexToken('e', match1to2);\r\n  addRegexToken('E', match1to2);\r\n\r\n  addRegexToken('dd', function(isStrict: boolean, locale: Locale): RegExp {\r\n    return locale.weekdaysMinRegex(isStrict);\r\n  });\r\n\r\n  addRegexToken('ddd', function(isStrict: boolean, locale: Locale): RegExp {\r\n    return locale.weekdaysShortRegex(isStrict);\r\n  });\r\n  addRegexToken('dddd', function(isStrict: boolean, locale: Locale): RegExp {\r\n    return locale.weekdaysRegex(isStrict);\r\n  });\r\n\r\n  addWeekParseToken(\r\n    ['dd', 'ddd', 'dddd'],\r\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token) {\r\n      const weekday = config._locale.weekdaysParse(input, token, config._strict);\r\n      // if we didn't get a weekday name, mark the date as invalid\r\n      if (weekday != null) {\r\n        week.d = weekday;\r\n      } else {\r\n        getParsingFlags(config).invalidWeekday = !!input;\r\n      }\r\n\r\n      return config;\r\n    }\r\n  );\r\n\r\n  addWeekParseToken(\r\n    ['d', 'e', 'E'],\r\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\r\n      week[token] = toInt(input);\r\n\r\n      return config;\r\n    }\r\n  );\r\n}\r\n\r\n// HELPERS\r\n\r\nexport function parseWeekday(input: string | number, locale: Locale): number {\r\n  if (!isString(input)) {\r\n    return input;\r\n  }\r\n\r\n  const _num = parseInt(input, 10);\r\n  if (!isNaN(_num)) {\r\n    return _num;\r\n  }\r\n\r\n  const _weekDay = locale.weekdaysParse(input);\r\n  if (isNumber(_weekDay)) {\r\n    return _weekDay;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function parseIsoWeekday(input: string | number, locale: Locale = getLocale()): number {\r\n  if (isString(input)) {\r\n    return locale.weekdaysParse(input) % 7 || 7;\r\n  }\r\n\r\n  return isNumber(input) && isNaN(input) ? null : input;\r\n}\r\n\r\n// MOMENTS\r\n\r\nexport function getSetDayOfWeek(date: Date, input: number, opts: { isUTC?: boolean; locale: Locale }): Date | number {\r\n  if (!input) {\r\n    return getDayOfWeek(date, opts.isUTC);\r\n  }\r\n\r\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\r\n}\r\n\r\nexport function setDayOfWeek(date: Date, input: number, locale = getLocale(), isUTC?: boolean): Date {\r\n  const day = getDay(date, isUTC);\r\n  const _input = parseWeekday(input, locale);\r\n\r\n  return add(date, _input - day, 'day');\r\n}\r\n\r\nexport function getDayOfWeek(date: Date, isUTC?: boolean): number {\r\n  return getDay(date, isUTC);\r\n}\r\n\r\n/********************************************/\r\n\r\n// todo: utc\r\n// getSetLocaleDayOfWeek\r\nexport function getLocaleDayOfWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\r\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\r\n}\r\n\r\nexport function setLocaleDayOfWeek(date: Date, input: number, opts: { locale?: Locale; isUTC?: boolean } = {}): Date {\r\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\r\n\r\n  return add(date, input - weekday, 'day');\r\n}\r\n\r\n\r\n// getSetISODayOfWeek\r\nexport function getISODayOfWeek(date: Date, isUTC?: boolean): number {\r\n  return getDay(date, isUTC) || 7;\r\n}\r\n\r\nexport function setISODayOfWeek(date: Date, input: number | string, opts: { locale?: Locale } = {}): Date {\r\n  // behaves the same as moment#day except\r\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\r\n  // as a setter, sunday should belong to the previous week.\r\n\r\n  const weekday = parseIsoWeekday(input, opts.locale);\r\n\r\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { startOf } from '../utils/start-end-of';\r\nimport { addRegexToken, match1to3, match3 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { add } from '../moment/add-subtract';\r\n\r\n\r\nexport function initDayOfYear() {\r\n// FORMATTING\r\n\r\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo',\r\n    function(date: Date): string {\r\n      return getDayOfYear(date)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('dayOfYear', 'DDD');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('dayOfYear', 4);\r\n\r\n  addRegexToken('DDD', match1to3);\r\n  addRegexToken('DDDD', match3);\r\n  addParseToken(\r\n    ['DDD', 'DDDD'],\r\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n      config._dayOfYear = toInt(input);\r\n\r\n      return config;\r\n    }\r\n  );\r\n}\r\n\r\nexport function getDayOfYear(date: Date, isUTC?: boolean): number {\r\n  const date1 = +startOf(date, 'day', isUTC);\r\n  const date2 = +startOf(date, 'year', isUTC);\r\n  const someDate = date1 - date2;\r\n  const oneDay = 1000 * 60 * 60 * 24;\r\n\r\n  return Math.round(someDate / oneDay) + 1;\r\n}\r\n\r\nexport function setDayOfYear(date: Date, input: number): Date {\r\n  const dayOfYear = getDayOfYear(date);\r\n\r\n  return add(date, (input - dayOfYear), 'day');\r\n}\r\n","/**\r\n *\r\n * @param {number} year\r\n * @param {number} dow - start-of-first-week\r\n * @param {number} doy - start-of-year\r\n * @returns {number}\r\n */\r\nimport { createUTCDate } from '../create/date-from-array';\r\nimport { daysInYear } from './year';\r\nimport { getDayOfYear } from './day-of-year';\r\nimport { getFullYear } from '../utils/date-getters';\r\n\r\nfunction firstWeekOffset(year: number, dow: number, doy: number): number {\r\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\r\n  const fwd = dow - doy + 7;\r\n  // first-week day local weekday -- which local weekday is fwd\r\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\r\n\r\n  return -fwdlw + fwd - 1;\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\r\nexport function dayOfYearFromWeeks(\r\n  year: number,\r\n  week: number,\r\n  weekday: number,\r\n  dow: number,\r\n  doy: number\r\n): { year: number; dayOfYear: number } {\r\n  const localWeekday = (7 + weekday - dow) % 7;\r\n  const weekOffset = firstWeekOffset(year, dow, doy);\r\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\r\n  let resYear: number;\r\n  let resDayOfYear: number;\r\n\r\n  if (dayOfYear <= 0) {\r\n    resYear = year - 1;\r\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\r\n  } else if (dayOfYear > daysInYear(year)) {\r\n    resYear = year + 1;\r\n    resDayOfYear = dayOfYear - daysInYear(year);\r\n  } else {\r\n    resYear = year;\r\n    resDayOfYear = dayOfYear;\r\n  }\r\n\r\n  return {\r\n    year: resYear,\r\n    dayOfYear: resDayOfYear\r\n  };\r\n}\r\n\r\nexport function weekOfYear(date: Date, dow: number, doy: number, isUTC?: boolean): { week: number; year: number } {\r\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\r\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\r\n  let resWeek: number;\r\n  let resYear: number;\r\n\r\n  if (week < 1) {\r\n    resYear = getFullYear(date, isUTC) - 1;\r\n    resWeek = week + weeksInYear(resYear, dow, doy);\r\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\r\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\r\n    resYear = getFullYear(date, isUTC) + 1;\r\n  } else {\r\n    resYear = getFullYear(date, isUTC);\r\n    resWeek = week;\r\n  }\r\n\r\n  return {\r\n    week: resWeek,\r\n    year: resYear\r\n  };\r\n}\r\n\r\nexport function weeksInYear(year: number, dow: number, doy: number): number {\r\n  const weekOffset = firstWeekOffset(year, dow, doy);\r\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\r\n\r\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\r\n}\r\n","// tslint:disable:max-file-line-count max-line-length cyclomatic-complexity\r\n\r\nimport { weekOfYear } from '../units/week-calendar-utils';\r\nimport { hasOwnProp, isArray, isFunction } from '../utils/type-checks';\r\nimport { getDay, getMonth } from '../utils/date-getters';\r\nimport { matchWord, regexEscape } from '../parse/regex';\r\nimport { setDayOfWeek } from '../units/day-of-week';\r\n\r\nexport interface LocaleOptionsFormat {\r\n  format: string[];\r\n  standalone: string[];\r\n  isFormat?: RegExp;\r\n}\r\n\r\nexport type LocaleOptions = string[] | LocaleOptionsFormat;\r\n\r\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\r\nexport const defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\r\n  '_'\r\n);\r\nexport const defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\r\n  '_'\r\n);\r\nexport const defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\r\n  '_'\r\n);\r\nexport const defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split(\r\n  '_'\r\n);\r\nexport const defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\r\nexport const defaultLongDateFormat: { [index: string]: string } = {\r\n  LTS: 'h:mm:ss A',\r\n  LT: 'h:mm A',\r\n  L: 'MM/DD/YYYY',\r\n  LL: 'MMMM D, YYYY',\r\n  LLL: 'MMMM D, YYYY h:mm A',\r\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\r\n};\r\n\r\nexport const defaultOrdinal = '%d';\r\nexport const defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\r\n\r\nconst defaultMonthsShortRegex = matchWord;\r\nconst defaultMonthsRegex = matchWord;\r\n\r\nexport type OrdinalDateFn = (num: number, token?: string) => string;\r\nexport type PluralizeDateFn = (num: number, withoutSuffix: boolean,\r\n                               key?: string, isFuture?: boolean) => string;\r\n\r\nexport interface LocaleData {\r\n  abbr?: string;\r\n  parentLocale?: string;\r\n\r\n  months?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\r\n  monthsShort?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\r\n  monthsParseExact?: boolean;\r\n\r\n  weekdays?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\r\n  weekdaysShort?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\r\n  weekdaysMin?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\r\n  weekdaysParseExact?: boolean;\r\n\r\n  longDateFormat?: { [index: string]: string };\r\n  calendar?: {\r\n    [key: string]: (string\r\n      | ((date: Date, now?: Date) => string)\r\n      // tslint:disable-next-line\r\n      | ((dayOfWeek: number, isNextWeek: boolean) => string))\r\n  };\r\n  relativeTime?: { [key: string]: string | PluralizeDateFn };\r\n  dayOfMonthOrdinalParse?: RegExp;\r\n  ordinal?: string | OrdinalDateFn;\r\n\r\n  week?: { dow?: number; doy?: number };\r\n\r\n  invalidDate?: string;\r\n\r\n  monthsRegex?: RegExp;\r\n  monthsParse?: RegExp[];\r\n  monthsShortRegex?: RegExp;\r\n  monthsStrictRegex?: RegExp;\r\n  monthsShortStrictRegex?: RegExp;\r\n  longMonthsParse?: RegExp[];\r\n  shortMonthsParse?: RegExp[];\r\n\r\n  meridiemParse?: RegExp;\r\n\r\n  meridiemHour?(hour: number, meridiem: string): number;\r\n\r\n  preparse?(str: string): string;\r\n\r\n  postformat?(str: string | number): string;\r\n\r\n  meridiem?(hour: number, minute?: number, isLower?: boolean): string;\r\n\r\n  isPM?(input: string): boolean;\r\n}\r\n\r\nexport class Locale {\r\n  parentLocale?: Locale;\r\n  _abbr: string;\r\n  _config: LocaleData;\r\n  meridiemHour: (hour: number, meridiem: string) => number;\r\n\r\n  _invalidDate: string;\r\n  _week: { dow: number; doy: number };\r\n  _dayOfMonthOrdinalParse: RegExp;\r\n  _ordinalParse: RegExp;\r\n  _meridiemParse: RegExp;\r\n\r\n  private _calendar: { [key: string]: string };\r\n  private _relativeTime: { future: string; past: string };\r\n  private _months: LocaleOptions;\r\n  private _monthsShort: LocaleOptions;\r\n  private _monthsRegex: RegExp;\r\n  private _monthsShortRegex: RegExp;\r\n  private _monthsStrictRegex: RegExp;\r\n  private _monthsShortStrictRegex: RegExp;\r\n  private _monthsParse: RegExp[];\r\n  private _longMonthsParse: string[] | RegExp[];\r\n  private _shortMonthsParse: string[] | RegExp[];\r\n  private _monthsParseExact: RegExp;\r\n  private _weekdaysParseExact: boolean;\r\n  private _weekdaysRegex: RegExp;\r\n  private _weekdaysShortRegex: RegExp;\r\n  private _weekdaysMinRegex: RegExp;\r\n\r\n  private _weekdaysStrictRegex: RegExp;\r\n  private _weekdaysShortStrictRegex: RegExp;\r\n  private _weekdaysMinStrictRegex: RegExp;\r\n\r\n  private _weekdays: LocaleOptions;\r\n  private _weekdaysShort: string[];\r\n  private _weekdaysMin: string[];\r\n  private _weekdaysParse: string[] | RegExp[];\r\n  private _minWeekdaysParse: string[] | RegExp[];\r\n  private _shortWeekdaysParse: string[] | RegExp[];\r\n  private _fullWeekdaysParse: RegExp[];\r\n  private _longDateFormat: { [key: string]: string };\r\n\r\n  private _ordinal: string;\r\n\r\n  constructor(config: LocaleData) {\r\n    if (!!config) {\r\n      this.set(config);\r\n    }\r\n  }\r\n\r\n  set(config: LocaleData): void {\r\n    let confKey;\r\n    for (confKey in config) {\r\n      if (!config.hasOwnProperty(confKey)) {\r\n        continue;\r\n      }\r\n      const prop = config[confKey as keyof LocaleData];\r\n      const key = (isFunction(prop) ? confKey : `_${confKey}`) as keyof Locale;\r\n\r\n      this[key] = prop as any;\r\n    }\r\n\r\n    this._config = config;\r\n  }\r\n\r\n  calendar(key: string, date: Date, now: Date): string {\r\n    const output = this._calendar[key] || this._calendar.sameElse;\r\n\r\n    return isFunction(output) ? output.call(null, date, now) : output;\r\n  }\r\n\r\n  longDateFormat(key: string) {\r\n    const format = this._longDateFormat[key];\r\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\r\n\r\n    if (format || !formatUpper) {\r\n      return format;\r\n    }\r\n\r\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val: string) {\r\n      return val.slice(1);\r\n    });\r\n\r\n    return this._longDateFormat[key];\r\n  }\r\n\r\n  get invalidDate(): string {\r\n    return this._invalidDate;\r\n  }\r\n\r\n  set invalidDate(val: string) {\r\n    this._invalidDate = val;\r\n  }\r\n\r\n  ordinal(num: number, token?: string): string {\r\n    return this._ordinal.replace('%d', num.toString(10));\r\n  }\r\n\r\n  preparse(str: string) {\r\n    return str;\r\n  }\r\n\r\n  postformat(str: string) {\r\n    return str;\r\n  }\r\n\r\n  relativeTime(num: number, withoutSuffix: boolean, str: 'future' | 'past', isFuture: boolean): string {\r\n    const output = this._relativeTime[str];\r\n\r\n    return (isFunction(output)) ?\r\n      output(num, withoutSuffix, str, isFuture) :\r\n      output.replace(/%d/i, num.toString(10));\r\n  }\r\n\r\n  pastFuture(diff: number, output: string): string {\r\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\r\n\r\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\r\n  }\r\n\r\n  /** Months */\r\n  months(): string[];\r\n  months(date: Date, format?: string, isUTC?: boolean): string;\r\n  months(date?: Date, format?: string, isUTC = false): string | string[] {\r\n    if (!date) {\r\n      return isArray<string>(this._months)\r\n        ? this._months\r\n        : this._months.standalone;\r\n    }\r\n\r\n    if (isArray<string>(this._months)) {\r\n      return this._months[getMonth(date, isUTC)];\r\n    }\r\n\r\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\r\n      ? 'format'\r\n      : 'standalone';\r\n\r\n    return this._months[key][getMonth(date, isUTC)];\r\n  }\r\n\r\n  monthsShort(): string[];\r\n  monthsShort(date?: Date, format?: string, isUTC?: boolean): string;\r\n  monthsShort(date?: Date, format?: string, isUTC = false): string | string[] {\r\n    if (!date) {\r\n      return isArray<string>(this._monthsShort)\r\n        ? this._monthsShort\r\n        : this._monthsShort.standalone;\r\n    }\r\n\r\n    if (isArray<string>(this._monthsShort)) {\r\n      return this._monthsShort[getMonth(date, isUTC)];\r\n    }\r\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\r\n\r\n    return this._monthsShort[key][getMonth(date, isUTC)];\r\n  }\r\n\r\n  monthsParse(monthName: string, format?: string, strict?: boolean): number {\r\n    let date;\r\n    let regex;\r\n\r\n    if (this._monthsParseExact) {\r\n      return this.handleMonthStrictParse(monthName, format, strict);\r\n    }\r\n\r\n    if (!this._monthsParse) {\r\n      this._monthsParse = [];\r\n      this._longMonthsParse = [];\r\n      this._shortMonthsParse = [];\r\n    }\r\n\r\n    // TODO: add sorting\r\n    // Sorting makes sure if one month (or abbr) is a prefix of another\r\n    // see sorting in computeMonthsParse\r\n    let i;\r\n    for (i = 0; i < 12; i++) {\r\n      // make the regex if we don't have it already\r\n      date = new Date(Date.UTC(2000, i));\r\n      if (strict && !this._longMonthsParse[i]) {\r\n        const _months = this.months(date, '', true).replace('.', '');\r\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\r\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\r\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\r\n      }\r\n      if (!strict && !this._monthsParse[i]) {\r\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\r\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\r\n      }\r\n      // test the regex\r\n      if (strict && format === 'MMMM' && (this._longMonthsParse[i] as RegExp).test(monthName)) {\r\n        return i;\r\n      }\r\n\r\n      if (strict && format === 'MMM' && (this._shortMonthsParse[i] as RegExp).test(monthName)) {\r\n        return i;\r\n      }\r\n\r\n      if (!strict && this._monthsParse[i].test(monthName)) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  monthsRegex(isStrict: boolean): RegExp {\r\n    if (this._monthsParseExact) {\r\n      if (!hasOwnProp(this, '_monthsRegex')) {\r\n        this.computeMonthsParse();\r\n      }\r\n      if (isStrict) {\r\n        return this._monthsStrictRegex;\r\n      }\r\n\r\n      return this._monthsRegex;\r\n    }\r\n\r\n    if (!hasOwnProp(this, '_monthsRegex')) {\r\n      this._monthsRegex = defaultMonthsRegex;\r\n    }\r\n\r\n    return this._monthsStrictRegex && isStrict ?\r\n      this._monthsStrictRegex : this._monthsRegex;\r\n  }\r\n\r\n  monthsShortRegex(isStrict: boolean): RegExp {\r\n    if (this._monthsParseExact) {\r\n      if (!hasOwnProp(this, '_monthsRegex')) {\r\n        this.computeMonthsParse();\r\n      }\r\n      if (isStrict) {\r\n        return this._monthsShortStrictRegex;\r\n      }\r\n\r\n      return this._monthsShortRegex;\r\n    }\r\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\r\n      this._monthsShortRegex = defaultMonthsShortRegex;\r\n    }\r\n\r\n    return this._monthsShortStrictRegex && isStrict ?\r\n      this._monthsShortStrictRegex : this._monthsShortRegex;\r\n  }\r\n\r\n  /** Week */\r\n  week(date: Date, isUTC?: boolean): number {\r\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\r\n  }\r\n\r\n  firstDayOfWeek(): number {\r\n    return this._week.dow;\r\n  }\r\n\r\n  firstDayOfYear(): number {\r\n    return this._week.doy;\r\n  }\r\n\r\n  /** Day of Week */\r\n  weekdays(): string[];\r\n  weekdays(date: Date, format?: string, isUTC?: boolean): string;\r\n  weekdays(date?: Date, format?: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return isArray<string>(this._weekdays)\r\n        ? this._weekdays\r\n        : this._weekdays.standalone;\r\n    }\r\n\r\n    if (isArray<string>(this._weekdays)) {\r\n      return this._weekdays[getDay(date, isUTC)];\r\n    }\r\n\r\n    const _key = this._weekdays.isFormat.test(format)\r\n      ? 'format'\r\n      : 'standalone';\r\n\r\n    return this._weekdays[_key][getDay(date, isUTC)];\r\n  }\r\n\r\n  weekdaysMin(): string[];\r\n  weekdaysMin(date: Date, format?: string, isUTC?: boolean): string;\r\n  weekdaysMin(date?: Date, format?: string, isUTC?: boolean): string | string[] {\r\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\r\n  }\r\n\r\n  weekdaysShort(): string[];\r\n  weekdaysShort(date: Date, format?: string, isUTC?: boolean): string;\r\n  weekdaysShort(date?: Date, format?: string, isUTC?: boolean): string | string[] {\r\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\r\n  }\r\n\r\n\r\n  // proto.weekdaysParse  =        localeWeekdaysParse;\r\n  weekdaysParse(weekdayName?: string, format?: string, strict?: boolean): number {\r\n    let i;\r\n    let regex;\r\n\r\n    if (this._weekdaysParseExact) {\r\n      return this.handleWeekStrictParse(weekdayName, format, strict);\r\n    }\r\n\r\n    if (!this._weekdaysParse) {\r\n      this._weekdaysParse = [];\r\n      this._minWeekdaysParse = [];\r\n      this._shortWeekdaysParse = [];\r\n      this._fullWeekdaysParse = [];\r\n    }\r\n\r\n    for (i = 0; i < 7; i++) {\r\n      // make the regex if we don't have it already\r\n      // fix: here is the issue\r\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\r\n      if (strict && !this._fullWeekdaysParse[i]) {\r\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\r\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\r\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\r\n      }\r\n      if (!this._weekdaysParse[i]) {\r\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\r\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\r\n      }\r\n\r\n      if (!isArray<RegExp>(this._fullWeekdaysParse)\r\n        || !isArray<RegExp>(this._shortWeekdaysParse)\r\n        || !isArray<RegExp>(this._minWeekdaysParse)\r\n        || !isArray<RegExp>(this._weekdaysParse)) {\r\n        return;\r\n      }\r\n\r\n      // test the regex\r\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\r\n        return i;\r\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\r\n        return i;\r\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\r\n        return i;\r\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  // proto.weekdaysRegex       =        weekdaysRegex;\r\n  weekdaysRegex(isStrict: boolean) {\r\n    if (this._weekdaysParseExact) {\r\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n        this.computeWeekdaysParse();\r\n      }\r\n\r\n      if (isStrict) {\r\n        return this._weekdaysStrictRegex;\r\n      } else {\r\n        return this._weekdaysRegex;\r\n      }\r\n    } else {\r\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n        this._weekdaysRegex = matchWord;\r\n      }\r\n\r\n      return this._weekdaysStrictRegex && isStrict ?\r\n        this._weekdaysStrictRegex : this._weekdaysRegex;\r\n    }\r\n  }\r\n\r\n  // proto.weekdaysShortRegex  =        weekdaysShortRegex;\r\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\r\n\r\n\r\n  weekdaysShortRegex(isStrict?: boolean): RegExp {\r\n    if (this._weekdaysParseExact) {\r\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n        this.computeWeekdaysParse();\r\n      }\r\n      if (isStrict) {\r\n        return this._weekdaysShortStrictRegex;\r\n      } else {\r\n        return this._weekdaysShortRegex;\r\n      }\r\n    } else {\r\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\r\n        this._weekdaysShortRegex = matchWord;\r\n      }\r\n\r\n      return this._weekdaysShortStrictRegex && isStrict ?\r\n        this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\r\n    }\r\n  }\r\n\r\n  weekdaysMinRegex(isStrict?: boolean): RegExp {\r\n    if (this._weekdaysParseExact) {\r\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n        this.computeWeekdaysParse();\r\n      }\r\n      if (isStrict) {\r\n        return this._weekdaysMinStrictRegex;\r\n      } else {\r\n        return this._weekdaysMinRegex;\r\n      }\r\n    } else {\r\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\r\n        this._weekdaysMinRegex = matchWord;\r\n      }\r\n\r\n      return this._weekdaysMinStrictRegex && isStrict ?\r\n        this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\r\n    }\r\n  }\r\n\r\n  isPM(input: string): boolean {\r\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\r\n    // Using charAt should be more compatible.\r\n    return input.toLowerCase().charAt(0) === 'p';\r\n  }\r\n\r\n  meridiem(hours: number, minutes: number, isLower: boolean): string {\r\n    if (hours > 11) {\r\n      return isLower ? 'pm' : 'PM';\r\n    }\r\n\r\n    return isLower ? 'am' : 'AM';\r\n  }\r\n\r\n  formatLongDate(key: string) {\r\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\r\n    const format = this._longDateFormat[key];\r\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\r\n\r\n    if (format || !formatUpper) {\r\n      return format;\r\n    }\r\n\r\n    this._longDateFormat[\r\n      key\r\n      ] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (val: string) => {\r\n      return val.slice(1);\r\n    });\r\n\r\n    return this._longDateFormat[key];\r\n  }\r\n\r\n  private handleMonthStrictParse(monthName: string, format: string, strict?: boolean) {\r\n    const llc = monthName.toLocaleLowerCase();\r\n    let i;\r\n    let ii;\r\n    let mom;\r\n    if (!this._monthsParse) {\r\n      // this is not used\r\n      this._monthsParse = [];\r\n      this._longMonthsParse = [];\r\n      this._shortMonthsParse = [];\r\n      for (i = 0; i < 12; ++i) {\r\n        mom = new Date(2000, i);\r\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\r\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\r\n      }\r\n    }\r\n\r\n    if (strict) {\r\n      if (format === 'MMM') {\r\n        ii = (this._shortMonthsParse as string[]).indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      }\r\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\r\n\r\n      return ii !== -1 ? ii : null;\r\n    }\r\n\r\n    if (format === 'MMM') {\r\n      ii = (this._shortMonthsParse as string[]).indexOf(llc);\r\n      if (ii !== -1) {\r\n        return ii;\r\n      }\r\n\r\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\r\n\r\n      return ii !== -1 ? ii : null;\r\n    }\r\n\r\n    ii = (this._longMonthsParse as string[]).indexOf(llc);\r\n    if (ii !== -1) {\r\n      return ii;\r\n    }\r\n    ii = (this._shortMonthsParse as string[]).indexOf(llc);\r\n\r\n    return ii !== -1 ? ii : null;\r\n  }\r\n\r\n  private handleWeekStrictParse(weekdayName: string, format: string, strict: boolean): number {\r\n    let ii;\r\n    const llc = weekdayName.toLocaleLowerCase();\r\n    if (!this._weekdaysParse) {\r\n      this._weekdaysParse = [];\r\n      this._shortWeekdaysParse = [];\r\n      this._minWeekdaysParse = [];\r\n\r\n      let i;\r\n      for (i = 0; i < 7; ++i) {\r\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\r\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\r\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\r\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\r\n      }\r\n    }\r\n\r\n    if (!isArray<string>(this._weekdaysParse)\r\n      || !isArray<string>(this._shortWeekdaysParse)\r\n      || !isArray<string>(this._minWeekdaysParse)) {\r\n      return;\r\n    }\r\n\r\n    if (strict) {\r\n      if (format === 'dddd') {\r\n        ii = this._weekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      } else if (format === 'ddd') {\r\n        ii = this._shortWeekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      } else {\r\n        ii = this._minWeekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      }\r\n    } else {\r\n      if (format === 'dddd') {\r\n        ii = this._weekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._shortWeekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._minWeekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      } else if (format === 'ddd') {\r\n        ii = this._shortWeekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._weekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._minWeekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      } else {\r\n        ii = this._minWeekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._weekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._shortWeekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      }\r\n    }\r\n  }\r\n\r\n  private computeMonthsParse() {\r\n    const shortPieces: string[] = [];\r\n    const longPieces: string[] = [];\r\n    const mixedPieces: string[] = [];\r\n    let date;\r\n\r\n    let i;\r\n    for (i = 0; i < 12; i++) {\r\n      // make the regex if we don't have it already\r\n      date = new Date(2000, i);\r\n      shortPieces.push(this.monthsShort(date, ''));\r\n      longPieces.push(this.months(date, ''));\r\n      mixedPieces.push(this.months(date, ''));\r\n      mixedPieces.push(this.monthsShort(date, ''));\r\n    }\r\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\r\n    // will match the longer piece.\r\n    shortPieces.sort(cmpLenRev);\r\n    longPieces.sort(cmpLenRev);\r\n    mixedPieces.sort(cmpLenRev);\r\n    for (i = 0; i < 12; i++) {\r\n      shortPieces[i] = regexEscape(shortPieces[i]);\r\n      longPieces[i] = regexEscape(longPieces[i]);\r\n    }\r\n    for (i = 0; i < 24; i++) {\r\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\r\n    }\r\n\r\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\r\n    this._monthsShortRegex = this._monthsRegex;\r\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\r\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\r\n  }\r\n\r\n  private computeWeekdaysParse() {\r\n    const minPieces = [];\r\n    const shortPieces = [];\r\n    const longPieces = [];\r\n    const mixedPieces = [];\r\n\r\n    let i;\r\n    for (i = 0; i < 7; i++) {\r\n      // make the regex if we don't have it already\r\n      // let mom = createUTC([2000, 1]).day(i);\r\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\r\n      const minp = this.weekdaysMin(date);\r\n      const shortp = this.weekdaysShort(date);\r\n      const longp = this.weekdays(date);\r\n      minPieces.push(minp);\r\n      shortPieces.push(shortp);\r\n      longPieces.push(longp);\r\n      mixedPieces.push(minp);\r\n      mixedPieces.push(shortp);\r\n      mixedPieces.push(longp);\r\n    }\r\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\r\n    // will match the longer piece.\r\n    minPieces.sort(cmpLenRev);\r\n    shortPieces.sort(cmpLenRev);\r\n    longPieces.sort(cmpLenRev);\r\n    mixedPieces.sort(cmpLenRev);\r\n    for (i = 0; i < 7; i++) {\r\n      shortPieces[i] = regexEscape(shortPieces[i]);\r\n      longPieces[i] = regexEscape(longPieces[i]);\r\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\r\n    }\r\n\r\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\r\n    this._weekdaysShortRegex = this._weekdaysRegex;\r\n    this._weekdaysMinRegex = this._weekdaysRegex;\r\n\r\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\r\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\r\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\r\n  }\r\n}\r\n\r\nfunction cmpLenRev(a: string, b: string): number {\r\n  return b.length - a.length;\r\n}\r\n","export const defaultCalendar = {\r\n  sameDay: '[Today at] LT',\r\n  nextDay: '[Tomorrow at] LT',\r\n  nextWeek: 'dddd [at] LT',\r\n  lastDay: '[Yesterday at] LT',\r\n  lastWeek: '[Last] dddd [at] LT',\r\n  sameElse: 'L'\r\n};\r\n","import {\r\n  defaultDayOfMonthOrdinalParse,\r\n  defaultLocaleMonths,\r\n  defaultLocaleMonthsShort,\r\n  defaultLocaleWeekdays,\r\n  defaultLocaleWeekdaysMin,\r\n  defaultLocaleWeekdaysShort, defaultLongDateFormat, defaultOrdinal,\r\n  LocaleData\r\n} from './locale.class';\r\nimport { defaultCalendar } from './calendar';\r\n\r\nexport const defaultInvalidDate = 'Invalid date';\r\n\r\nexport const defaultLocaleWeek = {\r\n  dow: 0, // Sunday is the first day of the week.\r\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\r\n};\r\n\r\nexport const defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\r\n\r\nexport const defaultRelativeTime: {[key: string]: string} = {\r\n  future : 'in %s',\r\n  past   : '%s ago',\r\n  s  : 'a few seconds',\r\n  ss : '%d seconds',\r\n  m  : 'a minute',\r\n  mm : '%d minutes',\r\n  h  : 'an hour',\r\n  hh : '%d hours',\r\n  d  : 'a day',\r\n  dd : '%d days',\r\n  M  : 'a month',\r\n  MM : '%d months',\r\n  y  : 'a year',\r\n  yy : '%d years'\r\n};\r\n\r\nexport const baseConfig: LocaleData = {\r\n  calendar: defaultCalendar,\r\n  longDateFormat: defaultLongDateFormat,\r\n  invalidDate: defaultInvalidDate,\r\n  ordinal: defaultOrdinal,\r\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\r\n  relativeTime: defaultRelativeTime,\r\n\r\n  months: defaultLocaleMonths,\r\n  monthsShort: defaultLocaleMonthsShort,\r\n\r\n  week: defaultLocaleWeek,\r\n\r\n  weekdays: defaultLocaleWeekdays,\r\n  weekdaysMin: defaultLocaleWeekdaysMin,\r\n  weekdaysShort: defaultLocaleWeekdaysShort,\r\n\r\n  meridiemParse: defaultLocaleMeridiemParse\r\n};\r\n","// compare two arrays, return the number of differences\r\nimport { toInt } from './type-checks';\r\n\r\nexport function compareArrays<T>(array1: T[], array2: T[], dontConvert: boolean) {\r\n  const len = Math.min(array1.length, array2.length);\r\n  const lengthDiff = Math.abs(array1.length - array2.length);\r\n  let diffs = 0;\r\n  let i;\r\n  for (i = 0; i < len; i++) {\r\n    if ((dontConvert && array1[i] !== array2[i])\r\n      || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\r\n      diffs++;\r\n    }\r\n  }\r\n\r\n  return diffs + lengthDiff;\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { weekOfYear } from './week-calendar-utils';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addWeekParseToken } from '../parse/token';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { DateFormatterOptions, WeekParsing } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { getLocale } from '../locale/locales';\r\nimport { add } from '../moment/add-subtract';\r\n\r\n// FORMATTING\r\n\r\nexport function initWeek() {\r\n  addFormatToken('w', ['ww', 2, false], 'wo',\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getWeek(date, opts.locale)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken('W', ['WW', 2, false], 'Wo',\r\n    function(date: Date): string {\r\n      return getISOWeek(date)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('week', 'w');\r\n  addUnitAlias('isoWeek', 'W');\r\n\r\n// PRIORITIES\r\n\r\n  addUnitPriority('week', 5);\r\n  addUnitPriority('isoWeek', 5);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('w', match1to2);\r\n  addRegexToken('ww', match1to2, match2);\r\n  addRegexToken('W', match1to2);\r\n  addRegexToken('WW', match1to2, match2);\r\n\r\n  addWeekParseToken(\r\n    ['w', 'ww', 'W', 'WW'],\r\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\r\n      week[token.substr(0, 1)] = toInt(input);\r\n\r\n      return config;\r\n    }\r\n  );\r\n\r\n// export function getSetWeek (input) {\r\n//   var week = this.localeData().week(this);\r\n//   return input == null ? week : this.add((input - week) * 7, 'd');\r\n// }\r\n}\r\n\r\nexport function setWeek(date: Date, input: number, locale = getLocale()): Date {\r\n  const week = getWeek(date, locale);\r\n\r\n  return add(date, (input - week) * 7, 'day');\r\n}\r\n\r\nexport function getWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\r\n  return locale.week(date, isUTC);\r\n}\r\n\r\n// export function getSetISOWeek (input) {\r\n//   var week = weekOfYear(this, 1, 4).week;\r\n//   return input == null ? week : this.add((input - week) * 7, 'd');\r\n// }\r\n\r\nexport function setISOWeek(date: Date, input: number): Date {\r\n  const week = getISOWeek(date);\r\n\r\n  return add(date, (input - week) * 7, 'day');\r\n}\r\n\r\nexport function getISOWeek(date: Date, isUTC?: boolean): number {\r\n  return weekOfYear(date, 1, 4, isUTC).week;\r\n}\r\n\r\n","import { addFormatToken } from '../format/format';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\r\nimport { addWeekParseToken } from '../parse/token';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { parseTwoDigitYear } from './year';\r\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from './week-calendar-utils';\r\nimport { createUTCDate } from '../create/date-from-array';\r\nimport { getISOWeek, getWeek } from './week';\r\nimport { getISODayOfWeek, getLocaleDayOfWeek } from './day-of-week';\r\nimport { getLocale } from '../locale/locales';\r\nimport { setDate, setFullYear, setMonth } from '../utils/date-setters';\r\nimport { getDate, getFullYear, getMonth } from '../utils/date-getters';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { DateFormatterFn, DateFormatterOptions, WeekParsing } from '../types';\r\n\r\n// FORMATTING\r\n\r\nexport function initWeekYear() {\r\n  addFormatToken(null, ['gg', 2, false], null,\r\n    function (date: Date, opts: DateFormatterOptions): string {\r\n      // return this.weekYear() % 100;\r\n      return (getWeekYear(date, opts.locale) % 100).toString();\r\n    }\r\n  );\r\n\r\n  addFormatToken(null, ['GG', 2, false], null,\r\n    function (date: Date): string {\r\n      // return this.isoWeekYear() % 100;\r\n      return (getISOWeekYear(date) % 100).toString();\r\n    }\r\n  );\r\n\r\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\r\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\r\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\r\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('weekYear', 'gg');\r\n  addUnitAlias('isoWeekYear', 'GG');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('weekYear', 1);\r\n  addUnitPriority('isoWeekYear', 1);\r\n\r\n\r\n// PARSING\r\n\r\n  addRegexToken('G', matchSigned);\r\n  addRegexToken('g', matchSigned);\r\n  addRegexToken('GG', match1to2, match2);\r\n  addRegexToken('gg', match1to2, match2);\r\n  addRegexToken('GGGG', match1to4, match4);\r\n  addRegexToken('gggg', match1to4, match4);\r\n  addRegexToken('GGGGG', match1to6, match6);\r\n  addRegexToken('ggggg', match1to6, match6);\r\n\r\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'],\r\n    function (input, week: WeekParsing, config, token) {\r\n      week[token.substr(0, 2)] = toInt(input);\r\n\r\n      return config;\r\n    });\r\n\r\n  addWeekParseToken(['gg', 'GG'], function (input, week: WeekParsing, config, token) {\r\n    week[token] = parseTwoDigitYear(input);\r\n\r\n    return config;\r\n  });\r\n}\r\n\r\nfunction addWeekYearFormatToken(token: string, getter: DateFormatterFn): void {\r\n  addFormatToken(null, [token, token.length, false], null, getter);\r\n}\r\n\r\nfunction _getWeekYearFormatCb(date: Date, opts: DateFormatterOptions): string {\r\n  return getWeekYear(date, opts.locale).toString();\r\n}\r\n\r\nfunction _getISOWeekYearFormatCb(date: Date): string {\r\n  return getISOWeekYear(date).toString();\r\n}\r\n\r\n// MOMENTS\r\n\r\nexport function getSetWeekYear(date: Date, input: number, locale = getLocale(), isUTC?: boolean): number | Date {\r\n  return getSetWeekYearHelper(date,\r\n    input,\r\n    // this.week(),\r\n    getWeek(date, locale, isUTC),\r\n    // this.weekday(),\r\n    getLocaleDayOfWeek(date, locale, isUTC),\r\n    locale.firstDayOfWeek(),\r\n    locale.firstDayOfYear(),\r\n    isUTC);\r\n}\r\n\r\nexport function getWeekYear(date: Date, locale = getLocale(), isUTC?: boolean): number {\r\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\r\n}\r\n\r\nexport function getSetISOWeekYear(date: Date, input: number, isUTC?: boolean): number | Date {\r\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\r\n}\r\n\r\nexport function getISOWeekYear(date: Date, isUTC?: boolean): number {\r\n  return weekOfYear(date, 1, 4, isUTC).year;\r\n}\r\n\r\nexport function getISOWeeksInYear(date: Date, isUTC?: boolean) {\r\n  return weeksInYear(getFullYear(date, isUTC), 1, 4);\r\n}\r\n\r\nexport function getWeeksInYear(date: Date, isUTC?: boolean, locale: Locale = getLocale()): number {\r\n  return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\r\n}\r\n\r\nfunction getSetWeekYearHelper(date: Date, input: number, week: number,\r\n                              weekday: number, dow: number, doy: number, isUTC?: boolean): number | Date {\r\n  if (!input) {\r\n    return getWeekYear(date, void 0, isUTC);\r\n  }\r\n\r\n  const weeksTarget = weeksInYear(input, dow, doy);\r\n  const _week = week > weeksTarget ? weeksTarget : week;\r\n\r\n  return setWeekAll(date, input, _week, weekday, dow, doy);\r\n}\r\n\r\nfunction setWeekAll(date: Date, weekYear: number, week: number,\r\n                    weekday: number, dow: number, doy: number): Date {\r\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\r\n  const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\r\n  setFullYear(date, getFullYear(_date, true), true);\r\n  setMonth(date, getMonth(_date, true), true);\r\n  setDate(date, getDate(_date, true), true);\r\n\r\n  return date;\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { unix } from '../utils/date-getters';\r\nimport { addRegexToken, matchSigned, matchTimestamp } from '../parse/regex';\r\nimport { addParseToken} from '../parse/token';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { DateArray } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\n\r\n\r\nexport function initTimestamp() {\r\n// FORMATTING\r\n\r\n  addFormatToken('X', null, null, function(date: Date): string {\r\n    return unix(date)\r\n      .toString(10);\r\n  });\r\n  addFormatToken('x', null, null, function(date: Date): string {\r\n    return date.valueOf()\r\n      .toString(10);\r\n  });\r\n\r\n// PARSING\r\n\r\n  addRegexToken('x', matchSigned);\r\n  addRegexToken('X', matchTimestamp);\r\n\r\n  addParseToken('X', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    config._d = new Date(parseFloat(input) * 1000);\r\n\r\n    return config;\r\n  });\r\n  addParseToken('x', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    config._d = new Date(toInt(input));\r\n\r\n    return config;\r\n  });\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { addRegexToken, match1 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { MONTH } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { getMonth } from '../utils/date-getters';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { setMonth } from '../utils/date-setters';\r\n\r\n\r\nexport function initQuarter() {\r\n// FORMATTING\r\n\r\n  addFormatToken('Q', null, 'Qo',\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getQuarter(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('quarter', 'Q');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('quarter', 7);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('Q', match1);\r\n  addParseToken('Q', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    array[MONTH] = (toInt(input) - 1) * 3;\r\n\r\n    return config;\r\n  });\r\n}\r\n\r\n// MOMENTS\r\n\r\nexport function getQuarter(date: Date, isUTC = false): number {\r\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\r\n}\r\n\r\nexport function setQuarter(date: Date, quarter: number, isUTC?: boolean): Date {\r\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\r\n}\r\n\r\n// export function getSetQuarter(input) {\r\n//   return input == null\r\n//     ? Math.ceil((this.month() + 1) / 3)\r\n//     : this.month((input - 1) * 3 + this.month() % 3);\r\n// }\r\n","// tslint:disable:no-bitwise max-line-length\r\n// FORMATTING\r\n\r\nimport { addFormatToken } from '../format/format';\r\nimport { zeroFill } from '../utils/zero-fill';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { isNumber, isString, toInt } from '../utils/type-checks';\r\nimport { addRegexToken, matchOffset, matchShortOffset } from '../parse/regex';\r\nimport { add } from '../moment/add-subtract';\r\nimport { addParseToken } from '../parse/token';\r\nimport { DateArray } from '../types';\r\nimport { cloneDate } from '../create/clone';\r\nimport { setMonth } from '../utils/date-setters';\r\n\r\nfunction addOffsetFormatToken(token: string, separator: string): void {\r\n  addFormatToken(token, null, null, function (date: Date, config): string {\r\n    let offset = getUTCOffset(date, {_isUTC: config.isUTC, _offset: config.offset});\r\n    let sign = '+';\r\n    if (offset < 0) {\r\n      offset = -offset;\r\n      sign = '-';\r\n    }\r\n\r\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\r\n  });\r\n}\r\n\r\nexport function initOffset() {\r\n  addOffsetFormatToken('Z', ':');\r\n  addOffsetFormatToken('ZZ', '');\r\n\r\n// PARSING\r\n\r\n  addRegexToken('Z', matchShortOffset);\r\n  addRegexToken('ZZ', matchShortOffset);\r\n  addParseToken(['Z', 'ZZ'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    config._useUTC = true;\r\n    config._tzm = offsetFromString(matchShortOffset, input);\r\n\r\n    return config;\r\n  });\r\n}\r\n\r\n// HELPERS\r\n\r\n// timezone chunker\r\n// '+10:00' > ['10',  '00']\r\n// '-1530'  > ['-15', '30']\r\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\r\n\r\nfunction offsetFromString(matcher: RegExp, str: string): number {\r\n  const matches = (str || '').match(matcher);\r\n\r\n  if (matches === null) {\r\n    return null;\r\n  }\r\n\r\n  const chunk = matches[matches.length - 1];\r\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\r\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\r\n  const _min = parts[0] === '+' ? minutes : -minutes;\r\n\r\n  return minutes === 0 ? 0 : _min;\r\n}\r\n\r\n// Return a moment from input, that is local/utc/zone equivalent to model.\r\nexport function cloneWithOffset(input: Date, date: Date,\r\n                                config: DateParsingConfig = {}): Date {\r\n  if (!config._isUTC) {\r\n    return input;\r\n  }\r\n\r\n  const res = cloneDate(date);\r\n  // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\r\n  const offsetDiff = (config._offset || 0) * 60000;\r\n  const diff = input.valueOf() - res.valueOf() + offsetDiff;\r\n  // Use low-level api, because this fn is low-level api.\r\n  res.setTime(res.valueOf() + diff);\r\n  // todo: add timezone handling\r\n  // hooks.updateOffset(res, false);\r\n\r\n  return res;\r\n}\r\n\r\nexport function getDateOffset(date: Date): number {\r\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\r\n  // https://github.com/moment/moment/pull/1871\r\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\r\n}\r\n\r\n// HOOKS\r\n\r\n// This function will be called whenever a moment is mutated.\r\n// It is intended to keep the offset in sync with the timezone.\r\n// todo: it's from moment timezones\r\n// hooks.updateOffset = function () {\r\n// };\r\n\r\n// MOMENTS\r\n\r\n// keepLocalTime = true means only change the timezone, without\r\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\r\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\r\n// +0200, so we adjust the time as needed, to be valid.\r\n//\r\n// Keeping the time actually adds/subtracts (one hour)\r\n// from the actual represented time. That is why we call updateOffset\r\n// a second time. In case it wants us to change the offset again\r\n// _changeInProgress == true case, then we have to adjust, because\r\n// there is no such time in the given timezone.\r\nexport function getUTCOffset(date: Date, config: DateParsingConfig = {}): number {\r\n  const _offset = config._offset || 0;\r\n\r\n  return config._isUTC ? _offset : getDateOffset(date);\r\n}\r\n\r\nexport function setUTCOffset(date: Date, input: number | string, keepLocalTime?: boolean, keepMinutes?: boolean, config: DateParsingConfig = {}): Date {\r\n  const offset = config._offset || 0;\r\n  let localAdjust;\r\n  let _input = input;\r\n  let _date = date;\r\n\r\n  if (isString(_input)) {\r\n    _input = offsetFromString(matchShortOffset, _input);\r\n    if (_input === null) {\r\n      return _date;\r\n    }\r\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\r\n    _input = _input * 60;\r\n  }\r\n\r\n  if (!config._isUTC && keepLocalTime) {\r\n    localAdjust = getDateOffset(_date);\r\n  }\r\n  config._offset = _input;\r\n  config._isUTC = true;\r\n  if (localAdjust != null) {\r\n    _date = add(_date, localAdjust, 'minutes');\r\n  }\r\n  if (offset !== _input) {\r\n    if (!keepLocalTime || config._changeInProgress) {\r\n      _date = add(_date, _input - offset, 'minutes', config._isUTC);\r\n      // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\r\n    } else if (!config._changeInProgress) {\r\n      config._changeInProgress = true;\r\n      // todo: add timezone handling\r\n      // hooks.updateOffset(this, true);\r\n      config._changeInProgress = null;\r\n    }\r\n  }\r\n\r\n  return _date;\r\n}\r\n\r\n/*\r\nexport function getSetZone(input, keepLocalTime) {\r\n  if (input != null) {\r\n    if (typeof input !== 'string') {\r\n      input = -input;\r\n    }\r\n\r\n    this.utcOffset(input, keepLocalTime);\r\n\r\n    return this;\r\n  } else {\r\n    return -this.utcOffset();\r\n  }\r\n}\r\n*/\r\n\r\nexport function setOffsetToUTC(date: Date, keepLocalTime?: boolean): Date {\r\n  return setUTCOffset(date, 0, keepLocalTime);\r\n}\r\n\r\nexport function isDaylightSavingTime(date: Date): boolean {\r\n\r\n  return (getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0))\r\n    || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5)));\r\n}\r\n\r\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\r\n  if (this._isUTC) {\r\n    this.utcOffset(0, keepLocalTime);\r\n    this._isUTC = false;\r\n\r\n    if (keepLocalTime) {\r\n      this.subtract(getDateOffset(this), 'm');\r\n    }\r\n  }\r\n  return this;\r\n}*/\r\n\r\nexport function setOffsetToParsedOffset(date: Date, input: string, config: DateParsingConfig = {}): Date {\r\n  if (config._tzm != null) {\r\n    return setUTCOffset(date, config._tzm, false, true, config);\r\n  }\r\n\r\n  if (isString(input)) {\r\n    const tZone = offsetFromString(matchOffset, input);\r\n    if (tZone != null) {\r\n      return setUTCOffset(date, tZone, false, false, config);\r\n    }\r\n\r\n    return setUTCOffset(date, 0, true, false, config);\r\n  }\r\n\r\n  return date;\r\n}\r\n\r\nexport function hasAlignedHourOffset(date: Date, input?: Date) {\r\n  const _input = input ? getUTCOffset(input, { _isUTC: false }) : 0;\r\n\r\n  return (getUTCOffset(date) - _input) % 60 === 0;\r\n}\r\n\r\n\r\n// DEPRECATED\r\n/*export function isDaylightSavingTimeShifted() {\r\n  if (!isUndefined(this._isDSTShifted)) {\r\n    return this._isDSTShifted;\r\n  }\r\n\r\n  const c = {};\r\n\r\n  copyConfig(c, this);\r\n  c = prepareConfig(c);\r\n\r\n  if (c._a) {\r\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\r\n    this._isDSTShifted = this.isValid() &&\r\n      compareArrays(c._a, other.toArray()) > 0;\r\n  } else {\r\n    this._isDSTShifted = false;\r\n  }\r\n\r\n  return this._isDSTShifted;\r\n}*/\r\n\r\n// in Khronos\r\n/*export function isLocal() {\r\n  return this.isValid() ? !this._isUTC : false;\r\n}\r\n\r\nexport function isUtcOffset() {\r\n  return this.isValid() ? this._isUTC : false;\r\n}\r\n\r\nexport function isUtc() {\r\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\r\n}*/\r\n","import { getHours, getMinutes, getSeconds } from '../utils/date-getters';\r\nimport { addFormatToken } from '../format/format';\r\nimport { zeroFill } from '../utils/zero-fill';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { addRegexToken, match1to2, match2, match3to4, match5to6 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { HOUR, MINUTE, SECOND } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { getParsingFlags } from '../create/parsing-flags';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\n\r\n\r\nexport function initHour() {\r\n// FORMATTING\r\n\r\n  function hFormat(date: Date, isUTC: boolean): number {\r\n    return getHours(date, isUTC) % 12 || 12;\r\n  }\r\n\r\n  function kFormat(date: Date, isUTC: boolean): number {\r\n    return getHours(date, isUTC) || 24;\r\n  }\r\n\r\n  addFormatToken('H', ['HH', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getHours(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n  addFormatToken('h', ['hh', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return hFormat(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n  addFormatToken('k', ['kk', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return kFormat(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken('hmm', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      const _h = hFormat(date, opts.isUTC);\r\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n\r\n      return `${_h}${_mm}`;\r\n    }\r\n  );\r\n\r\n  addFormatToken('hmmss', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      const _h = hFormat(date, opts.isUTC);\r\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n      const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\r\n\r\n      return `${_h}${_mm}${_ss}`;\r\n    }\r\n  );\r\n\r\n  addFormatToken('Hmm', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      const _H = getHours(date, opts.isUTC);\r\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n\r\n      return `${_H}${_mm}`;\r\n    }\r\n  );\r\n\r\n  addFormatToken('Hmmss', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      const _H = getHours(date, opts.isUTC);\r\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n      const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\r\n\r\n      return `${_H}${_mm}${_ss}`;\r\n    }\r\n  );\r\n\r\n  function meridiem(token: string, lowercase: boolean): void {\r\n    addFormatToken(token, null, null,\r\n      function(date: Date, opts: DateFormatterOptions): string {\r\n        return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\r\n      }\r\n    );\r\n  }\r\n\r\n  meridiem('a', true);\r\n  meridiem('A', false);\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('hour', 'h');\r\n\r\n// PRIORITY\r\n  addUnitPriority('hour', 13);\r\n\r\n\r\n// PARSING\r\n\r\n  function matchMeridiem(isStrict: boolean, locale: Locale): RegExp {\r\n    return locale._meridiemParse;\r\n  }\r\n\r\n  addRegexToken('a', matchMeridiem);\r\n  addRegexToken('A', matchMeridiem);\r\n  addRegexToken('H', match1to2);\r\n  addRegexToken('h', match1to2);\r\n  addRegexToken('k', match1to2);\r\n  addRegexToken('HH', match1to2, match2);\r\n  addRegexToken('hh', match1to2, match2);\r\n  addRegexToken('kk', match1to2, match2);\r\n\r\n  addRegexToken('hmm', match3to4);\r\n  addRegexToken('hmmss', match5to6);\r\n  addRegexToken('Hmm', match3to4);\r\n  addRegexToken('Hmmss', match5to6);\r\n\r\n  addParseToken(['H', 'HH'], HOUR);\r\n  addParseToken(\r\n    ['k', 'kk'],\r\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n      const kInput = toInt(input);\r\n      array[HOUR] = kInput === 24 ? 0 : kInput;\r\n\r\n      return config;\r\n    }\r\n  );\r\n  addParseToken(['a', 'A'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    config._isPm = config._locale.isPM(input);\r\n    config._meridiem = input;\r\n\r\n    return config;\r\n  });\r\n  addParseToken(['h', 'hh'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    array[HOUR] = toInt(input);\r\n    getParsingFlags(config).bigHour = true;\r\n\r\n    return config;\r\n  });\r\n  addParseToken('hmm', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    const pos = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos));\r\n    array[MINUTE] = toInt(input.substr(pos));\r\n    getParsingFlags(config).bigHour = true;\r\n\r\n    return config;\r\n  });\r\n  addParseToken('hmmss', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    const pos1 = input.length - 4;\r\n    const pos2 = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos1));\r\n    array[MINUTE] = toInt(input.substr(pos1, 2));\r\n    array[SECOND] = toInt(input.substr(pos2));\r\n    getParsingFlags(config).bigHour = true;\r\n\r\n    return config;\r\n  });\r\n  addParseToken('Hmm', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    const pos = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos));\r\n    array[MINUTE] = toInt(input.substr(pos));\r\n\r\n    return config;\r\n  });\r\n  addParseToken('Hmmss', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    const pos1 = input.length - 4;\r\n    const pos2 = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos1));\r\n    array[MINUTE] = toInt(input.substr(pos1, 2));\r\n    array[SECOND] = toInt(input.substr(pos2));\r\n\r\n    return config;\r\n  });\r\n\r\n}\r\n","// internal storage for locale config files\r\nimport { Locale, LocaleData } from './locale.class';\r\nimport { baseConfig } from './locale.defaults';\r\nimport { hasOwnProp, isArray, isObject, isString, isUndefined, toInt } from '../utils/type-checks';\r\nimport { compareArrays } from '../utils/compare-arrays';\r\n\r\nimport { initWeek } from '../units/week';\r\nimport { initWeekYear } from '../units/week-year';\r\nimport { initYear } from '../units/year';\r\nimport { initTimezone } from '../units/timezone';\r\nimport { initTimestamp } from '../units/timestamp';\r\nimport { initSecond } from '../units/second';\r\nimport { initQuarter } from '../units/quarter';\r\nimport { initOffset } from '../units/offset';\r\nimport { initMinute } from '../units/minute';\r\nimport { initMillisecond } from '../units/millisecond';\r\nimport { initMonth } from '../units/month';\r\nimport { initHour } from '../units/hour';\r\nimport { initDayOfYear } from '../units/day-of-year';\r\nimport { initDayOfWeek } from '../units/day-of-week';\r\nimport { initDayOfMonth } from '../units/day-of-month';\r\n\r\nconst locales: { [key: string]: Locale } = {};\r\nconst localeFamilies: { [key: string]: {name: string; config: LocaleData}[] } = {};\r\nlet globalLocale: Locale;\r\n\r\nfunction normalizeLocale(key: string): string {\r\n  return key ? key.toLowerCase().replace('_', '-') : key;\r\n}\r\n\r\n// pick the locale from the array\r\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\r\n// substring from most specific to least,\r\n// but move to the next array item if it's a more specific variant than the current root\r\nfunction chooseLocale(names: string[]): Locale {\r\n  let next;\r\n  let locale;\r\n  let i = 0;\r\n\r\n  while (i < names.length) {\r\n    const split = normalizeLocale(names[i]).split('-');\r\n    let j = split.length;\r\n    next = normalizeLocale(names[i + 1]);\r\n    next = next ? next.split('-') : null;\r\n    while (j > 0) {\r\n      locale = loadLocale(split.slice(0, j).join('-'));\r\n      if (locale) {\r\n        return locale;\r\n      }\r\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\r\n        // the next array item is better than a shallower substring of this one\r\n        break;\r\n      }\r\n      j--;\r\n    }\r\n    i++;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function mergeConfigs(parentConfig: LocaleData,\r\n                             childConfig: LocaleData) {\r\n  const res: LocaleData = Object.assign({}, parentConfig);\r\n\r\n  for (const childProp in childConfig) {\r\n    if (!hasOwnProp(childConfig, childProp)) {\r\n      continue;\r\n    }\r\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\r\n      res[childProp] = {};\r\n      Object.assign(res[childProp], parentConfig[childProp]);\r\n      Object.assign(res[childProp], childConfig[childProp]);\r\n    } else if (childConfig[childProp] != null) {\r\n      res[childProp] = childConfig[childProp];\r\n    } else {\r\n      delete res[childProp];\r\n    }\r\n  }\r\n  let parentProp;\r\n  for (parentProp in parentConfig) {\r\n    if (\r\n      hasOwnProp(parentConfig, parentProp) &&\r\n      !hasOwnProp(childConfig, parentProp) &&\r\n      isObject(parentConfig[parentProp as keyof LocaleData])\r\n    ) {\r\n      // make sure changes to properties don't modify parent config\r\n      res[parentProp as keyof LocaleData] = Object.assign({}, res[parentProp as keyof LocaleData]);\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\n\r\nfunction loadLocale(name: string): Locale {\r\n  // no way!\r\n  /* var oldLocale = null;\r\n   // TODO: Find a better way to register and load all the locales in Node\r\n   if (!locales[name] && (typeof module !== 'undefined') &&\r\n     module && module.exports) {\r\n     try {\r\n       oldLocale = globalLocale._abbr;\r\n       var aliasedRequire = require;\r\n       aliasedRequire('./locale/' + name);\r\n       getSetGlobalLocale(oldLocale);\r\n     } catch (e) {}\r\n   }*/\r\n  if (!locales[name]) {\r\n    // tslint:disable-next-line\r\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\r\n    // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\r\n  }\r\n\r\n  return locales[name];\r\n}\r\n\r\n// This function will load locale and then set the global locale.  If\r\n// no arguments are passed in, it will simply return the current global\r\n// locale key.\r\nexport function getSetGlobalLocale(key?: string | string[], values?: LocaleData): string {\r\n  let data: Locale;\r\n\r\n  if (key) {\r\n    if (isUndefined(values)) {\r\n      data = getLocale(key);\r\n    } else if (isString(key)) {\r\n      data = defineLocale(key, values);\r\n    }\r\n\r\n    if (data) {\r\n      globalLocale = data;\r\n    }\r\n  }\r\n\r\n  return globalLocale && globalLocale._abbr;\r\n}\r\n\r\nexport function defineLocale(name: string, config?: LocaleData): Locale {\r\n  if (config === null) {\r\n    // useful for testing\r\n    delete locales[name];\r\n    globalLocale = getLocale('en');\r\n\r\n    return null;\r\n  }\r\n\r\n  if (!config) {\r\n    return;\r\n  }\r\n\r\n  let parentConfig = baseConfig;\r\n  config.abbr = name;\r\n  if (config.parentLocale != null) {\r\n    if (locales[config.parentLocale] != null) {\r\n      parentConfig = locales[config.parentLocale]._config;\r\n    } else {\r\n      if (!localeFamilies[config.parentLocale]) {\r\n        localeFamilies[config.parentLocale] = [];\r\n      }\r\n      localeFamilies[config.parentLocale].push({ name, config });\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\r\n\r\n  if (localeFamilies[name]) {\r\n    localeFamilies[name].forEach(function (x) {\r\n      defineLocale(x.name, x.config);\r\n    });\r\n  }\r\n\r\n  // backwards compat for now: also set the locale\r\n  // make sure we set the locale AFTER all child locales have been\r\n  // created, so we won't end up with the child locale set.\r\n  getSetGlobalLocale(name);\r\n\r\n\r\n  return locales[name];\r\n}\r\n\r\nexport function updateLocale(name: string, config?: LocaleData): Locale {\r\n  let _config = config;\r\n\r\n  if (_config != null) {\r\n    let parentConfig = baseConfig;\r\n    // MERGE\r\n    const tmpLocale = loadLocale(name);\r\n    if (tmpLocale != null) {\r\n      parentConfig = tmpLocale._config;\r\n    }\r\n    _config = mergeConfigs(parentConfig, _config);\r\n    const locale = new Locale(_config);\r\n    locale.parentLocale = locales[name];\r\n    locales[name] = locale;\r\n\r\n    // backwards compat for now: also set the locale\r\n    getSetGlobalLocale(name);\r\n  } else {\r\n    // pass null for config to unupdate, useful for tests\r\n    if (locales[name] != null) {\r\n      if (locales[name].parentLocale != null) {\r\n        locales[name] = locales[name].parentLocale;\r\n      } else if (locales[name] != null) {\r\n        delete locales[name];\r\n      }\r\n    }\r\n  }\r\n\r\n  return locales[name];\r\n}\r\n\r\n// returns locale data\r\nexport function getLocale(key?: string | string[]): Locale {\r\n  setDefaultLocale();\r\n\r\n  if (!key) {\r\n    return globalLocale;\r\n  }\r\n  // let locale;\r\n  const _key = isArray(key) ? key : [key];\r\n\r\n  return chooseLocale(_key);\r\n}\r\n\r\nexport function listLocales(): string[] {\r\n  return Object.keys(locales);\r\n}\r\n\r\nfunction setDefaultLocale(): void {\r\n  if (locales[`en`]) {\r\n\r\n    return undefined;\r\n  }\r\n\r\n  getSetGlobalLocale('en', {\r\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\r\n    ordinal(num: number): string {\r\n      const b = num % 10;\r\n      const output =\r\n        toInt((num % 100) / 10) === 1\r\n          ? 'th'\r\n          : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\r\n\r\n      return num + output;\r\n    }\r\n  });\r\n\r\n  initWeek();\r\n  initWeekYear();\r\n  initYear();\r\n  initTimezone();\r\n  initTimestamp();\r\n  initSecond();\r\n  initQuarter();\r\n  initOffset();\r\n  initMonth();\r\n  initMinute();\r\n  initMillisecond();\r\n  initHour();\r\n  initDayOfYear();\r\n  initDayOfWeek();\r\n  initDayOfMonth();\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { DateFormatterOptions } from '../types';\r\n\r\n// todo: add support for timezones\r\n\r\nexport function initTimezone() {\r\n  // FORMATTING\r\n  addFormatToken('z', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.isUTC ? 'UTC' : '';\r\n    }\r\n  );\r\n  addFormatToken('zz', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.isUTC ? 'Coordinated Universal Time' : '';\r\n    }\r\n  );\r\n}\r\n\r\n// MOMENTS\r\n\r\nexport function getZoneAbbr(isUTC: boolean) {\r\n  return isUTC ? 'UTC' : '';\r\n}\r\n\r\nexport function getZoneName(isUTC: boolean) {\r\n  return isUTC ? 'Coordinated Universal Time' : '';\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { getSeconds } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { SECOND } from './constants';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { DateFormatterOptions } from '../types';\r\n\r\n\r\nexport function initSecond() {\r\n// FORMATTING\r\n\r\n  addFormatToken('s', ['ss', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getSeconds(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('second', 's');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('second', 15);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('s', match1to2);\r\n  addRegexToken('ss', match1to2, match2);\r\n  addParseToken(['s', 'ss'], SECOND);\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { getMinutes } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { MINUTE } from './constants';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { DateFormatterOptions } from '../types';\r\n\r\n\r\nexport function initMinute() {\r\n// FORMATTING\r\n\r\n  addFormatToken('m', ['mm', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getMinutes(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('minute', 'm');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('minute', 14);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('m', match1to2);\r\n  addRegexToken('mm', match1to2, match2);\r\n  addParseToken(['m', 'mm'], MINUTE);\r\n}\r\n","// tslint:disable:no-bitwise\r\n// FORMATTING\r\n\r\nimport { addFormatToken } from '../format/format';\r\nimport { addRegexToken, match1, match1to3, match2, match3, matchUnsigned } from '../parse/regex';\r\nimport { MILLISECOND } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { addParseToken } from '../parse/token';\r\nimport { DateArray, DateFormatterOptions, WeekParsing } from '../types';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { getMilliseconds } from '../utils/date-getters';\r\n\r\n\r\nexport function initMillisecond() {\r\n  addFormatToken('S', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken(null, ['SS', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken(null, ['SSS', 3, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC)).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSS', 4, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSSS', 5, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSSSS', 6, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSSSSS', 7, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSSSSSS', 8, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\r\n    }\r\n  );\r\n\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('millisecond', 'ms');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('millisecond', 16);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('S', match1to3, match1);\r\n  addRegexToken('SS', match1to3, match2);\r\n  addRegexToken('SSS', match1to3, match3);\r\n\r\n  let token;\r\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\r\n    addRegexToken(token, matchUnsigned);\r\n  }\r\n\r\n  function parseMs(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\r\n\r\n    return config;\r\n  }\r\n\r\n  for (token = 'S'; token.length <= 9; token += 'S') {\r\n    addParseToken(token, parseMs);\r\n  }\r\n// MOMENTS\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { getDate } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { DATE } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\n\r\n\r\nexport function initDayOfMonth() {\r\n// FORMATTING\r\n\r\n  addFormatToken('D', ['DD', 2, false], 'Do',\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getDate(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('date', 'D');\r\n\r\n// PRIOROITY\r\n  addUnitPriority('date', 9);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('D', match1to2);\r\n  addRegexToken('DD', match1to2, match2);\r\n  addRegexToken('Do', function(isStrict, locale) {\r\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\r\n  });\r\n\r\n  addParseToken(['D', 'DD'], DATE);\r\n  addParseToken(\r\n    'Do',\r\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n      array[DATE] = toInt(input.match(match1to2)[0]);\r\n\r\n      return config;\r\n    }\r\n  );\r\n}\r\n","import { toInt } from '../utils/type-checks';\r\nimport { createDuration } from './create';\r\nimport { Duration } from './constructor';\r\nimport { DateObject } from '../types';\r\n\r\nconst ordering: (keyof DateObject)[] = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\r\nconst orderingHash = ordering.reduce((mem: { [key: string]: boolean }, order) => {\r\n  mem[order] = true;\r\n\r\n  return mem;\r\n}, {});\r\n\r\nexport function isDurationValid(duration: Partial<DateObject>): boolean {\r\n  const durationKeys = Object.keys(duration);\r\n  if (durationKeys\r\n      .some((key: keyof DateObject) => {\r\n        return (key in orderingHash)\r\n          && duration[key] === null\r\n          || isNaN(duration[key]);\r\n      })) {\r\n    return false;\r\n  }\r\n  // for (let key in duration) {\r\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  let unitHasDecimal = false;\r\n  for (let i = 0; i < ordering.length; ++i) {\r\n    if (duration[ordering[i]]) {\r\n      // only allow non-integers for smallest unit\r\n      if (unitHasDecimal) {\r\n        return false;\r\n      }\r\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\r\n        unitHasDecimal = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// export function isValid() {\r\n//   return this._isValid;\r\n// }\r\n//\r\n// export function createInvalid(): Duration {\r\n//   return createDuration(NaN);\r\n// }\r\n","export function absCeil (number: number): number {\r\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\r\n}\r\n","import { Duration } from './constructor';\r\nimport { absFloor } from '../utils';\r\nimport { absCeil } from '../utils/abs-ceil';\r\n\r\nexport function bubble(dur: Duration): Duration {\r\n  let milliseconds = dur._milliseconds;\r\n  let days = dur._days;\r\n  let months = dur._months;\r\n  const data = dur._data;\r\n\r\n  // if we have a mix of positive and negative values, bubble down first\r\n  // check: https://github.com/moment/moment/issues/2166\r\n  if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\r\n      (milliseconds <= 0 && days <= 0 && months <= 0))) {\r\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\r\n    days = 0;\r\n    months = 0;\r\n  }\r\n\r\n  // The following code bubbles up values, see the tests for\r\n  // examples of what that means.\r\n  data.milliseconds = milliseconds % 1000;\r\n\r\n  const seconds = absFloor(milliseconds / 1000);\r\n  data.seconds = seconds % 60;\r\n\r\n  const minutes = absFloor(seconds / 60);\r\n  data.minutes = minutes % 60;\r\n\r\n  const hours = absFloor(minutes / 60);\r\n  data.hours = hours % 24;\r\n\r\n  days += absFloor(hours / 24);\r\n\r\n  // convert days to months\r\n  const monthsFromDays = absFloor(daysToMonths(days));\r\n  months += monthsFromDays;\r\n  days -= absCeil(monthsToDays(monthsFromDays));\r\n\r\n  // 12 months -> 1 year\r\n  const years = absFloor(months / 12);\r\n  months %= 12;\r\n\r\n  data.day = days;\r\n  data.month = months;\r\n  data.year = years;\r\n\r\n  return dur;\r\n}\r\n\r\nexport function daysToMonths(day: number): number {\r\n  // 400 years have 146097 days (taking into account leap year rules)\r\n  // 400 years have 12 months === 4800\r\n  return day * 4800 / 146097;\r\n}\r\n\r\nexport function monthsToDays(month: number): number {\r\n  // the reverse of daysToMonths\r\n  return month * 146097 / 4800;\r\n}\r\n","// tslint:disable:cyclomatic-complexity\r\nimport { createDuration } from './create';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { Duration } from './constructor';\r\n\r\nlet round = Math.round;\r\nconst thresholds: { [key: string]: number } = {\r\n  ss: 44,         // a few seconds to seconds\r\n  s: 45,         // seconds to minute\r\n  m: 45,         // minutes to hour\r\n  h: 22,         // hours to day\r\n  d: 26,         // days to month\r\n  M: 11          // months to year\r\n};\r\n\r\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\r\nfunction substituteTimeAgo(str: 'future' | 'past', num: number,\r\n                           withoutSuffix: boolean, isFuture: boolean,\r\n                           locale: Locale): string {\r\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\r\n}\r\n\r\nexport function relativeTime(posNegDuration: Duration, withoutSuffix: boolean, locale: Locale): string {\r\n  const duration = createDuration(posNegDuration).abs();\r\n  const seconds = round(duration.as('s'));\r\n  const minutes = round(duration.as('m'));\r\n  const hours = round(duration.as('h'));\r\n  const days = round(duration.as('d'));\r\n  const months = round(duration.as('M'));\r\n  const years = round(duration.as('y'));\r\n\r\n  const a: [string] | [string, number] =\r\n    seconds <= thresholds.ss && ['s', seconds] ||\r\n    seconds < thresholds.s && ['ss', seconds] ||\r\n    minutes <= 1 && ['m'] ||\r\n    minutes < thresholds.m && ['mm', minutes] ||\r\n    hours <= 1 && ['h'] ||\r\n    hours < thresholds.h && ['hh', hours] ||\r\n    days <= 1 && ['d'] ||\r\n    days < thresholds.d && ['dd', days] ||\r\n    months <= 1 && ['M'] ||\r\n    months < thresholds.M && ['MM', months] ||\r\n    years <= 1 && ['y'] || ['yy', years];\r\n\r\n  const b: [string, number | string, boolean, boolean, Locale] =\r\n    [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\r\n  // a[2] = withoutSuffix;\r\n  // a[3] = +posNegDuration > 0;\r\n  // a[4] = locale;\r\n\r\n  return substituteTimeAgo.apply(null, b);\r\n}\r\n\r\n// This function allows you to set the rounding function for relative time strings\r\nexport function getSetRelativeTimeRounding(roundingFunction: any): boolean | Function {\r\n  if (roundingFunction === undefined) {\r\n    return round;\r\n  }\r\n  if (typeof(roundingFunction) === 'function') {\r\n    round = roundingFunction;\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// This function allows you to set a threshold for relative time strings\r\nexport function getSetRelativeTimeThreshold(threshold: string, limit: number): boolean | number {\r\n  if (thresholds[threshold] === undefined) {\r\n    return false;\r\n  }\r\n  if (limit === undefined) {\r\n    return thresholds[threshold];\r\n  }\r\n  thresholds[threshold] = limit;\r\n  if (threshold === 's') {\r\n    thresholds.ss = limit - 1;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// export function humanize(withSuffix) {\r\n//   if (!this.isValid()) {\r\n//     return this.localeData().invalidDate();\r\n//   }\r\n//\r\n//   const locale = this.localeData();\r\n//   let output = relativeTime(this, !withSuffix, locale);\r\n//\r\n//   if (withSuffix) {\r\n//     output = locale.pastFuture(+this, output);\r\n//   }\r\n//\r\n//   return locale.postformat(output);\r\n// }\r\n","import { getLocale } from '../locale/locales';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { isDurationValid } from './valid';\r\nimport { bubble, daysToMonths, monthsToDays } from './bubble';\r\nimport { DateObject } from '../types';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { normalizeUnits } from '../units/aliases';\r\nimport { relativeTime } from './humanize';\r\nimport { toInt } from '../utils/type-checks';\r\n\r\nexport class Duration {\r\n  _milliseconds: number;\r\n  _days: number;\r\n  _months: number;\r\n  _data: Partial<DateObject> = {};\r\n  _locale: Locale = getLocale();\r\n  _isValid: boolean;\r\n\r\n  constructor(duration: Partial<DateObject>, config: DateParsingConfig = {}) {\r\n    this._locale = config && config._locale || getLocale();\r\n    // const normalizedInput = normalizeObjectUnits(duration);\r\n    const normalizedInput = duration;\r\n    const years = normalizedInput.year || 0;\r\n    const quarters = normalizedInput.quarter || 0;\r\n    const months = normalizedInput.month || 0;\r\n    const weeks = normalizedInput.week || 0;\r\n    const days = normalizedInput.day || 0;\r\n    const hours = normalizedInput.hours || 0;\r\n    const minutes = normalizedInput.minutes || 0;\r\n    const seconds = normalizedInput.seconds || 0;\r\n    const milliseconds = normalizedInput.milliseconds || 0;\r\n\r\n    this._isValid = isDurationValid(normalizedInput);\r\n\r\n    // representation for dateAddRemove\r\n    this._milliseconds = +milliseconds +\r\n      seconds * 1000 +\r\n      minutes * 60 * 1000 + // 1000 * 60\r\n      hours * 1000 * 60 * 60; // using 1000 * 60 * 60\r\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\r\n    // Because of dateAddRemove treats 24 hours as different from a\r\n    // day when working around DST, we need to store them separately\r\n    this._days = +days +\r\n      weeks * 7;\r\n    // It is impossible to translate months into days without knowing\r\n    // which months you are are talking about, so we have to store\r\n    // it separately.\r\n    this._months = +months +\r\n      quarters * 3 +\r\n      years * 12;\r\n\r\n    // this._data = {};\r\n\r\n    // this._locale = getLocale();\r\n\r\n    // this._bubble();\r\n    return bubble(this);\r\n  }\r\n\r\n  isValid(): boolean {\r\n    return this._isValid;\r\n  }\r\n\r\n  humanize(withSuffix?: boolean): string {\r\n    // throw new Error(`TODO: implement`);\r\n\r\n    if (!this.isValid()) {\r\n      return this.localeData().invalidDate;\r\n    }\r\n\r\n    const locale = this.localeData();\r\n    let output = relativeTime(this, !withSuffix, locale);\r\n\r\n    if (withSuffix) {\r\n      output = locale.pastFuture(+this, output);\r\n    }\r\n\r\n    return locale.postformat(output);\r\n  }\r\n\r\n  localeData(): Locale {\r\n    return this._locale;\r\n  }\r\n\r\n  locale(): string;\r\n  locale(localeKey: string): Duration;\r\n  locale(localeKey?: string): Duration | string {\r\n    if (!localeKey) {\r\n      return this._locale._abbr;\r\n    }\r\n\r\n    this._locale = getLocale(localeKey) || this._locale;\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  abs(): Duration {\r\n    const mathAbs = Math.abs;\r\n\r\n    const data = this._data;\r\n\r\n    this._milliseconds = mathAbs(this._milliseconds);\r\n    this._days = mathAbs(this._days);\r\n    this._months = mathAbs(this._months);\r\n\r\n    data.milliseconds = mathAbs(data.milliseconds);\r\n    data.seconds = mathAbs(data.seconds);\r\n    data.minutes = mathAbs(data.minutes);\r\n    data.hours = mathAbs(data.hours);\r\n    data.month = mathAbs(data.month);\r\n    data.year = mathAbs(data.year);\r\n\r\n    return this;\r\n  }\r\n\r\n  as(_units: string): number {\r\n    if (!this.isValid()) {\r\n      return NaN;\r\n    }\r\n    let days;\r\n    let months;\r\n    const milliseconds = this._milliseconds;\r\n\r\n    const units = normalizeUnits(_units);\r\n\r\n    if (units === 'month' || units === 'year') {\r\n      days = this._days + milliseconds / 864e5;\r\n      months = this._months + daysToMonths(days);\r\n\r\n      return units === 'month' ? months : months / 12;\r\n    }\r\n\r\n    // handle milliseconds separately because of floating point math errors (issue #1867)\r\n    days = this._days + Math.round(monthsToDays(this._months));\r\n    switch (units) {\r\n      case 'week'   :\r\n        return days / 7 + milliseconds / 6048e5;\r\n      case 'day'    :\r\n        return days + milliseconds / 864e5;\r\n      case 'hours'   :\r\n        return days * 24 + milliseconds / 36e5;\r\n      case 'minutes' :\r\n        return days * 1440 + milliseconds / 6e4;\r\n      case 'seconds' :\r\n        return days * 86400 + milliseconds / 1000;\r\n      // Math.floor prevents floating point math errors here\r\n      case 'milliseconds':\r\n        return Math.floor(days * 864e5) + milliseconds;\r\n      default:\r\n        throw new Error(`Unknown unit ${units}`);\r\n    }\r\n  }\r\n\r\n  valueOf () {\r\n    if (!this.isValid()) {\r\n      return NaN;\r\n    }\r\n\r\n    return (\r\n      this._milliseconds +\r\n      this._days * 864e5 +\r\n      (this._months % 12) * 2592e6 +\r\n      toInt(this._months / 12) * 31536e6\r\n    );\r\n  }\r\n}\r\n\r\nexport function isDuration(obj: any): obj is Duration {\r\n  return obj instanceof Duration;\r\n}\r\n","import { DateParsingConfig } from './parsing.types';\r\nimport { getParsingFlags } from './parsing-flags';\r\n\r\nexport function isValid(config: DateParsingConfig): boolean {\r\n  if (config._isValid == null) {\r\n    const flags = getParsingFlags(config);\r\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i: number) {\r\n      return i != null;\r\n    });\r\n    let isNowValid = !isNaN(config._d && config._d.getTime()) &&\r\n      flags.overflow < 0 &&\r\n      !flags.empty &&\r\n      !flags.invalidMonth &&\r\n      !flags.invalidWeekday &&\r\n      !flags.weekdayMismatch &&\r\n      !flags.nullInput &&\r\n      !flags.invalidFormat &&\r\n      !flags.userInvalidated &&\r\n      (!flags.meridiem || (flags.meridiem && parsedParts));\r\n\r\n    if (config._strict) {\r\n      isNowValid = isNowValid &&\r\n        flags.charsLeftOver === 0 &&\r\n        flags.unusedTokens.length === 0 &&\r\n        flags.bigHour === undefined;\r\n    }\r\n\r\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\r\n      config._isValid = isNowValid;\r\n    } else {\r\n      return isNowValid;\r\n    }\r\n  }\r\n\r\n  return config._isValid;\r\n}\r\n\r\nexport function createInvalid(config: DateParsingConfig, flags?: { nullInput: boolean }): DateParsingConfig {\r\n  config._d = new Date(NaN);\r\n  Object.assign(getParsingFlags(config), flags || { userInvalidated: true });\r\n\r\n  return config;\r\n}\r\n\r\nexport function markInvalid(config: DateParsingConfig): DateParsingConfig {\r\n  config._isValid = false;\r\n\r\n  return config;\r\n}\r\n","// tslint:disable-next-line\r\nimport { defaultLocaleMonthsShort, defaultLocaleWeekdaysShort } from '../locale/locale.class';\r\nimport { DateArray } from '../types';\r\nimport { DateParsingConfig } from './parsing.types';\r\nimport { isString } from '../utils/type-checks';\r\nimport { configFromStringAndFormat } from './from-string-and-format';\r\nimport { createUTCDate } from './date-from-array';\r\nimport { createInvalid, markInvalid } from './valid';\r\nimport { getParsingFlags } from './parsing-flags';\r\n\r\n// iso 8601 regex\r\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\r\n// tslint:disable-next-line\r\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\r\n// tslint:disable-next-line\r\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\r\n\r\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\r\n\r\nconst isoDates: [string, RegExp, boolean][] = [\r\n  ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true],\r\n  ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true],\r\n  ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true],\r\n  ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\r\n  ['YYYY-DDD', /\\d{4}-\\d{3}/, true],\r\n  ['YYYY-MM', /\\d{4}-\\d\\d/, false],\r\n  ['YYYYYYMMDD', /[+-]\\d{10}/, true],\r\n  ['YYYYMMDD', /\\d{8}/, true],\r\n  // YYYYMM is NOT allowed by the standard\r\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/, true],\r\n  ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\r\n  ['YYYYDDD', /\\d{7}/, true]\r\n];\r\n\r\n// iso time formats and regexes\r\nconst isoTimes: [string, RegExp][] = [\r\n  ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\r\n  ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\r\n  ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\r\n  ['HH:mm', /\\d\\d:\\d\\d/],\r\n  ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\r\n  ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\r\n  ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\r\n  ['HHmm', /\\d\\d\\d\\d/],\r\n  ['HH', /\\d\\d/]\r\n];\r\n\r\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\r\n\r\nconst obsOffsets: { [key: string]: number } = {\r\n  UT: 0,\r\n  GMT: 0,\r\n  EDT: -4 * 60,\r\n  EST: -5 * 60,\r\n  CDT: -5 * 60,\r\n  CST: -6 * 60,\r\n  MDT: -6 * 60,\r\n  MST: -7 * 60,\r\n  PDT: -7 * 60,\r\n  PST: -8 * 60\r\n};\r\n\r\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\r\n// tslint:disable-next-line\r\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\r\n\r\n// date from iso format\r\nexport function configFromISO(config: DateParsingConfig): DateParsingConfig {\r\n  if (!isString(config._i)) {\r\n    return config;\r\n  }\r\n\r\n  const input = config._i;\r\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\r\n\r\n\r\n  let allowTime;\r\n  let dateFormat;\r\n  let timeFormat;\r\n  let tzFormat;\r\n\r\n  if (!match) {\r\n    config._isValid = false;\r\n\r\n    return config;\r\n  }\r\n\r\n  // getParsingFlags(config).iso = true;\r\n  let i;\r\n  let l;\r\n  for (i = 0, l = isoDates.length; i < l; i++) {\r\n    if (isoDates[i][1].exec(match[1])) {\r\n      dateFormat = isoDates[i][0];\r\n      allowTime = isoDates[i][2] !== false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (dateFormat == null) {\r\n    config._isValid = false;\r\n\r\n    return config;\r\n  }\r\n\r\n  if (match[3]) {\r\n    for (i = 0, l = isoTimes.length; i < l; i++) {\r\n      if (isoTimes[i][1].exec(match[3])) {\r\n        // match[2] should be 'T' or space\r\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (timeFormat == null) {\r\n      config._isValid = false;\r\n\r\n      return config;\r\n    }\r\n\r\n  }\r\n  if (!allowTime && timeFormat != null) {\r\n    config._isValid = false;\r\n\r\n    return config;\r\n  }\r\n\r\n  if (match[4]) {\r\n    if (tzRegex.exec(match[4])) {\r\n      tzFormat = 'Z';\r\n    } else {\r\n      config._isValid = false;\r\n\r\n      return config;\r\n    }\r\n  }\r\n\r\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\r\n\r\n  return configFromStringAndFormat(config);\r\n}\r\n\r\n// tslint:disable-next-line\r\nfunction extractFromRFC2822Strings(yearStr: string, monthStr: string, dayStr: string, hourStr: string, minuteStr: string, secondStr: string): DateArray {\r\n  const result = [\r\n    untruncateYear(yearStr),\r\n    defaultLocaleMonthsShort.indexOf(monthStr),\r\n    parseInt(dayStr, 10),\r\n    parseInt(hourStr, 10),\r\n    parseInt(minuteStr, 10)\r\n  ];\r\n\r\n  if (secondStr) {\r\n    result.push(parseInt(secondStr, 10));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction untruncateYear(yearStr: string): number {\r\n  const year = parseInt(yearStr, 10);\r\n\r\n  return year <= 49 ? year + 2000 : year;\r\n}\r\n\r\nfunction preprocessRFC2822(str: string): string {\r\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\r\n  return str\r\n    .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\r\n    .replace(/(\\s\\s+)/g, ' ').trim();\r\n}\r\n\r\nfunction checkWeekday(weekdayStr: string, parsedInput: DateArray, config: DateParsingConfig): boolean {\r\n  if (weekdayStr) {\r\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\r\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\r\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\r\n    if (weekdayProvided !== weekdayActual) {\r\n      getParsingFlags(config).weekdayMismatch = true;\r\n      config._isValid = false;\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction calculateOffset(obsOffset: string, militaryOffset: string, numOffset: string) {\r\n  if (obsOffset) {\r\n    return obsOffsets[obsOffset];\r\n  } else if (militaryOffset) {\r\n    // the only allowed military tz is Z\r\n    return 0;\r\n  } else {\r\n    const hm = parseInt(numOffset, 10);\r\n    const m = hm % 100;\r\n    const h = (hm - m) / 100;\r\n\r\n    return h * 60 + m;\r\n  }\r\n}\r\n\r\n// date and time from ref 2822 format\r\nexport function configFromRFC2822(config: DateParsingConfig): DateParsingConfig {\r\n  if (!isString(config._i)) {\r\n    return config;\r\n  }\r\n\r\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\r\n\r\n  if (!match) {\r\n    return markInvalid(config);\r\n  }\r\n\r\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\r\n  if (!checkWeekday(match[1], parsedArray, config)) {\r\n    return config;\r\n  }\r\n\r\n  config._a = parsedArray;\r\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\r\n\r\n  config._d = createUTCDate.apply(null, config._a);\r\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\r\n\r\n  getParsingFlags(config).rfc2822 = true;\r\n\r\n  return config;\r\n}\r\n\r\n// date from iso format or fallback\r\nexport function configFromString(config: DateParsingConfig): DateParsingConfig {\r\n  if (!isString(config._i)) {\r\n    return config;\r\n  }\r\n\r\n  const matched = aspNetJsonRegex.exec(config._i);\r\n\r\n  if (matched !== null) {\r\n    config._d = new Date(+matched[1]);\r\n\r\n    return config;\r\n  }\r\n\r\n  // todo: update logic processing\r\n  // isISO -> configFromISO\r\n  // isRFC -> configFromRFC\r\n\r\n  configFromISO(config);\r\n  if (config._isValid === false) {\r\n    delete config._isValid;\r\n  } else {\r\n    return config;\r\n  }\r\n\r\n  configFromRFC2822(config);\r\n  if (config._isValid === false) {\r\n    delete config._isValid;\r\n  } else {\r\n    return config;\r\n  }\r\n\r\n  // Final attempt, use Input Fallback\r\n  // hooks.createFromInputFallback(config);\r\n  return createInvalid(config);\r\n}\r\n\r\n// hooks.createFromInputFallback = deprecate(\r\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\r\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\r\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\r\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\r\n//     function (config) {\r\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\r\n//     }\r\n// );\r\n","// moment.js\r\n// version : 2.18.1\r\n// authors : Tim Wood, Iskren Chernev, Moment.js contributors\r\n// license : MIT\r\n// momentjs.com\r\n\r\nimport './units/index';\r\nimport { formatFunctions, makeFormatFunction } from './format/format';\r\nimport { Locale } from './locale/locale.class';\r\nimport { getLocale } from './locale/locales';\r\nimport { isDateValid } from './utils/type-checks';\r\n\r\nexport function formatDate(date: Date, format: string, locale?: string, isUTC?: boolean, offset = 0): string {\r\n  const _locale = getLocale(locale || 'en');\r\n  if (!_locale) {\r\n    throw new Error(\r\n      `Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`\r\n    );\r\n  }\r\n\r\n  const _format = format || (isUTC ?  'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\r\n\r\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\r\n\r\n  if (!output) {\r\n    return output;\r\n  }\r\n\r\n  return _locale.postformat(output);\r\n}\r\n\r\n// format date using native date object\r\nexport function formatMoment(date: Date, _format: string, locale: Locale, isUTC?: boolean, offset = 0): string {\r\n  if (!isDateValid(date)) {\r\n    return locale.invalidDate;\r\n  }\r\n\r\n  const format = expandFormat(_format, locale);\r\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\r\n\r\n  return formatFunctions[format](date, locale, isUTC, offset);\r\n}\r\n\r\nexport function expandFormat(_format: string, locale: Locale): string {\r\n  let format = _format;\r\n  let i = 5;\r\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\r\n\r\n  const replaceLongDateFormatTokens = (input: any) => {\r\n    return locale.formatLongDate(input) || input;\r\n  };\r\n\r\n  localFormattingTokens.lastIndex = 0;\r\n  while (i >= 0 && localFormattingTokens.test(format)) {\r\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\r\n    localFormattingTokens.lastIndex = 0;\r\n    i -= 1;\r\n  }\r\n\r\n  return format;\r\n}\r\n","// Pick the first defined of two or three arguments.\r\nexport function defaults<T>(a?: T, b?: T, c?: T): T {\r\n  if (a != null) {\r\n    return a;\r\n  }\r\n  if (b != null) {\r\n    return b;\r\n  }\r\n\r\n  return c;\r\n}\r\n","import { DateParsingConfig } from './parsing.types';\r\nimport { DateArray } from '../types';\r\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, YEAR } from '../units/constants';\r\nimport { daysInYear } from '../units/year';\r\nimport { getParsingFlags } from './parsing-flags';\r\nimport { createUTCDate } from './date-from-array';\r\nimport { createDate } from './date-from-array';\r\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from '../units/week-calendar-utils';\r\nimport { defaults } from '../utils/defaults';\r\n\r\nfunction currentDateArray(config: DateParsingConfig): DateArray {\r\n  const nowValue = new Date();\r\n\r\n  if (config._useUTC) {\r\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\r\n  }\r\n\r\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\r\n}\r\n\r\n// convert an array to a date.\r\n// the array should mirror the parameters below\r\n// note: all values past the year are optional and will default to the lowest possible value.\r\n// [year, month, day , hour, minute, second, millisecond]\r\nexport function configFromArray(config: DateParsingConfig): DateParsingConfig {\r\n  const input = [];\r\n  let i;\r\n  let date;\r\n  let currentDate;\r\n  let expectedWeekday;\r\n  let yearToUse;\r\n\r\n  if (config._d) {\r\n    return config;\r\n  }\r\n\r\n  currentDate = currentDateArray(config);\r\n\r\n  // compute day of the year from weeks and weekdays\r\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\r\n    dayOfYearFromWeekInfo(config);\r\n  }\r\n\r\n  // if the day of the year is set, figure out what it is\r\n  if (config._dayOfYear != null) {\r\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\r\n\r\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\r\n      getParsingFlags(config)._overflowDayOfYear = true;\r\n    }\r\n\r\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\r\n    config._a[MONTH] = date.getUTCMonth();\r\n    config._a[DATE] = date.getUTCDate();\r\n  }\r\n\r\n  // Default to current date.\r\n  // * if no year, month, day of month are given, default to today\r\n  // * if day of month is given, default month and year\r\n  // * if month is given, default only year\r\n  // * if year is given, don't default anything\r\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\r\n    config._a[i] = input[i] = currentDate[i];\r\n  }\r\n\r\n  // Zero out whatever was not defaulted, including time\r\n  for (; i < 7; i++) {\r\n    config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\r\n  }\r\n\r\n  // Check for 24:00:00.000\r\n  if (config._a[HOUR] === 24 &&\r\n    config._a[MINUTE] === 0 &&\r\n    config._a[SECOND] === 0 &&\r\n    config._a[MILLISECOND] === 0) {\r\n    config._nextDay = true;\r\n    config._a[HOUR] = 0;\r\n  }\r\n\r\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\r\n  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\r\n\r\n  // Apply timezone offset from input. The actual utcOffset can be changed\r\n  // with parseZone.\r\n  if (config._tzm != null) {\r\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\r\n  }\r\n\r\n  if (config._nextDay) {\r\n    config._a[HOUR] = 24;\r\n  }\r\n\r\n  // check for mismatching day of week\r\n  if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\r\n    getParsingFlags(config).weekdayMismatch = true;\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\nfunction dayOfYearFromWeekInfo(config: DateParsingConfig): DateParsingConfig {\r\n  let w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\r\n\r\n  w = config._w;\r\n  if (w.GG != null || w.W != null || w.E != null) {\r\n    dow = 1;\r\n    doy = 4;\r\n\r\n    // TODO: We need to take the current isoWeekYear, but that depends on\r\n    // how we interpret now (local, utc, fixed offset). So create\r\n    // a now version of current config (take local/utc/offset flags, and\r\n    // create now).\r\n    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\r\n    week = defaults(w.W, 1);\r\n    weekday = defaults(w.E, 1);\r\n    if (weekday < 1 || weekday > 7) {\r\n      weekdayOverflow = true;\r\n    }\r\n  } else {\r\n    dow = config._locale._week.dow;\r\n    doy = config._locale._week.doy;\r\n\r\n    const curWeek = weekOfYear(new Date(), dow, doy);\r\n\r\n    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\r\n\r\n    // Default to current week.\r\n    week = defaults(w.w, curWeek.week);\r\n\r\n    if (w.d != null) {\r\n      // weekday -- low day numbers are considered next week\r\n      weekday = w.d;\r\n      if (weekday < 0 || weekday > 6) {\r\n        weekdayOverflow = true;\r\n      }\r\n    } else if (w.e != null) {\r\n      // local weekday -- counting starts from begining of week\r\n      weekday = w.e + dow;\r\n      if (w.e < 0 || w.e > 6) {\r\n        weekdayOverflow = true;\r\n      }\r\n    } else {\r\n      // default to begining of week\r\n      weekday = dow;\r\n    }\r\n  }\r\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\r\n    getParsingFlags(config)._overflowWeeks = true;\r\n  } else if (weekdayOverflow != null) {\r\n    getParsingFlags(config)._overflowWeekday = true;\r\n  } else {\r\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\r\n    config._a[YEAR] = temp.year;\r\n    config._dayOfYear = temp.dayOfYear;\r\n  }\r\n\r\n  return config;\r\n}\r\n","import { getParsingFlags } from './parsing-flags';\r\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, WEEK, WEEKDAY, YEAR } from '../units/constants';\r\nimport { daysInMonth } from '../units/month';\r\nimport { DateParsingConfig } from './parsing.types';\r\n\r\nexport function checkOverflow(config: DateParsingConfig): DateParsingConfig {\r\n  let overflow;\r\n  const a = config._a;\r\n\r\n  if (a && getParsingFlags(config).overflow === -2) {\r\n    // todo: fix this sh*t\r\n    overflow =\r\n      a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\r\n        a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\r\n          a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\r\n            a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\r\n              a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\r\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\r\n                  -1;\r\n\r\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\r\n      overflow = DATE;\r\n    }\r\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\r\n      overflow = WEEK;\r\n    }\r\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\r\n      overflow = WEEKDAY;\r\n    }\r\n\r\n    getParsingFlags(config).overflow = overflow;\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\n","import { DateParsingConfig } from './parsing.types';\r\nimport { configFromISO, configFromRFC2822 } from './from-string';\r\nimport { expandFormat } from '../format';\r\nimport { formattingTokens, formatTokenFunctions } from '../format/format';\r\nimport { isArray, isString } from '../utils/type-checks';\r\nimport { getParseRegexForToken } from '../parse/regex';\r\nimport { addTimeToArrayFromToken } from '../parse/token';\r\nimport { HOUR } from '../units/constants';\r\nimport { configFromArray } from './from-array';\r\nimport { getParsingFlags } from './parsing-flags';\r\nimport { checkOverflow } from './check-overflow';\r\nimport { Locale } from '../locale/locale.class';\r\n\r\n// constant that refers to the ISO standard\r\n// hooks.ISO_8601 = function () {};\r\nexport const ISO_8601 = 'ISO_8601';\r\n\r\n// constant that refers to the RFC 2822 form\r\n// hooks.RFC_2822 = function () {};\r\nexport const RFC_2822 = 'RFC_2822';\r\n\r\n// date from string and format string\r\nexport function configFromStringAndFormat(config: DateParsingConfig): DateParsingConfig {\r\n  // TODO: Move this to another part of the creation flow to prevent circular deps\r\n  if (config._f === ISO_8601) {\r\n    return configFromISO(config);\r\n  }\r\n  if (config._f === RFC_2822) {\r\n    return configFromRFC2822(config);\r\n  }\r\n  config._a = [];\r\n  getParsingFlags(config).empty = true;\r\n\r\n  if (isArray(config._f) || (!config._i && config._i !== 0)) {\r\n    return config;\r\n  }\r\n\r\n  // This array is used to make a Date, either with `new Date` or `Date.UTC`\r\n\r\n  let input = config._i.toString();\r\n  let totalParsedInputLength = 0;\r\n  const inputLength = input.length;\r\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\r\n\r\n  let i;\r\n  let token;\r\n  let parsedInput;\r\n  let skipped;\r\n  for (i = 0; i < tokens.length; i++) {\r\n    token = tokens[i];\r\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\r\n    if (parsedInput) {\r\n      skipped = input.substr(0, input.indexOf(parsedInput));\r\n      if (skipped.length > 0) {\r\n        getParsingFlags(config).unusedInput.push(skipped);\r\n      }\r\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\r\n      totalParsedInputLength += parsedInput.length;\r\n    }\r\n    // don't parse if it's not a known token\r\n    if (formatTokenFunctions[token]) {\r\n      if (parsedInput) {\r\n        getParsingFlags(config).empty = false;\r\n      } else {\r\n        getParsingFlags(config).unusedTokens.push(token);\r\n      }\r\n\r\n      addTimeToArrayFromToken(token, parsedInput, config);\r\n    } else if (config._strict && !parsedInput) {\r\n      getParsingFlags(config).unusedTokens.push(token);\r\n    }\r\n  }\r\n\r\n  // add remaining unparsed input length to the string\r\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\r\n  if (input.length > 0) {\r\n    getParsingFlags(config).unusedInput.push(input);\r\n  }\r\n\r\n  // clear _12h flag if hour is <= 12\r\n  if (config._a[HOUR] <= 12 &&\r\n    getParsingFlags(config).bigHour === true &&\r\n    config._a[HOUR] > 0) {\r\n    getParsingFlags(config).bigHour = void 0;\r\n  }\r\n\r\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\r\n  getParsingFlags(config).meridiem = config._meridiem;\r\n  // handle meridiem\r\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\r\n\r\n  configFromArray(config);\r\n\r\n  return checkOverflow(config);\r\n}\r\n\r\n\r\nfunction meridiemFixWrap(locale: Locale, _hour: number, meridiem: string): number {\r\n  let hour = _hour;\r\n\r\n  if (meridiem == null) {\r\n    // nothing to do\r\n    return hour;\r\n  }\r\n\r\n  if (locale.meridiemHour != null) {\r\n    return locale.meridiemHour(hour, meridiem);\r\n  }\r\n\r\n  if (locale.isPM == null) {\r\n    // this is not supposed to happen\r\n    return hour;\r\n  }\r\n  // Fallback\r\n  const isPm = locale.isPM(meridiem);\r\n  if (isPm && hour < 12) {\r\n    hour += 12;\r\n  }\r\n\r\n  if (!isPm && hour === 12) {\r\n    hour = 0;\r\n  }\r\n\r\n  return hour;\r\n}\r\n","import { normalizeObjectUnits } from '../units/aliases';\r\nimport { configFromArray } from './from-array';\r\nimport { DateParsingConfig } from './parsing.types';\r\nimport { isObject, isString } from '../utils/type-checks';\r\n\r\nexport function configFromObject(config: DateParsingConfig): DateParsingConfig {\r\n  if (config._d) {\r\n    return config;\r\n  }\r\n\r\n  const input = config._i;\r\n  if (isObject(input)) {\r\n    const i = normalizeObjectUnits(input as any);\r\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\r\n    // todo: obsolete -> remove it\r\n      .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\r\n  }\r\n\r\n  return configFromArray(config);\r\n}\r\n","// tslint:disable:max-line-length\r\nimport { isArray, isDate, isNumber, isObject, isObjectEmpty, isString, isUndefined } from '../utils/type-checks';\r\nimport { DateParsingConfig } from './parsing.types';\r\nimport { getLocale } from '../locale/locales';\r\nimport { createInvalid, isValid } from './valid';\r\nimport { configFromStringAndArray } from './from-string-and-array';\r\nimport { configFromStringAndFormat } from './from-string-and-format';\r\nimport { cloneDate } from './clone';\r\nimport { configFromString } from './from-string';\r\nimport { configFromArray } from './from-array';\r\nimport { configFromObject } from './from-object';\r\nimport { checkOverflow } from './check-overflow';\r\nimport { DateInput } from '../test/chain';\r\n\r\nfunction createFromConfig(config: DateParsingConfig): DateParsingConfig {\r\n  const res = checkOverflow(prepareConfig(config));\r\n  // todo: remove, in moment.js it's never called cuz of moment constructor\r\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\r\n  if (!isValid(Object.assign({}, res, {_isValid: null}))) {\r\n    res._d = new Date(NaN);\r\n  }\r\n  // todo: update offset\r\n  /*if (res._nextDay) {\r\n    // Adding is smart enough around DST\r\n    res._d = add(res._d, 1, 'day');\r\n    res._nextDay = undefined;\r\n  }*/\r\n\r\n  return res;\r\n}\r\n\r\nexport function prepareConfig(config: DateParsingConfig): DateParsingConfig {\r\n  let input = config._i;\r\n  const format = config._f;\r\n\r\n  config._locale = config._locale || getLocale(config._l);\r\n\r\n  if (input === null || (format === undefined && input === '')) {\r\n    return createInvalid(config, { nullInput: true });\r\n  }\r\n\r\n  if (isString(input)) {\r\n    config._i = input = config._locale.preparse(input);\r\n  }\r\n\r\n  if (isDate(input)) {\r\n    config._d = cloneDate(input);\r\n\r\n    return config;\r\n  }\r\n\r\n  // todo: add check for recursion\r\n\r\n  if (isArray(format)) {\r\n    configFromStringAndArray(config);\r\n  } else if (format) {\r\n    configFromStringAndFormat(config);\r\n  } else {\r\n    configFromInput(config);\r\n  }\r\n\r\n  if (!isValid(config)) {\r\n    config._d = null;\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\nfunction configFromInput(config: DateParsingConfig): DateParsingConfig {\r\n  const input = config._i;\r\n  if (isUndefined(input)) {\r\n    config._d = new Date();\r\n  } else if (isDate(input)) {\r\n    config._d = cloneDate(input);\r\n  } else if (isString(input)) {\r\n    configFromString(config);\r\n  } else if (isArray<string | number>(input) && input.length) {\r\n    const _arr: (string | number)[] = input.slice(0);\r\n    config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\r\n    configFromArray(config);\r\n  } else if (isObject(input)) {\r\n    configFromObject(config);\r\n  } else if (isNumber(input)) {\r\n    // from milliseconds\r\n    config._d = new Date(input);\r\n  } else {\r\n    //   hooks.createFromInputFallback(config);\r\n    return createInvalid(config);\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\nexport function createLocalOrUTC(input: DateInput, format?: string | string[], localeKey?: string, strict?: boolean, isUTC?: boolean): DateParsingConfig {\r\n  const config: DateParsingConfig = {};\r\n  let _input = input;\r\n\r\n  // params switch -> skip; test it well\r\n  // if (localeKey === true || localeKey === false) {\r\n  //     strict = localeKey;\r\n  //     localeKey = undefined;\r\n  // }\r\n\r\n  // todo: fail fast and return not valid date\r\n  if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\r\n    _input = undefined;\r\n  }\r\n  // object construction must be done this way.\r\n  // https://github.com/moment/moment/issues/1423\r\n  // config._isAMomentObject = true;\r\n  config._useUTC = config._isUTC = isUTC;\r\n  config._l = localeKey;\r\n  config._i = _input;\r\n  config._f = format;\r\n  config._strict = strict;\r\n\r\n  return createFromConfig(config);\r\n}\r\n","import { DateParsingConfig } from './parsing.types';\r\nimport { createInvalid, isValid } from './valid';\r\nimport { getParsingFlags } from './parsing-flags';\r\nimport { configFromStringAndFormat } from './from-string-and-format';\r\n\r\n// date from string and array of format strings\r\nexport function configFromStringAndArray(config: DateParsingConfig): DateParsingConfig {\r\n  let tempConfig;\r\n  let bestMoment;\r\n  let scoreToBeat;\r\n  let currentScore;\r\n\r\n  if (!config._f || config._f.length === 0) {\r\n    getParsingFlags(config).invalidFormat = true;\r\n\r\n    return createInvalid(config);\r\n  }\r\n\r\n  let i;\r\n  for (i = 0; i < config._f.length; i++) {\r\n    currentScore = 0;\r\n    tempConfig = Object.assign({}, config);\r\n    if (config._useUTC != null) {\r\n      tempConfig._useUTC = config._useUTC;\r\n    }\r\n    tempConfig._f = config._f[i];\r\n    configFromStringAndFormat(tempConfig);\r\n\r\n    if (!isValid(tempConfig)) {\r\n      continue;\r\n    }\r\n\r\n    // if there is any input that was not parsed add a penalty for that format\r\n    currentScore += getParsingFlags(tempConfig).charsLeftOver;\r\n\r\n    // or tokens\r\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\r\n\r\n    getParsingFlags(tempConfig).score = currentScore;\r\n\r\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\r\n      scoreToBeat = currentScore;\r\n      bestMoment = tempConfig;\r\n    }\r\n  }\r\n\r\n  return Object.assign(config, bestMoment || tempConfig);\r\n}\r\n","import { createLocalOrUTC } from './from-anything';\r\nimport { DateArray, DateObject } from '../types';\r\nimport { DateInput } from '../test/chain';\r\nimport { isDate } from '../utils/type-checks';\r\n\r\nexport function parseDate(input: DateInput, format?: string | string[],\r\n                          localeKey?: string, strict?: boolean, isUTC?: boolean): Date {\r\n  if (isDate(input)) {\r\n    return input;\r\n  }\r\n\r\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\r\n\r\n  return config._d;\r\n}\r\n","export function absRound(num: number): number {\r\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\r\n}\r\n","import { UnitOfTime } from '../types';\r\nimport { endOf, startOf } from './start-end-of';\r\n\r\nexport function isAfter(\r\n  date1: Date,\r\n  date2: Date,\r\n  units: UnitOfTime = 'milliseconds'\r\n): boolean {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  if (units === 'milliseconds') {\r\n    return date1.valueOf() > date2.valueOf();\r\n  }\r\n\r\n  return date2.valueOf() < startOf(date1, units).valueOf();\r\n}\r\n\r\nexport function isBefore(\r\n  date1: Date,\r\n  date2: Date,\r\n  units: UnitOfTime = 'milliseconds'\r\n): boolean {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  if (units === 'milliseconds') {\r\n    return date1.valueOf() < date2.valueOf();\r\n  }\r\n\r\n  return endOf(date1, units).valueOf() < date2.valueOf();\r\n}\r\n\r\nexport function isDisabledDay(date: Date, daysDisabled: number[]): boolean {\r\n  if (daysDisabled === undefined || !daysDisabled || !daysDisabled.length) {\r\n    return false;\r\n  }\r\n\r\n  return daysDisabled.some((day: number) => day === date.getDay());\r\n}\r\n\r\nexport function isBetween(\r\n  date: Date,\r\n  from: Date,\r\n  to: Date,\r\n  units: UnitOfTime,\r\n  inclusivity = '()'\r\n): boolean {\r\n  const leftBound =\r\n    inclusivity[0] === '('\r\n      ? isAfter(date, from, units)\r\n      : !isBefore(date, from, units);\r\n  const rightBound =\r\n    inclusivity[1] === ')'\r\n      ? isBefore(date, to, units)\r\n      : !isAfter(date, to, units);\r\n\r\n  return leftBound && rightBound;\r\n}\r\n\r\nexport function isSame(\r\n  date1: Date,\r\n  date2: Date,\r\n  units: UnitOfTime = 'milliseconds'\r\n): boolean {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  if (units === 'milliseconds') {\r\n    return date1.valueOf() === date2.valueOf();\r\n  }\r\n\r\n  const inputMs = date2.valueOf();\r\n\r\n  return (\r\n    startOf(date1, units).valueOf() <= inputMs &&\r\n    inputMs <= endOf(date1, units).valueOf()\r\n  );\r\n}\r\n\r\nexport function isSameDay(date1: Date, date2: Date):boolean{\r\n  return (date1.getDay() == date2.getDay());\r\n}\r\n\r\nexport function isSameOrAfter(\r\n  date1: Date,\r\n  date2: Date,\r\n  units?: UnitOfTime\r\n): boolean {\r\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\r\n}\r\n\r\nexport function isSameOrBefore(\r\n  date1: Date,\r\n  date2: Date,\r\n  units?: UnitOfTime\r\n): boolean {\r\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\r\n}\r\n","// ASP.NET json date format regex\r\nimport { Duration, isDuration } from './constructor';\r\nimport { isDateValid, isNumber, isObject, isString, toInt } from '../utils/type-checks';\r\nimport { DATE, HOUR, MILLISECOND, MINUTE, SECOND } from '../units/constants';\r\nimport { parseDate } from '../create/local';\r\nimport { absRound } from '../utils/abs-round';\r\nimport { DateObject } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { cloneWithOffset } from '../units/offset';\r\nimport { isAfter, isBefore } from '../utils/date-compare';\r\nimport { getFullYear, getMonth } from '../utils/date-getters';\r\nimport { add } from '../moment/add-subtract';\r\nimport { cloneDate } from '../create/clone';\r\n\r\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\r\n\r\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\r\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\r\n// and further modified to allow for strings containing both week and day\r\n// tslint:disable-next-line\r\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\r\n\r\nexport type DurationInput = string | number | Duration | Partial<DateObject> | { from: Date; to: Date };\r\n\r\nexport function createDuration(input?: DurationInput, key?: string, config: DateParsingConfig = {}) {\r\n  const duration = convertDuration(input, key);\r\n  // matching against regexp is expensive, do it on demand\r\n\r\n  return new Duration(duration, config);\r\n}\r\n\r\nfunction convertDuration(input: any, key: string): Partial<DateObject> {\r\n  // checks for null or undefined\r\n  if (input == null) {\r\n    return {};\r\n  }\r\n\r\n  if (isDuration(input)) {\r\n    return {\r\n      milliseconds: input._milliseconds,\r\n      day: input._days,\r\n      month: input._months\r\n    };\r\n  }\r\n  if (isNumber(input)) {\r\n    // duration = {};\r\n    return key ? { [key]: input } : { milliseconds: input };\r\n  }\r\n\r\n  if (isString(input)) {\r\n    let match = aspNetRegex.exec(input);\r\n\r\n    if (match) {\r\n      const sign = (match[1] === '-') ? -1 : 1;\r\n\r\n      return {\r\n        year: 0,\r\n        day: toInt(match[DATE]) * sign,\r\n        hours: toInt(match[HOUR]) * sign,\r\n        minutes: toInt(match[MINUTE]) * sign,\r\n        seconds: toInt(match[SECOND]) * sign,\r\n        // the millisecond decimal point is included in the match\r\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\r\n      };\r\n    }\r\n\r\n    match = isoRegex.exec(input);\r\n    if (match) {\r\n      const sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\r\n\r\n      return {\r\n        year: parseIso(match[2], sign),\r\n        month: parseIso(match[3], sign),\r\n        week: parseIso(match[4], sign),\r\n        day: parseIso(match[5], sign),\r\n        hours: parseIso(match[6], sign),\r\n        minutes: parseIso(match[7], sign),\r\n        seconds: parseIso(match[8], sign)\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n  if (isObject<{from: any; to: any}>(input) && ('from' in input || 'to' in input)) {\r\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\r\n\r\n    return {\r\n      milliseconds: diffRes.milliseconds,\r\n      month: diffRes.months\r\n    };\r\n  }\r\n\r\n  return input;\r\n}\r\n\r\n// createDuration.fn = Duration.prototype;\r\n// createDuration.invalid = invalid;\r\n\r\nfunction parseIso(inp: string, sign: number): number {\r\n  // We'd normally use ~~inp for this, but unfortunately it also\r\n  // converts floats to ints.\r\n  // inp may be undefined, so careful calling replace on it.\r\n  const res = inp && parseFloat(inp.replace(',', '.'));\r\n  // apply sign while we're at it\r\n\r\n  return (isNaN(res) ? 0 : res) * sign;\r\n}\r\n\r\nfunction positiveMomentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\r\n  const res = { milliseconds: 0, months: 0 };\r\n\r\n  res.months = getMonth(other) - getMonth(base) +\r\n    (getFullYear(other) - getFullYear(base)) * 12;\r\n  const _basePlus = add(cloneDate(base), res.months, 'month');\r\n  if (isAfter(_basePlus, other)) {\r\n    --res.months;\r\n  }\r\n\r\n  res.milliseconds = +other - +(add(cloneDate(base), res.months, 'month'));\r\n\r\n  return res;\r\n}\r\n\r\nfunction momentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\r\n  if (!(isDateValid(base) && isDateValid(other))) {\r\n    return { milliseconds: 0, months: 0 };\r\n  }\r\n\r\n  let res;\r\n  const _other = cloneWithOffset(other, base, {_offset: base.getTimezoneOffset()});\r\n  if (isBefore(base, _other)) {\r\n    res = positiveMomentsDifference(base, _other);\r\n  } else {\r\n    res = positiveMomentsDifference(_other, base);\r\n    res.milliseconds = -res.milliseconds;\r\n    res.months = -res.months;\r\n  }\r\n\r\n  return res;\r\n}\r\n","import { createDuration } from '../duration/create';\r\nimport { absRound } from '../utils/abs-round';\r\nimport { Duration } from '../duration/constructor';\r\nimport { getDate, getMonth, getTime } from '../utils/date-getters';\r\nimport { setDate, setMonth, setTime } from '../utils/date-setters';\r\nimport { cloneDate } from '../create/clone';\r\nimport { UnitOfTime } from '../types';\r\n\r\nexport function add(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\r\n  const dur = createDuration(val, period);\r\n\r\n  return addSubtract(date, dur, 1, isUTC);\r\n}\r\n\r\nexport function subtract(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\r\n  const dur = createDuration(val, period);\r\n\r\n  return addSubtract(date, dur, -1, isUTC);\r\n}\r\n\r\nexport function addSubtract(date: Date, duration: Duration, isAdding: number, isUTC?: boolean): Date {\r\n  const milliseconds = duration._milliseconds;\r\n  const days = absRound(duration._days);\r\n  const months = absRound(duration._months);\r\n\r\n  // todo: add timezones support\r\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\r\n\r\n  if (months) {\r\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\r\n  }\r\n  if (days) {\r\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\r\n  }\r\n  if (milliseconds) {\r\n    setTime(date, getTime(date) + milliseconds * isAdding);\r\n  }\r\n\r\n  return cloneDate(date);\r\n  // todo: add timezones support\r\n  // if (_updateOffset) {\r\n  //   hooks.updateOffset(date, days || months);\r\n  // }\r\n}\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n\r\n//! moment.js locale configuration\r\n//! locale : Arabic [ar]\r\n//! author : Abdel Said: https://github.com/abdelsaid\r\n//! author : Ahmed Elkhatib\r\n//! author : forabi https://github.com/forabi\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\nconst symbolMap: {[key: string]: string} = {\r\n  1: 'Ù¡',\r\n  2: 'Ù¢',\r\n  3: 'Ù£',\r\n  4: 'Ù¤',\r\n  5: 'Ù¥',\r\n  6: 'Ù¦',\r\n  7: 'Ù§',\r\n  8: 'Ù¨',\r\n  9: 'Ù©',\r\n  0: 'Ù '\r\n};\r\nconst numberMap: {[key: string]: string} = {\r\n  'Ù¡': '1',\r\n  'Ù¢': '2',\r\n  'Ù£': '3',\r\n  'Ù¤': '4',\r\n  'Ù¥': '5',\r\n  'Ù¦': '6',\r\n  'Ù§': '7',\r\n  'Ù¨': '8',\r\n  'Ù©': '9',\r\n  'Ù ': '0'\r\n};\r\nconst pluralForm = function (num: number): number {\r\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\r\n};\r\nconst plurals: {[key: string]: [string, string, [string, string], string, string, string]} = {\r\n  s: ['Ø£ÙÙ ÙÙ Ø«Ø§ÙÙØ©', 'Ø«Ø§ÙÙØ© ÙØ§Ø­Ø¯Ø©', ['Ø«Ø§ÙÙØªØ§Ù', 'Ø«Ø§ÙÙØªÙÙ'], '%d Ø«ÙØ§Ù', '%d Ø«Ø§ÙÙØ©', '%d Ø«Ø§ÙÙØ©'],\r\n  m: ['Ø£ÙÙ ÙÙ Ø¯ÙÙÙØ©', 'Ø¯ÙÙÙØ© ÙØ§Ø­Ø¯Ø©', ['Ø¯ÙÙÙØªØ§Ù', 'Ø¯ÙÙÙØªÙÙ'], '%d Ø¯ÙØ§Ø¦Ù', '%d Ø¯ÙÙÙØ©', '%d Ø¯ÙÙÙØ©'],\r\n  h: ['Ø£ÙÙ ÙÙ Ø³Ø§Ø¹Ø©', 'Ø³Ø§Ø¹Ø© ÙØ§Ø­Ø¯Ø©', ['Ø³Ø§Ø¹ØªØ§Ù', 'Ø³Ø§Ø¹ØªÙÙ'], '%d Ø³Ø§Ø¹Ø§Øª', '%d Ø³Ø§Ø¹Ø©', '%d Ø³Ø§Ø¹Ø©'],\r\n  d: ['Ø£ÙÙ ÙÙ ÙÙÙ', 'ÙÙÙ ÙØ§Ø­Ø¯', ['ÙÙÙØ§Ù', 'ÙÙÙÙÙ'], '%d Ø£ÙØ§Ù', '%d ÙÙÙÙØ§', '%d ÙÙÙ'],\r\n  M: ['Ø£ÙÙ ÙÙ Ø´ÙØ±', 'Ø´ÙØ± ÙØ§Ø­Ø¯', ['Ø´ÙØ±Ø§Ù', 'Ø´ÙØ±ÙÙ'], '%d Ø£Ø´ÙØ±', '%d Ø´ÙØ±Ø§', '%d Ø´ÙØ±'],\r\n  y: ['Ø£ÙÙ ÙÙ Ø¹Ø§Ù', 'Ø¹Ø§Ù ÙØ§Ø­Ø¯', ['Ø¹Ø§ÙØ§Ù', 'Ø¹Ø§ÙÙÙ'], '%d Ø£Ø¹ÙØ§Ù', '%d Ø¹Ø§ÙÙØ§', '%d Ø¹Ø§Ù']\r\n};\r\nconst pluralize = function (u: string) {\r\n  return function (num: number, withoutSuffix: boolean): string {\r\n    const f = pluralForm(num);\r\n    let str = plurals[u][pluralForm(num)];\r\n    if (f === 2) {\r\n      str = str[withoutSuffix ? 0 : 1];\r\n    }\r\n\r\n    return (str as string).replace(/%d/i, num.toString());\r\n  };\r\n};\r\nconst months: string[] = [\r\n  'ÙÙØ§ÙØ±',\r\n  'ÙØ¨Ø±Ø§ÙØ±',\r\n  'ÙØ§Ø±Ø³',\r\n  'Ø£Ø¨Ø±ÙÙ',\r\n  'ÙØ§ÙÙ',\r\n  'ÙÙÙÙÙ',\r\n  'ÙÙÙÙÙ',\r\n  'Ø£ØºØ³Ø·Ø³',\r\n  'Ø³Ø¨ØªÙØ¨Ø±',\r\n  'Ø£ÙØªÙØ¨Ø±',\r\n  'ÙÙÙÙØ¨Ø±',\r\n  'Ø¯ÙØ³ÙØ¨Ø±'\r\n];\r\n\r\nexport const arLocale: LocaleData = {\r\n  abbr: 'ar',\r\n  months,\r\n  monthsShort: months,\r\n  weekdays: 'Ø§ÙØ£Ø­Ø¯_Ø§ÙØ¥Ø«ÙÙÙ_Ø§ÙØ«ÙØ§Ø«Ø§Ø¡_Ø§ÙØ£Ø±Ø¨Ø¹Ø§Ø¡_Ø§ÙØ®ÙÙØ³_Ø§ÙØ¬ÙØ¹Ø©_Ø§ÙØ³Ø¨Øª'.split('_'),\r\n  weekdaysShort: 'Ø£Ø­Ø¯_Ø¥Ø«ÙÙÙ_Ø«ÙØ§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®ÙÙØ³_Ø¬ÙØ¹Ø©_Ø³Ø¨Øª'.split('_'),\r\n  weekdaysMin: 'Ø­_Ù_Ø«_Ø±_Ø®_Ø¬_Ø³'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'D/\\u200FM/\\u200FYYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY HH:mm'\r\n  },\r\n  meridiemParse: /Øµ|Ù/,\r\n  isPM(input) {\r\n    return 'Ù' === input;\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 12) {\r\n      return 'Øµ';\r\n    } else {\r\n      return 'Ù';\r\n    }\r\n  },\r\n  calendar: {\r\n    sameDay: '[Ø§ÙÙÙÙ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\r\n    nextDay: '[ØºØ¯ÙØ§ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\r\n    nextWeek: 'dddd [Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\r\n    lastDay: '[Ø£ÙØ³ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\r\n    lastWeek: 'dddd [Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'Ø¨Ø¹Ø¯ %s',\r\n    past: 'ÙÙØ° %s',\r\n    s: pluralize('s'),\r\n    ss: pluralize('s'),\r\n    m: pluralize('m'),\r\n    mm: pluralize('m'),\r\n    h: pluralize('h'),\r\n    hh: pluralize('h'),\r\n    d: pluralize('d'),\r\n    dd: pluralize('d'),\r\n    M: pluralize('M'),\r\n    MM: pluralize('M'),\r\n    y: pluralize('y'),\r\n    yy: pluralize('y')\r\n  },\r\n  preparse(str: string): string {\r\n    return str.replace(/[Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©Ù ]/g, function (match) {\r\n      return numberMap[match];\r\n    }).replace(/Ø/g, ',');\r\n  },\r\n  postformat(str: string) {\r\n    return str.replace(/\\d/g, function (match) {\r\n      return symbolMap[match];\r\n    }).replace(/,/g, 'Ø');\r\n  },\r\n  week: {\r\n    dow: 6, // Saturday is the first day of the week.\r\n    doy: 12  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { Khronos } from '../test/chain';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Bulgarian [bg]\r\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\r\n//! author : Kunal Marwaha : https://github.com/marwahaha\r\n//! author : Matt Grande : https://github.com/mattgrande\r\n//! author : Isaac Cambron : https://github.com/icambron\r\n//! author : Venelin Manchev : https://github.com/vmanchev\r\n\r\nexport const bgLocale: LocaleData = {\r\n  abbr: 'bg',\r\n  months: 'ÑÐ½ÑÐ°ÑÐ¸_ÑÐµÐ²ÑÑÐ°ÑÐ¸_Ð¼Ð°ÑÑ_Ð°Ð¿ÑÐ¸Ð»_Ð¼Ð°Ð¹_ÑÐ½Ð¸_ÑÐ»Ð¸_Ð°Ð²Ð³ÑÑÑ_ÑÐµÐ¿ÑÐµÐ¼Ð²ÑÐ¸_Ð¾ÐºÑÐ¾Ð¼Ð²ÑÐ¸_Ð½Ð¾ÐµÐ¼Ð²ÑÐ¸_Ð´ÐµÐºÐµÐ¼Ð²ÑÐ¸'.split('_'),\r\n  monthsShort: 'ÑÐ½Ñ_ÑÐµÐ²_Ð¼Ð°Ñ_Ð°Ð¿Ñ_Ð¼Ð°Ð¹_ÑÐ½Ð¸_ÑÐ»Ð¸_Ð°Ð²Ð³_ÑÐµÐ¿_Ð¾ÐºÑ_Ð½Ð¾Ðµ_Ð´ÐµÐº'.split('_'),\r\n  weekdays: 'Ð½ÐµÐ´ÐµÐ»Ñ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÑÐ´Ð°_ÑÐµÑÐ²ÑÑÑÑÐº_Ð¿ÐµÑÑÐº_ÑÑÐ±Ð¾ÑÐ°'.split('_'),\r\n  weekdaysShort: 'Ð½ÐµÐ´_Ð¿Ð¾Ð½_Ð²ÑÐ¾_ÑÑÑ_ÑÐµÑ_Ð¿ÐµÑ_ÑÑÐ±'.split('_'),\r\n  weekdaysMin: 'Ð½Ð´_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'D.MM.YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY H:mm',\r\n    LLLL: 'dddd, D MMMM YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[ÐÐ½ÐµÑ Ð²] LT',\r\n    nextDay: '[Ð£ÑÑÐµ Ð²] LT',\r\n    nextWeek: 'dddd [Ð²] LT',\r\n    lastDay: '[ÐÑÐµÑÐ° Ð²] LT',\r\n    lastWeek: function (d: any) {\r\n\r\n      switch (d) {\r\n        case 0:\r\n        case 3:\r\n        case 6:\r\n          return '[Ð Ð¸Ð·Ð¼Ð¸Ð½Ð°Ð»Ð°ÑÐ°] dddd [Ð²] LT';\r\n        case 1:\r\n        case 2:\r\n        case 4:\r\n        case 5:\r\n          return '[Ð Ð¸Ð·Ð¼Ð¸Ð½Ð°Ð»Ð¸Ñ] dddd [Ð²] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'ÑÐ»ÐµÐ´ %s',\r\n    past: 'Ð¿ÑÐµÐ´Ð¸ %s',\r\n    s: 'Ð½ÑÐºÐ¾Ð»ÐºÐ¾ ÑÐµÐºÑÐ½Ð´Ð¸',\r\n    ss: '%d ÑÐµÐºÑÐ½Ð´Ð¸',\r\n    m: 'Ð¼Ð¸Ð½ÑÑÐ°',\r\n    mm: '%d Ð¼Ð¸Ð½ÑÑÐ¸',\r\n    h: 'ÑÐ°Ñ',\r\n    hh: '%d ÑÐ°ÑÐ°',\r\n    d: 'Ð´ÐµÐ½',\r\n    dd: '%d Ð´Ð½Ð¸',\r\n    M: 'Ð¼ÐµÑÐµÑ',\r\n    MM: '%d Ð¼ÐµÑÐµÑÐ°',\r\n    y: 'Ð³Ð¾Ð´Ð¸Ð½Ð°',\r\n    yy: '%d Ð³Ð¾Ð´Ð¸Ð½Ð¸'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ÐµÐ²|ÐµÐ½|ÑÐ¸|Ð²Ð¸|ÑÐ¸|Ð¼Ð¸)/,\r\n  ordinal: function (_num: number): string {\r\n\r\n    const number = Number(_num);\r\n\r\n    let lastDigit = number % 10,\r\n      last2Digits = number % 100;\r\n\r\n    if (number === 0) {\r\n      return number + '-ÐµÐ²';\r\n    } else if (last2Digits === 0) {\r\n      return number + '-ÐµÐ½';\r\n    } else if (last2Digits > 10 && last2Digits < 20) {\r\n      return number + '-ÑÐ¸';\r\n    } else if (lastDigit === 1) {\r\n      return number + '-Ð²Ð¸';\r\n    } else if (lastDigit === 2) {\r\n      return number + '-ÑÐ¸';\r\n    } else if (lastDigit === 7 || lastDigit === 8) {\r\n      return number + '-Ð¼Ð¸';\r\n    } else {\r\n      return number + '-ÑÐ¸';\r\n    }\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Catalan [ca]\r\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\r\n\r\nlet monthsShortDot = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_'),\r\n  monthsShort = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\r\n\r\nlet monthsParse = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\r\nlet monthsRegex = /^(gener|febrer|marÃ§|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\r\n\r\nexport const caLocale: LocaleData = {\r\n  abbr: 'ca',\r\n  months: 'gener_febrer_marÃ§_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    }\r\n\r\n    if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    }\r\n\r\n    return monthsShortDot[getMonth(date, isUTC)];\r\n  },\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(gener|febrer|marÃ§|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\r\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\r\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\r\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [de] MMMM [de] YYYY',\r\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\r\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date) {\r\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date) {\r\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date) {\r\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date) {\r\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date) {\r\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'fa %s',\r\n    s: 'uns segons',\r\n    ss: '%d segons',\r\n    m: 'un minut',\r\n    mm: '%d minuts',\r\n    h: 'una hora',\r\n    hh: '%d hores',\r\n    d: 'un dia',\r\n    dd: '%d dies',\r\n    M: 'un mes',\r\n    MM: '%d mesos',\r\n    y: 'un any',\r\n    yy: '%d anys'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|Ã©)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    const output = (num > 4) ? 'Ã©' :\r\n        (num === 1 || num === 3) ? 'r' :\r\n          (num === 2) ? 'n' :\r\n            (num === 4) ? 't' : 'Ã©';\r\n    return num + output;\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Czech [cs]\r\n//! author : petrbela : https://github.com/petrbela\r\n\r\nconst months: string[] = 'leden_Ãºnor_bÅezen_duben_kvÄten_Äerven_Äervenec_srpen_zÃ¡ÅÃ­_ÅÃ­jen_listopad_prosinec'.split('_');\r\nconst monthsShort: string[] = 'led_Ãºno_bÅe_dub_kvÄ_Ävn_Ävc_srp_zÃ¡Å_ÅÃ­j_lis_pro'.split('_');\r\n\r\nfunction plural(num: number): boolean {\r\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\r\n}\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  const result = num + ' ';\r\n\r\n  switch (key) {\r\n    case 's':  // a few seconds / in a few seconds / a few seconds ago\r\n      return (withoutSuffix || isFuture) ? 'pÃ¡r sekund' : 'pÃ¡r sekundami';\r\n    case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'sekundy' : 'sekund');\r\n      } else {\r\n        return result + 'sekundami';\r\n      }\r\n    // break;\r\n    case 'm':  // a minute / in a minute / a minute ago\r\n      return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\r\n    case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'minuty' : 'minut');\r\n      } else {\r\n        return result + 'minutami';\r\n      }\r\n    // break;\r\n    case 'h':  // an hour / in an hour / an hour ago\r\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\r\n    case 'hh': // 9 hours / in 9 hours / 9 hours ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'hodiny' : 'hodin');\r\n      } else {\r\n        return result + 'hodinami';\r\n      }\r\n    // break;\r\n    case 'd':  // a day / in a day / a day ago\r\n      return (withoutSuffix || isFuture) ? 'den' : 'dnem';\r\n    case 'dd': // 9 days / in 9 days / 9 days ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'dny' : 'dnÃ­');\r\n      } else {\r\n        return result + 'dny';\r\n      }\r\n    // break;\r\n    case 'M':  // a month / in a month / a month ago\r\n      return (withoutSuffix || isFuture) ? 'mÄsÃ­c' : 'mÄsÃ­cem';\r\n    case 'MM': // 9 months / in 9 months / 9 months ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'mÄsÃ­ce' : 'mÄsÃ­cÅ¯');\r\n      } else {\r\n        return result + 'mÄsÃ­ci';\r\n      }\r\n    // break;\r\n    case 'y':  // a year / in a year / a year ago\r\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\r\n    case 'yy': // 9 years / in 9 years / 9 years ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'roky' : 'let');\r\n      } else {\r\n        return result + 'lety';\r\n      }\r\n    // break;\r\n  }\r\n}\r\n\r\nexport const csLocale: LocaleData = {\r\n  abbr: 'cs',\r\n  months,\r\n  monthsShort,\r\n  monthsParse: (function (months, monthsShort) {\r\n    let i, _monthsParse = [];\r\n    for (i = 0; i < 12; i++) {\r\n      // use custom parser to solve problem with July (Äervenec)\r\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\r\n    }\r\n    return _monthsParse;\r\n  }(months, monthsShort)),\r\n  shortMonthsParse: (function (monthsShort) {\r\n    let i, _shortMonthsParse = [];\r\n    for (i = 0; i < 12; i++) {\r\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\r\n    }\r\n    return _shortMonthsParse;\r\n  }(monthsShort)),\r\n  longMonthsParse: (function (months) {\r\n    let i, _longMonthsParse = [];\r\n    for (i = 0; i < 12; i++) {\r\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\r\n    }\r\n    return _longMonthsParse;\r\n  }(months)),\r\n  weekdays: 'nedÄle_pondÄlÃ­_ÃºterÃ½_stÅeda_Ätvrtek_pÃ¡tek_sobota'.split('_'),\r\n  weekdaysShort: 'ne_po_Ãºt_st_Ät_pÃ¡_so'.split('_'),\r\n  weekdaysMin: 'ne_po_Ãºt_st_Ät_pÃ¡_so'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D. MMMM YYYY',\r\n    LLL: 'D. MMMM YYYY H:mm',\r\n    LLLL: 'dddd D. MMMM YYYY H:mm',\r\n    l: 'D. M. YYYY'\r\n  },\r\n  calendar: {\r\n    sameDay: '[dnes v] LT',\r\n    nextDay: '[zÃ­tra v] LT',\r\n    nextWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[v nedÄli v] LT';\r\n        case 1:\r\n        case 2:\r\n          return '[v] dddd [v] LT';\r\n        case 3:\r\n          return '[ve stÅedu v] LT';\r\n        case 4:\r\n          return '[ve Ätvrtek v] LT';\r\n        case 5:\r\n          return '[v pÃ¡tek v] LT';\r\n        case 6:\r\n          return '[v sobotu v] LT';\r\n      }\r\n    },\r\n    lastDay: '[vÄera v] LT',\r\n    lastWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[minulou nedÄli v] LT';\r\n        case 1:\r\n        case 2:\r\n          return '[minulÃ©] dddd [v] LT';\r\n        case 3:\r\n          return '[minulou stÅedu v] LT';\r\n        case 4:\r\n        case 5:\r\n          return '[minulÃ½] dddd [v] LT';\r\n        case 6:\r\n          return '[minulou sobotu v] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'za %s',\r\n    past: 'pÅed %s',\r\n    s: translate,\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: translate,\r\n    dd: translate,\r\n    M: translate,\r\n    MM: translate,\r\n    y: translate,\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","// tslint:disable:comment-format\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Danish (Denmark) [da]\r\n//! author : Per Hansen : https://github.com/perhp\r\n\r\nexport const daLocale: LocaleData = {\r\n  abbr: 'da',\r\n  months : 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\r\n  monthsShort : 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\r\n  weekdays : 'SÃ¸ndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_LÃ¸rdag'.split('_'),\r\n  weekdaysShort : 'SÃ¸n_Man_Tir_Ons_Tor_Fre_LÃ¸r'.split('_'),\r\n  weekdaysMin : 'SÃ¸_Ma_Ti_On_To_Fr_LÃ¸'.split('_'),\r\n  longDateFormat : {\r\n      LT : 'HH:mm',\r\n      LTS : 'HH:mm:ss',\r\n      L : 'DD/MM/YYYY',\r\n      LL : 'D. MMMM YYYY',\r\n      LLL : 'D. MMMM YYYY HH:mm',\r\n      LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\r\n  },\r\n  calendar : {\r\n      sameDay : '[i dag kl.] LT',\r\n      nextDay : '[i morgen kl.] LT',\r\n      nextWeek : 'pÃ¥ dddd [kl.] LT',\r\n      lastDay : '[i gÃ¥r kl.] LT',\r\n      lastWeek : '[i] dddd[s kl.] LT',\r\n      sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n      future : 'om %s',\r\n      past : '%s siden',\r\n      s : 'fÃ¥ sekunder',\r\n      m : 'et minut',\r\n      mm : '%d minutter',\r\n      h : 'en time',\r\n      hh : '%d timer',\r\n      d : 'en dag',\r\n      dd : '%d dage',\r\n      M : 'en mÃ¥ned',\r\n      MM : '%d mÃ¥neder',\r\n      y : 'et Ã¥r',\r\n      yy : '%d Ã¥r'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal : '%d.',\r\n  week : {\r\n      dow : 1, // Monday is the first day of the week.\r\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n// tslint:disable:object-literal-key-quotes\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : German [de]\r\n//! author : lluchs : https://github.com/lluchs\r\n//! author: Menelion ElensÃºle: https://github.com/Oire\r\n//! author : Mikolaj Dadela : https://github.com/mik01aj\r\n\r\nfunction processRelativeTime(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  const format: { [key: string]: [string, string] } = {\r\n    'm': ['eine Minute', 'einer Minute'],\r\n    'h': ['eine Stunde', 'einer Stunde'],\r\n    'd': ['ein Tag', 'einem Tag'],\r\n    'dd': [num + ' Tage', num + ' Tagen'],\r\n    'M': ['ein Monat', 'einem Monat'],\r\n    'MM': [num + ' Monate', num + ' Monaten'],\r\n    'y': ['ein Jahr', 'einem Jahr'],\r\n    'yy': [num + ' Jahre', num + ' Jahren']\r\n  };\r\n  return withoutSuffix ? format[key][0] : format[key][1];\r\n}\r\n\r\nexport const deLocale: LocaleData = {\r\n  abbr: 'de',\r\n  months: 'Januar_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\r\n  monthsShort: 'Jan._Feb._MÃ¤rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\r\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\r\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D. MMMM YYYY',\r\n    LLL: 'D. MMMM YYYY HH:mm',\r\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[heute um] LT [Uhr]',\r\n    sameElse: 'L',\r\n    nextDay: '[morgen um] LT [Uhr]',\r\n    nextWeek: 'dddd [um] LT [Uhr]',\r\n    lastDay: '[gestern um] LT [Uhr]',\r\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\r\n  },\r\n  relativeTime: {\r\n    future: 'in %s',\r\n    past: 'vor %s',\r\n    s: 'ein paar Sekunden',\r\n    ss: '%d Sekunden',\r\n    m: processRelativeTime,\r\n    mm: '%d Minuten',\r\n    h: processRelativeTime,\r\n    hh: '%d Stunden',\r\n    d: processRelativeTime,\r\n    dd: processRelativeTime,\r\n    M: processRelativeTime,\r\n    MM: processRelativeTime,\r\n    y: processRelativeTime,\r\n    yy: processRelativeTime\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : English (United Kingdom) [en-gb]\r\n//! author : Chris Gedrim : https://github.com/chrisgedrim\r\n\r\nexport const enGbLocale: LocaleData = {\r\n  abbr: 'en-gb',\r\n  months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\r\n  monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\r\n  weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\r\n  weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\r\n  weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'DD/MM/YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY HH:mm',\r\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar : {\r\n    sameDay : '[Today at] LT',\r\n    nextDay : '[Tomorrow at] LT',\r\n    nextWeek : 'dddd [at] LT',\r\n    lastDay : '[Yesterday at] LT',\r\n    lastWeek : '[Last] dddd [at] LT',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : 'in %s',\r\n    past : '%s ago',\r\n    s : 'a few seconds',\r\n    ss : '%d seconds',\r\n    m : 'a minute',\r\n    mm : '%d minutes',\r\n    h : 'an hour',\r\n    hh : '%d hours',\r\n    d : 'a day',\r\n    dd : '%d days',\r\n    M : 'a month',\r\n    MM : '%d months',\r\n    y : 'a year',\r\n    yy : '%d years'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    const b = num % 10,\r\n      output = (~~(num % 100 / 10) === 1) ? 'th' :\r\n        (b === 1) ? 'st' :\r\n          (b === 2) ? 'nd' :\r\n            (b === 3) ? 'rd' : 'th';\r\n    return num + output;\r\n  },\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Spanish (Dominican Republic) [es-do]\r\n\r\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\r\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\r\n\r\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\r\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\r\n\r\nexport const esDoLocale: LocaleData = {\r\n  abbr: 'es-do',\r\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    } else if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsShortDot[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\r\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\r\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'h:mm A',\r\n    LTS: 'h:mm:ss A',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [de] MMMM [de] YYYY',\r\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\r\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date): string {\r\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date): string {\r\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date): string {\r\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date): string {\r\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date): string {\r\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'hace %s',\r\n    s: 'unos segundos',\r\n    ss: '%d segundos',\r\n    m: 'un minuto',\r\n    mm: '%d minutos',\r\n    h: 'una hora',\r\n    hh: '%d horas',\r\n    d: 'un dÃ­a',\r\n    dd: '%d dÃ­as',\r\n    M: 'un mes',\r\n    MM: '%d meses',\r\n    y: 'un aÃ±o',\r\n    yy: '%d aÃ±os'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\r\n  ordinal: '%dÂº',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Spanish [es]\r\n//! author : Julio NapurÃ­ : https://github.com/julionc\r\n\r\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\r\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\r\n\r\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\r\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\r\n\r\nexport const esLocale: LocaleData = {\r\n  abbr: 'es',\r\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    }\r\n\r\n    if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    }\r\n\r\n    return monthsShortDot[getMonth(date, isUTC)];\r\n  },\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\r\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\r\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [de] MMMM [de] YYYY',\r\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\r\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date) {\r\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date) {\r\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date) {\r\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date) {\r\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date) {\r\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'hace %s',\r\n    s: 'unos segundos',\r\n    ss: '%d segundos',\r\n    m: 'un minuto',\r\n    mm: '%d minutos',\r\n    h: 'una hora',\r\n    hh: '%d horas',\r\n    d: 'un dÃ­a',\r\n    dd: '%d dÃ­as',\r\n    M: 'un mes',\r\n    MM: '%d meses',\r\n    y: 'un aÃ±o',\r\n    yy: '%d aÃ±os'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\r\n  ordinal: '%dÂº',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Spanish (United States) [es-us]\r\n//! author : bustta : https://github.com/bustta\r\n\r\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\r\nlet monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\r\n\r\nexport const esUsLocale: LocaleData = {\r\n  abbr: 'es-us',\r\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    } else if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsShortDot[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n  monthsParseExact: true,\r\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\r\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'h:mm A',\r\n    LTS: 'h:mm:ss A',\r\n    L: 'MM/DD/YYYY',\r\n    LL: 'MMMM [de] D [de] YYYY',\r\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\r\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date): string {\r\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date): string {\r\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date): string {\r\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date): string {\r\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date): string {\r\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'hace %s',\r\n    s: 'unos segundos',\r\n    ss: '%d segundos',\r\n    m: 'un minuto',\r\n    mm: '%d minutos',\r\n    h: 'una hora',\r\n    hh: '%d horas',\r\n    d: 'un dÃ­a',\r\n    dd: '%d dÃ­as',\r\n    M: 'un mes',\r\n    MM: '%d meses',\r\n    y: 'un aÃ±o',\r\n    yy: '%d aÃ±os'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\r\n  ordinal: '%dÂº',\r\n  week: {\r\n    dow: 0, // Sunday is the first day of the week.\r\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n// https://github.com/moment/moment/blob/develop/locale/fi.js\r\n\r\nvar numbersPast = 'nolla yksi kaksi kolme neljÃ¤ viisi kuusi seitsemÃ¤n kahdeksan yhdeksÃ¤n'.split(' '),\r\n  numbersFuture = [\r\n    'nolla', 'yhden', 'kahden', 'kolmen', 'neljÃ¤n', 'viiden', 'kuuden',\r\n    numbersPast[7], numbersPast[8], numbersPast[9]\r\n  ];\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  var result = '';\r\n  switch (key) {\r\n    case 's':\r\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\r\n    case 'ss':\r\n      return isFuture ? 'sekunnin' : 'sekuntia';\r\n    case 'm':\r\n      return isFuture ? 'minuutin' : 'minuutti';\r\n    case 'mm':\r\n      result = isFuture ? 'minuutin' : 'minuuttia';\r\n      break;\r\n    case 'h':\r\n      return isFuture ? 'tunnin' : 'tunti';\r\n    case 'hh':\r\n      result = isFuture ? 'tunnin' : 'tuntia';\r\n      break;\r\n    case 'd':\r\n      return isFuture ? 'pÃ¤ivÃ¤n' : 'pÃ¤ivÃ¤';\r\n    case 'dd':\r\n      result = isFuture ? 'pÃ¤ivÃ¤n' : 'pÃ¤ivÃ¤Ã¤';\r\n      break;\r\n    case 'M':\r\n      return isFuture ? 'kuukauden' : 'kuukausi';\r\n    case 'MM':\r\n      result = isFuture ? 'kuukauden' : 'kuukautta';\r\n      break;\r\n    case 'y':\r\n      return isFuture ? 'vuoden' : 'vuosi';\r\n    case 'yy':\r\n      result = isFuture ? 'vuoden' : 'vuotta';\r\n      break;\r\n  }\r\n  result = verbalNumber(num, isFuture) + ' ' + result;\r\n  return result;\r\n}\r\n\r\nfunction verbalNumber(num: number, isFuture: boolean) {\r\n  return num < 10 ? (isFuture ? numbersFuture[num] : numbersPast[num]) : num;\r\n}\r\n\r\nexport const fiLocale: LocaleData = {\r\n  abbr: 'fi',\r\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesÃ¤kuu_heinÃ¤kuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\r\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesÃ¤_heinÃ¤_elo_syys_loka_marras_joulu'.split('_'),\r\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\r\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\r\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH.mm',\r\n    LTS: 'HH.mm.ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'Do MMMM[ta] YYYY',\r\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\r\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\r\n    l: 'D.M.YYYY',\r\n    ll: 'Do MMM YYYY',\r\n    lll: 'Do MMM YYYY, [klo] HH.mm',\r\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[tÃ¤nÃ¤Ã¤n] [klo] LT',\r\n    nextDay: '[huomenna] [klo] LT',\r\n    nextWeek: 'dddd [klo] LT',\r\n    lastDay: '[eilen] [klo] LT',\r\n    lastWeek: '[viime] dddd[na] [klo] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: '%s pÃ¤Ã¤stÃ¤',\r\n    past: '%s sitten',\r\n    s: translate,\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: translate,\r\n    dd: translate,\r\n    M: translate,\r\n    MM: translate,\r\n    y: translate,\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : French [fr]\r\n//! author : John Fischer : https://github.com/jfroffice\r\n\r\nexport const frLocale: LocaleData = {\r\n  abbr: 'fr',\r\n  months: 'janvier_fÃ©vrier_mars_avril_mai_juin_juillet_aoÃ»t_septembre_octobre_novembre_dÃ©cembre'.split('_'),\r\n  monthsShort: 'janv._fÃ©vr._mars_avr._mai_juin_juil._aoÃ»t_sept._oct._nov._dÃ©c.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\r\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\r\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Aujourdâhui Ã ] LT',\r\n    nextDay: '[Demain Ã ] LT',\r\n    nextWeek: 'dddd [Ã ] LT',\r\n    lastDay: '[Hier Ã ] LT',\r\n    lastWeek: 'dddd [dernier Ã ] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'dans %s',\r\n    past: 'il y a %s',\r\n    s: 'quelques secondes',\r\n    ss: '%d secondes',\r\n    m: 'une minute',\r\n    mm: '%d minutes',\r\n    h: 'une heure',\r\n    hh: '%d heures',\r\n    d: 'un jour',\r\n    dd: '%d jours',\r\n    M: 'un mois',\r\n    MM: '%d mois',\r\n    y: 'un an',\r\n    yy: '%d ans'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\r\n  ordinal(_num: number, period: string): string {\r\n    const num = Number(_num);\r\n    switch (period) {\r\n      // TODO: Return 'e' when day of month > 1. Move this case inside\r\n      // block for masculine words below.\r\n      // See https://github.com/moment/moment/issues/3375\r\n      case 'D':\r\n        return num + (num === 1 ? 'er' : '');\r\n\r\n      // Words with masculine grammatical gender: mois, trimestre, jour\r\n      default:\r\n      case 'M':\r\n      case 'Q':\r\n      case 'DDD':\r\n      case 'd':\r\n        return num + (num === 1 ? 'er' : 'e');\r\n\r\n      // Words with feminine grammatical gender: semaine\r\n      case 'w':\r\n      case 'W':\r\n        return num + (num === 1 ? 're' : 'e');\r\n    }\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Galician [gl]\r\n//! author : DarÃ­o BeirÃ³ : https://github.com/quinobravo\r\n\r\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuÃ±._xul._ago._set._out._nov._dec.'.split('_'),\r\n  monthsShort = 'xan_feb_mar_abr_mai_xuÃ±_xul_ago_set_out_nov_dec'.split('_');\r\n\r\nlet monthsParse = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuÃ±/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\r\nlet monthsRegex = /^(xaneiro|febreiro|marzo|abril|maio|xuÃ±o|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuÃ±\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\r\n\r\nexport const glLocale: LocaleData = {\r\n  abbr: 'gl',\r\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuÃ±o_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    }\r\n\r\n    if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    }\r\n\r\n    return monthsShortDot[getMonth(date, isUTC)];\r\n  },\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuÃ±o|xullo|agosto|setembro|outubro|novembro|decembro)/i,\r\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuÃ±\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n  weekdays: 'domingo_luns_martes_mÃ©rcores_xoves_venres_sÃ¡bado'.split('_'),\r\n  weekdaysShort: 'dom._lun._mar._mÃ©r._xov._ven._sÃ¡b.'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_mÃ©_xo_ve_sÃ¡'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [de] MMMM [de] YYYY',\r\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\r\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date) {\r\n      return '[hoxe Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date) {\r\n      return '[maÃ±an Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date) {\r\n      return 'dddd [Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date) {\r\n      return '[onte Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date) {\r\n      return '[o] dddd [pasado Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'fai %s',\r\n    s: 'uns segundos',\r\n    ss: '%d segundos',\r\n    m: 'un minuto',\r\n    mm: '%d minutos',\r\n    h: 'unha hora',\r\n    hh: '%d horas',\r\n    d: 'un dÃ­a',\r\n    dd: '%d dÃ­as',\r\n    M: 'un mes',\r\n    MM: '%d meses',\r\n    y: 'un ano',\r\n    yy: '%d anos'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\r\n  ordinal: '%dÂº',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Hebrew [he]\r\n//! author : Tomer Cohen : https://github.com/tomer\r\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\r\n//! author : Tal Ater : https://github.com/TalAter\r\n\r\nexport const heLocale: LocaleData = {\r\n  abbr: 'he',\r\n  months: '×× ×××¨_×¤××¨×××¨_××¨×¥_××¤×¨××_×××_××× ×_××××_×××××¡×_×¡×¤××××¨_×××§××××¨_× ×××××¨_××¦×××¨'.split('_'),\r\n  monthsShort: '×× ××³_×¤××¨×³_××¨×¥_××¤×¨×³_×××_××× ×_××××_××××³_×¡×¤××³_×××§×³_× ×××³_××¦××³'.split('_'),\r\n  weekdays: '×¨××©××_×©× ×_×©×××©×_×¨×××¢×_××××©×_×©××©×_×©××ª'.split('_'),\r\n  weekdaysShort: '××³_××³_××³_××³_××³_××³_×©×³'.split('_'),\r\n  weekdaysMin: '×_×_×_×_×_×_×©'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [×]MMMM YYYY',\r\n    LLL: 'D [×]MMMM YYYY HH:mm',\r\n    LLLL: 'dddd, D [×]MMMM YYYY HH:mm',\r\n    l: 'D/M/YYYY',\r\n    ll: 'D MMM YYYY',\r\n    lll: 'D MMM YYYY HH:mm',\r\n    llll: 'ddd, D MMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[×××× ×Ö¾]LT',\r\n    nextDay: '[×××¨ ×Ö¾]LT',\r\n    nextWeek: 'dddd [××©×¢×] LT',\r\n    lastDay: '[××ª××× ×Ö¾]LT',\r\n    lastWeek: '[××××] dddd [××××¨×× ××©×¢×] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: '××¢×× %s',\r\n    past: '××¤× × %s',\r\n    s: '××¡×¤×¨ ×©× ×××ª',\r\n    ss: '%d ×©× ×××ª',\r\n    m: '××§×',\r\n    mm: '%d ××§××ª',\r\n    h: '×©×¢×',\r\n    hh(num: number): string {\r\n      if (num === 2) {\r\n        return '×©×¢×ª×××';\r\n      }\r\n      return num + ' ×©×¢××ª';\r\n    },\r\n    d: '×××',\r\n    dd(num: number): string {\r\n      if (num === 2) {\r\n        return '××××××';\r\n      }\r\n      return num + ' ××××';\r\n    },\r\n    M: '××××©',\r\n    MM(num: number): string {\r\n      if (num === 2) {\r\n        return '××××©×××';\r\n      }\r\n      return num + ' ××××©××';\r\n    },\r\n    y: '×©× ×',\r\n    yy(num: number): string {\r\n      if (num === 2) {\r\n        return '×©× ×ª×××';\r\n      } else if (num % 10 === 0 && num !== 10) {\r\n        return num + ' ×©× ×';\r\n      }\r\n      return num + ' ×©× ××';\r\n    }\r\n  },\r\n  meridiemParse: /×××\"×¦|××¤× ×\"×¦|×××¨× ××¦××¨×××|××¤× × ××¦××¨×××|××¤× ××ª ×××§×¨|××××§×¨|××¢×¨×/i,\r\n  isPM(input) {\r\n    return /^(×××\"×¦|×××¨× ××¦××¨×××|××¢×¨×)$/.test(input);\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 5) {\r\n      return '××¤× ××ª ×××§×¨';\r\n    } else if (hour < 10) {\r\n      return '××××§×¨';\r\n    } else if (hour < 12) {\r\n      return isLower ? '××¤× ×\"×¦' : '××¤× × ××¦××¨×××';\r\n    } else if (hour < 18) {\r\n      return isLower ? '×××\"×¦' : '×××¨× ××¦××¨×××';\r\n    } else {\r\n      return '××¢×¨×';\r\n    }\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n// tslint:disable:no-parameter-reassignment prefer-switch\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Hindi [hi]\r\n//! author : Mayank Singhal : https://github.com/mayanksinghal\r\n\r\nlet symbolMap: {[key: string]: string} = {\r\n    1: 'à¥§',\r\n    2: 'à¥¨',\r\n    3: 'à¥©',\r\n    4: 'à¥ª',\r\n    5: 'à¥«',\r\n    6: 'à¥¬',\r\n    7: 'à¥­',\r\n    8: 'à¥®',\r\n    9: 'à¥¯',\r\n    0: 'à¥¦'\r\n  },\r\n  numberMap: {[key: string]: string} = {\r\n    'à¥§': '1',\r\n    'à¥¨': '2',\r\n    'à¥©': '3',\r\n    'à¥ª': '4',\r\n    'à¥«': '5',\r\n    'à¥¬': '6',\r\n    'à¥­': '7',\r\n    'à¥®': '8',\r\n    'à¥¯': '9',\r\n    'à¥¦': '0'\r\n  };\r\n\r\nexport const hiLocale: LocaleData = {\r\n  abbr: 'hi',\r\n  months: 'à¤à¤¨à¤µà¤°à¥_à¤«à¤¼à¤°à¤µà¤°à¥_à¤®à¤¾à¤°à¥à¤_à¤à¤ªà¥à¤°à¥à¤²_à¤®à¤_à¤à¥à¤¨_à¤à¥à¤²à¤¾à¤_à¤à¤à¤¸à¥à¤¤_à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°_à¤à¤à¥à¤à¥à¤¬à¤°_à¤¨à¤µà¤®à¥à¤¬à¤°_à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°'.split('_'),\r\n  monthsShort: 'à¤à¤¨._à¤«à¤¼à¤°._à¤®à¤¾à¤°à¥à¤_à¤à¤ªà¥à¤°à¥._à¤®à¤_à¤à¥à¤¨_à¤à¥à¤²._à¤à¤._à¤¸à¤¿à¤¤._à¤à¤à¥à¤à¥._à¤¨à¤µ._à¤¦à¤¿à¤¸.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'à¤°à¤µà¤¿à¤µà¤¾à¤°_à¤¸à¥à¤®à¤µà¤¾à¤°_à¤®à¤à¤à¤²à¤µà¤¾à¤°_à¤¬à¥à¤§à¤µà¤¾à¤°_à¤à¥à¤°à¥à¤µà¤¾à¤°_à¤¶à¥à¤à¥à¤°à¤µà¤¾à¤°_à¤¶à¤¨à¤¿à¤µà¤¾à¤°'.split('_'),\r\n  weekdaysShort: 'à¤°à¤µà¤¿_à¤¸à¥à¤®_à¤®à¤à¤à¤²_à¤¬à¥à¤§_à¤à¥à¤°à¥_à¤¶à¥à¤à¥à¤°_à¤¶à¤¨à¤¿'.split('_'),\r\n  weekdaysMin: 'à¤°_à¤¸à¥_à¤®à¤_à¤¬à¥_à¤à¥_à¤¶à¥_à¤¶'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'A h:mm à¤¬à¤à¥',\r\n    LTS: 'A h:mm:ss à¤¬à¤à¥',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY, A h:mm à¤¬à¤à¥',\r\n    LLLL: 'dddd, D MMMM YYYY, A h:mm à¤¬à¤à¥'\r\n  },\r\n  calendar: {\r\n    sameDay: '[à¤à¤] LT',\r\n    nextDay: '[à¤à¤²] LT',\r\n    nextWeek: 'dddd, LT',\r\n    lastDay: '[à¤à¤²] LT',\r\n    lastWeek: '[à¤ªà¤¿à¤à¤²à¥] dddd, LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: '%s à¤®à¥à¤',\r\n    past: '%s à¤ªà¤¹à¤²à¥',\r\n    s: 'à¤à¥à¤ à¤¹à¥ à¤à¥à¤·à¤£',\r\n    ss: '%d à¤¸à¥à¤à¤à¤¡',\r\n    m: 'à¤à¤ à¤®à¤¿à¤¨à¤',\r\n    mm: '%d à¤®à¤¿à¤¨à¤',\r\n    h: 'à¤à¤ à¤à¤à¤à¤¾',\r\n    hh: '%d à¤à¤à¤à¥',\r\n    d: 'à¤à¤ à¤¦à¤¿à¤¨',\r\n    dd: '%d à¤¦à¤¿à¤¨',\r\n    M: 'à¤à¤ à¤®à¤¹à¥à¤¨à¥',\r\n    MM: '%d à¤®à¤¹à¥à¤¨à¥',\r\n    y: 'à¤à¤ à¤µà¤°à¥à¤·',\r\n    yy: '%d à¤µà¤°à¥à¤·'\r\n  },\r\n  preparse(str: string): string {\r\n    return str.replace(/[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g, function (match) {\r\n      return numberMap[match];\r\n    });\r\n  },\r\n  postformat(str: string): string {\r\n    return str.replace(/\\d/g, function (match) {\r\n      return symbolMap[match];\r\n    });\r\n  },\r\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\r\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\r\n  meridiemParse: /à¤°à¤¾à¤¤|à¤¸à¥à¤¬à¤¹|à¤¦à¥à¤ªà¤¹à¤°|à¤¶à¤¾à¤®/,\r\n  meridiemHour(hour, meridiem) {\r\n    if (hour === 12) {\r\n      hour = 0;\r\n    }\r\n    if (meridiem === 'à¤°à¤¾à¤¤') {\r\n      return hour < 4 ? hour : hour + 12;\r\n    } else if (meridiem === 'à¤¸à¥à¤¬à¤¹') {\r\n      return hour;\r\n    } else if (meridiem === 'à¤¦à¥à¤ªà¤¹à¤°') {\r\n      return hour >= 10 ? hour : hour + 12;\r\n    } else if (meridiem === 'à¤¶à¤¾à¤®') {\r\n      return hour + 12;\r\n    }\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 4) {\r\n      return 'à¤°à¤¾à¤¤';\r\n    } else if (hour < 10) {\r\n      return 'à¤¸à¥à¤¬à¤¹';\r\n    } else if (hour < 17) {\r\n      return 'à¤¦à¥à¤ªà¤¹à¤°';\r\n    } else if (hour < 20) {\r\n      return 'à¤¶à¤¾à¤®';\r\n    } else {\r\n      return 'à¤°à¤¾à¤¤';\r\n    }\r\n  },\r\n  week: {\r\n    dow: 0, // Sunday is the first day of the week.\r\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Hungarian [hu]\r\n//! author : Adam Brunner : https://github.com/adambrunner\r\n\r\nlet weekEndings = 'vasÃ¡rnap hÃ©tfÅn kedden szerdÃ¡n csÃ¼tÃ¶rtÃ¶kÃ¶n pÃ©nteken szombaton'.split(' ');\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  switch (key) {\r\n    case 's':\r\n      return (isFuture || withoutSuffix) ? 'nÃ©hÃ¡ny mÃ¡sodperc' : 'nÃ©hÃ¡ny mÃ¡sodperce';\r\n    case 'ss':\r\n      return num + ((isFuture || withoutSuffix) ? ' mÃ¡sodperc' : ' mÃ¡sodperce');\r\n    case 'm':\r\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\r\n    case 'mm':\r\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\r\n    case 'h':\r\n      return 'egy' + (isFuture || withoutSuffix ? ' Ã³ra' : ' Ã³rÃ¡ja');\r\n    case 'hh':\r\n      return num + (isFuture || withoutSuffix ? ' Ã³ra' : ' Ã³rÃ¡ja');\r\n    case 'd':\r\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\r\n    case 'dd':\r\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\r\n    case 'M':\r\n      return 'egy' + (isFuture || withoutSuffix ? ' hÃ³nap' : ' hÃ³napja');\r\n    case 'MM':\r\n      return num + (isFuture || withoutSuffix ? ' hÃ³nap' : ' hÃ³napja');\r\n    case 'y':\r\n      return 'egy' + (isFuture || withoutSuffix ? ' Ã©v' : ' Ã©ve');\r\n    case 'yy':\r\n      return num + (isFuture || withoutSuffix ? ' Ã©v' : ' Ã©ve');\r\n  }\r\n  return '';\r\n}\r\nfunction week(date: Date, isFuture: boolean) {\r\n  return (isFuture ? '' : '[mÃºlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\r\n}\r\n\r\nexport const huLocale: LocaleData = {\r\n  abbr: 'hu',\r\n  months : 'januÃ¡r_februÃ¡r_mÃ¡rcius_Ã¡prilis_mÃ¡jus_jÃºnius_jÃºlius_augusztus_szeptember_oktÃ³ber_november_december'.split('_'),\r\n  monthsShort : 'jan_feb_mÃ¡rc_Ã¡pr_mÃ¡j_jÃºn_jÃºl_aug_szept_okt_nov_dec'.split('_'),\r\n  weekdays : 'vasÃ¡rnap_hÃ©tfÅ_kedd_szerda_csÃ¼tÃ¶rtÃ¶k_pÃ©ntek_szombat'.split('_'),\r\n  weekdaysShort : 'vas_hÃ©t_kedd_sze_csÃ¼t_pÃ©n_szo'.split('_'),\r\n  weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'H:mm',\r\n    LTS : 'H:mm:ss',\r\n    L : 'YYYY.MM.DD.',\r\n    LL : 'YYYY. MMMM D.',\r\n    LLL : 'YYYY. MMMM D. H:mm',\r\n    LLLL : 'YYYY. MMMM D., dddd H:mm'\r\n  },\r\n  meridiemParse: /de|du/i,\r\n  isPM (input) {\r\n    return input.charAt(1).toLowerCase() === 'u';\r\n  },\r\n  meridiem (hours, minutes, isLower) {\r\n    if (hours < 12) {\r\n      return isLower === true ? 'de' : 'DE';\r\n    } else {\r\n      return isLower === true ? 'du' : 'DU';\r\n    }\r\n  },\r\n  calendar : {\r\n    sameDay : '[ma] LT[-kor]',\r\n    nextDay : '[holnap] LT[-kor]',\r\n    nextWeek (date: Date) {\r\n      return week(date, true);\r\n    },\r\n    lastDay : '[tegnap] LT[-kor]',\r\n    lastWeek (date: Date) {\r\n      return week(date, false);\r\n    },\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : '%s mÃºlva',\r\n    past : '%s',\r\n    s : translate,\r\n    ss : translate,\r\n    m : translate,\r\n    mm : translate,\r\n    h : translate,\r\n    hh : translate,\r\n    d : translate,\r\n    dd : translate,\r\n    M : translate,\r\n    MM : translate,\r\n    y : translate,\r\n    yy : translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal : '%d.',\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n// tslint:disable:no-parameter-reassignment prefer-switch\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Indonesia [id]\r\n//! author : Romy Kusuma : https://github.com/rkusuma\r\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\r\n\r\nexport const idLocale: LocaleData = {\r\n  abbr: 'id',\r\n  months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\r\n  monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\r\n  weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\r\n  weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\r\n  weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'HH.mm',\r\n    LTS : 'HH.mm.ss',\r\n    L : 'DD/MM/YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY [pukul] HH.mm',\r\n    LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\r\n  },\r\n  meridiemParse: /pagi|siang|sore|malam/,\r\n  meridiemHour(hour, meridiem) {\r\n    if (hour === 12) {\r\n      hour = 0;\r\n    }\r\n    if (meridiem === 'pagi') {\r\n      return hour;\r\n    } else if (meridiem === 'siang') {\r\n      return hour >= 11 ? hour : hour + 12;\r\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\r\n      return hour + 12;\r\n    }\r\n  },\r\n  meridiem(hours, minutes, isLower) {\r\n    if (hours < 11) {\r\n      return 'pagi';\r\n    } else if (hours < 15) {\r\n      return 'siang';\r\n    } else if (hours < 19) {\r\n      return 'sore';\r\n    } else {\r\n      return 'malam';\r\n    }\r\n  },\r\n  calendar : {\r\n    sameDay : '[Hari ini pukul] LT',\r\n    nextDay : '[Besok pukul] LT',\r\n    nextWeek : 'dddd [pukul] LT',\r\n    lastDay : '[Kemarin pukul] LT',\r\n    lastWeek : 'dddd [lalu pukul] LT',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : 'dalam %s',\r\n    past : '%s yang lalu',\r\n    s : 'beberapa detik',\r\n    ss : '%d detik',\r\n    m : 'semenit',\r\n    mm : '%d menit',\r\n    h : 'sejam',\r\n    hh : '%d jam',\r\n    d : 'sehari',\r\n    dd : '%d hari',\r\n    M : 'sebulan',\r\n    MM : '%d bulan',\r\n    y : 'setahun',\r\n    yy : '%d tahun'\r\n  },\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Italian [it]\r\n//! author : Lorenzo : https://github.com/aliem\r\n//! author: Mattia Larentis: https://github.com/nostalgiaz\r\n\r\nexport const itLocale: LocaleData = {\r\n  abbr: 'it',\r\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\r\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\r\n  weekdays: 'domenica_lunedÃ¬_martedÃ¬_mercoledÃ¬_giovedÃ¬_venerdÃ¬_sabato'.split('_'),\r\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Oggi alle] LT',\r\n    nextDay: '[Domani alle] LT',\r\n    nextWeek: 'dddd [alle] LT',\r\n    lastDay: '[Ieri alle] LT',\r\n    lastWeek(date: Date) {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[la scorsa] dddd [alle] LT';\r\n        default:\r\n          return '[lo scorso] dddd [alle] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future(num: number): string {\r\n      return ((/^[0-9].+$/).test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\r\n    },\r\n    past: '%s fa',\r\n    s: 'alcuni secondi',\r\n    ss: '%d secondi',\r\n    m: 'un minuto',\r\n    mm: '%d minuti',\r\n    h: 'un\\'ora',\r\n    hh: '%d ore',\r\n    d: 'un giorno',\r\n    dd: '%d giorni',\r\n    M: 'un mese',\r\n    MM: '%d mesi',\r\n    y: 'un anno',\r\n    yy: '%d anni'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\r\n  ordinal: '%dÂº',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Japanese [ja]\r\n//! author : LI Long : https://github.com/baryon\r\n\r\nexport const jaLocale: LocaleData =  {\r\n  abbr: 'ja',\r\n  months : '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\r\n  monthsShort : '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\r\n  weekdays : 'æ¥ææ¥_æææ¥_ç«ææ¥_æ°´ææ¥_æ¨ææ¥_éææ¥_åææ¥'.split('_'),\r\n  weekdaysShort : 'æ¥_æ_ç«_æ°´_æ¨_é_å'.split('_'),\r\n  weekdaysMin : 'æ¥_æ_ç«_æ°´_æ¨_é_å'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'YYYY/MM/DD',\r\n    LL : 'YYYYå¹´MæDæ¥',\r\n    LLL : 'YYYYå¹´MæDæ¥ HH:mm',\r\n    LLLL : 'YYYYå¹´MæDæ¥ HH:mm dddd',\r\n    l : 'YYYY/MM/DD',\r\n    ll : 'YYYYå¹´MæDæ¥',\r\n    lll : 'YYYYå¹´MæDæ¥ HH:mm',\r\n    llll : 'YYYYå¹´MæDæ¥ HH:mm dddd'\r\n  },\r\n  meridiemParse: /åå|åå¾/i,\r\n  isPM (input) {\r\n    return input === 'åå¾';\r\n  },\r\n  meridiem (hour, minute, isLower) {\r\n    if (hour < 12) {\r\n      return 'åå';\r\n    } else {\r\n      return 'åå¾';\r\n    }\r\n  },\r\n  calendar : {\r\n    sameDay : '[ä»æ¥] LT',\r\n    nextDay : '[ææ¥] LT',\r\n    nextWeek : '[æ¥é±]dddd LT',\r\n    lastDay : '[æ¨æ¥] LT',\r\n    lastWeek : '[åé±]dddd LT',\r\n    sameElse : 'L'\r\n  },\r\n  dayOfMonthOrdinalParse : /\\d{1,2}æ¥/,\r\n  ordinal (num: number, period: string): string {\r\n    switch (period) {\r\n      case 'd':\r\n      case 'D':\r\n      case 'DDD':\r\n        return num + 'æ¥';\r\n      default:\r\n        return num.toString(10);\r\n    }\r\n  },\r\n  relativeTime : {\r\n    future : '%så¾',\r\n    past : '%så',\r\n    s : 'æ°ç§',\r\n    ss : '%dç§',\r\n    m : '1å',\r\n    mm : '%då',\r\n    h : '1æé',\r\n    hh : '%dæé',\r\n    d : '1æ¥',\r\n    dd : '%dæ¥',\r\n    M : '1ã¶æ',\r\n    MM : '%dã¶æ',\r\n    y : '1å¹´',\r\n    yy : '%då¹´'\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n// tslint:disable:object-literal-shorthand\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Korean [ko]\r\n//! author : Kyungwook, Park : https://github.com/kyungw00k\r\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\r\n\r\nexport const koLocale: LocaleData = {\r\n  abbr: 'ko',\r\n  months : '1ì_2ì_3ì_4ì_5ì_6ì_7ì_8ì_9ì_10ì_11ì_12ì'.split('_'),\r\n  monthsShort : '1ì_2ì_3ì_4ì_5ì_6ì_7ì_8ì_9ì_10ì_11ì_12ì'.split('_'),\r\n  weekdays : 'ì¼ìì¼_ììì¼_íìì¼_ììì¼_ëª©ìì¼_ê¸ìì¼_í ìì¼'.split('_'),\r\n  weekdaysShort : 'ì¼_ì_í_ì_ëª©_ê¸_í '.split('_'),\r\n  weekdaysMin : 'ì¼_ì_í_ì_ëª©_ê¸_í '.split('_'),\r\n  longDateFormat : {\r\n    LT : 'A h:mm',\r\n    LTS : 'A h:mm:ss',\r\n    L : 'YYYY.MM.DD',\r\n    LL : 'YYYYë MMMM Dì¼',\r\n    LLL : 'YYYYë MMMM Dì¼ A h:mm',\r\n    LLLL : 'YYYYë MMMM Dì¼ dddd A h:mm',\r\n    l : 'YYYY.MM.DD',\r\n    ll : 'YYYYë MMMM Dì¼',\r\n    lll : 'YYYYë MMMM Dì¼ A h:mm',\r\n    llll : 'YYYYë MMMM Dì¼ dddd A h:mm'\r\n  },\r\n  calendar : {\r\n    sameDay : 'ì¤ë LT',\r\n    nextDay : 'ë´ì¼ LT',\r\n    nextWeek : 'dddd LT',\r\n    lastDay : 'ì´ì  LT',\r\n    lastWeek : 'ì§ëì£¼ dddd LT',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : '%s í',\r\n    past : '%s ì ',\r\n    s : 'ëª ì´',\r\n    ss : '%dì´',\r\n    m : '1ë¶',\r\n    mm : '%dë¶',\r\n    h : 'í ìê°',\r\n    hh : '%dìê°',\r\n    d : 'íë£¨',\r\n    dd : '%dì¼',\r\n    M : 'í ë¬',\r\n    MM : '%dë¬',\r\n    y : 'ì¼ ë',\r\n    yy : '%dë'\r\n  },\r\n  dayOfMonthOrdinalParse : /\\d{1,2}(ì¼|ì|ì£¼)/,\r\n  ordinal : function (num: number, period: string): string {\r\n    switch (period) {\r\n      case 'd':\r\n      case 'D':\r\n      case 'DDD':\r\n        return num + 'ì¼';\r\n      case 'M':\r\n        return num + 'ì';\r\n      case 'w':\r\n      case 'W':\r\n        return num + 'ì£¼';\r\n      default:\r\n        return num.toString(10);\r\n    }\r\n  },\r\n  meridiemParse : /ì¤ì |ì¤í/,\r\n  isPM : function (token) {\r\n    return token === 'ì¤í';\r\n  },\r\n  meridiem : function (hour, minute, isUpper) {\r\n    return hour < 12 ? 'ì¤ì ' : 'ì¤í';\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Lithuanian [lt]\r\n//! author : Stanislavas Guk : https://github.com/ixoster\r\n\r\nconst units = {\r\n  ss : 'sekundÄ_sekundÅ¾iÅ³_sekundes',\r\n  m : 'minutÄ_minutÄs_minutÄ',\r\n  mm: 'minutÄs_minuÄiÅ³_minutes',\r\n  h : 'valanda_valandos_valandÄ',\r\n  hh: 'valandos_valandÅ³_valandas',\r\n  d : 'diena_dienos_dienÄ',\r\n  dd: 'dienos_dienÅ³_dienas',\r\n  M : 'mÄnuo_mÄnesio_mÄnesÄ¯',\r\n  MM: 'mÄnesiai_mÄnesiÅ³_mÄnesius',\r\n  y : 'metai_metÅ³_metus',\r\n  yy: 'metai_metÅ³_metus'\r\n};\r\nfunction translateSeconds(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\r\n  if (withoutSuffix) {\r\n      return 'kelios sekundÄs';\r\n  } else {\r\n      return isFuture ? 'keliÅ³ sekundÅ¾iÅ³' : 'kelias sekundes';\r\n  }\r\n}\r\nfunction translateSingular(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\r\n  return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\r\n}\r\nfunction special(num: number) {\r\n  return num % 10 === 0 || (num > 10 && num < 20);\r\n}\r\nfunction forms(key: string) {\r\n  return units[key].split('_');\r\n}\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\r\n  let result = num + ' ';\r\n  if (num === 1) {\r\n      return result + translateSingular(num, withoutSuffix, key[0], isFuture);\r\n  } else if (withoutSuffix) {\r\n      return result + (special(num) ? forms(key)[1] : forms(key)[0]);\r\n  } else {\r\n      if (isFuture) {\r\n          return result + forms(key)[1];\r\n      } else {\r\n          return result + (special(num) ? forms(key)[1] : forms(key)[2]);\r\n      }\r\n  }\r\n}\r\n\r\nexport const ltLocale: LocaleData = {\r\n  abbr: 'lt',\r\n  months : {\r\n    format: 'sausio_vasario_kovo_balandÅ¾io_geguÅ¾Äs_birÅ¾elio_liepos_rugpjÅ«Äio_rugsÄjo_spalio_lapkriÄio_gruodÅ¾io'.split('_'),\r\n    standalone: 'sausis_vasaris_kovas_balandis_geguÅ¾Ä_birÅ¾elis_liepa_rugpjÅ«tis_rugsÄjis_spalis_lapkritis_gruodis'.split('_'),\r\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\r\n  },\r\n  monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\r\n  weekdays : {\r\n      format: 'sekmadienÄ¯_pirmadienÄ¯_antradienÄ¯_treÄiadienÄ¯_ketvirtadienÄ¯_penktadienÄ¯_Å¡eÅ¡tadienÄ¯'.split('_'),\r\n      standalone: 'sekmadienis_pirmadienis_antradienis_treÄiadienis_ketvirtadienis_penktadienis_Å¡eÅ¡tadienis'.split('_'),\r\n      isFormat: /dddd HH:mm/\r\n  },\r\n  weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Å eÅ¡'.split('_'),\r\n  weekdaysMin : 'S_P_A_T_K_Pn_Å '.split('_'),\r\n  weekdaysParseExact : true,\r\n  longDateFormat : {\r\n      LT : 'HH:mm',\r\n      LTS : 'HH:mm:ss',\r\n      L : 'YYYY-MM-DD',\r\n      LL : 'YYYY [m.] MMMM D [d.]',\r\n      LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\r\n      LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\r\n      l : 'YYYY-MM-DD',\r\n      ll : 'YYYY [m.] MMMM D [d.]',\r\n      lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\r\n      llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\r\n  },\r\n  calendar : {\r\n      sameDay : '[Å iandien] LT',\r\n      nextDay : '[Rytoj] LT',\r\n      nextWeek : 'dddd LT',\r\n      lastDay : '[Vakar] LT',\r\n      lastWeek : '[PraÄjusÄ¯] dddd LT',\r\n      sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n      future : 'po %s',\r\n      past : 'prieÅ¡ %s',\r\n      s : translateSeconds,\r\n      ss : translate,\r\n      m : translateSingular,\r\n      mm : translate,\r\n      h : translateSingular,\r\n      hh : translate,\r\n      d : translateSingular,\r\n      dd : translate,\r\n      M : translateSingular,\r\n      MM : translate,\r\n      y : translateSingular,\r\n      yy : translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\r\n  ordinal(num) {\r\n      return num + '-oji';\r\n  },\r\n  week : {\r\n      dow : 1, // Monday is the first day of the week.\r\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n// tslint:disable:object-literal-shorthand\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Mongolian [mn]\r\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\r\n  switch (key) {\r\n    case 's':\r\n      return withoutSuffix ? 'ÑÑÐ´ÑÑÐ½ ÑÐµÐºÑÐ½Ð´' : 'ÑÑÐ´ÑÑÐ½ ÑÐµÐºÑÐ½Ð´ÑÐ½';\r\n    case 'ss':\r\n      return num + (withoutSuffix ? ' ÑÐµÐºÑÐ½Ð´' : ' ÑÐµÐºÑÐ½Ð´ÑÐ½');\r\n    case 'm':\r\n    case 'mm':\r\n      return num + (withoutSuffix ? ' Ð¼Ð¸Ð½ÑÑ' : ' Ð¼Ð¸Ð½ÑÑÑÐ½');\r\n    case 'h':\r\n    case 'hh':\r\n      return num + (withoutSuffix ? ' ÑÐ°Ð³' : ' ÑÐ°Ð³Ð¸Ð¹Ð½');\r\n    case 'd':\r\n    case 'dd':\r\n      return num + (withoutSuffix ? ' Ó©Ð´Ó©Ñ' : ' Ó©Ð´ÑÐ¸Ð¹Ð½');\r\n    case 'M':\r\n    case 'MM':\r\n      return num + (withoutSuffix ? ' ÑÐ°Ñ' : ' ÑÐ°ÑÑÐ½');\r\n    case 'y':\r\n    case 'yy':\r\n      return num + (withoutSuffix ? ' Ð¶Ð¸Ð»' : ' Ð¶Ð¸Ð»Ð¸Ð¹Ð½');\r\n    default:\r\n      return num.toString(10);\r\n  }\r\n}\r\n\r\nexport const mnLocale: LocaleData = {\r\n  abbr: 'mn',\r\n  months: 'ÐÑÐ³Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_Ð¥Ð¾ÑÑÐ´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÑÐ°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÓ©ÑÓ©Ð²Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_Ð¢Ð°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÑÐ³Ð°Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÐ¾Ð»Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÐ°Ð¹Ð¼Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÐ´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_ÐÑÐ°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÐ²Ð°Ð½ Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_ÐÑÐ²Ð°Ð½ ÑÐ¾ÑÑÐ´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ'.split('_'),\r\n  monthsShort: '1 ÑÐ°Ñ_2 ÑÐ°Ñ_3 ÑÐ°Ñ_4 ÑÐ°Ñ_5 ÑÐ°Ñ_6 ÑÐ°Ñ_7 ÑÐ°Ñ_8 ÑÐ°Ñ_9 ÑÐ°Ñ_10 ÑÐ°Ñ_11 ÑÐ°Ñ_12 ÑÐ°Ñ'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'ÐÑÐ¼_ÐÐ°Ð²Ð°Ð°_ÐÑÐ³Ð¼Ð°Ñ_ÐÑÐ°Ð³Ð²Ð°_ÐÒ¯ÑÑÐ²_ÐÐ°Ð°ÑÐ°Ð½_ÐÑÐ¼Ð±Ð°'.split('_'),\r\n  weekdaysShort: 'ÐÑÐ¼_ÐÐ°Ð²_ÐÑÐ³_ÐÑÐ°_ÐÒ¯Ñ_ÐÐ°Ð°_ÐÑÐ¼'.split('_'),\r\n  weekdaysMin: 'ÐÑ_ÐÐ°_ÐÑ_ÐÑ_ÐÒ¯_ÐÐ°_ÐÑ'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'YYYY-MM-DD',\r\n    LL: 'YYYY Ð¾Ð½Ñ MMMMÑÐ½ D',\r\n    LLL: 'YYYY Ð¾Ð½Ñ MMMMÑÐ½ D HH:mm',\r\n    LLLL: 'dddd, YYYY Ð¾Ð½Ñ MMMMÑÐ½ D HH:mm'\r\n  },\r\n  meridiemParse: /Ò®Ó¨|Ò®Ð¥/i,\r\n  isPM: function (input) {\r\n    return input === 'Ò®Ð¥';\r\n  },\r\n  meridiem: function (hour, minute, isLower) {\r\n    if (hour < 12) {\r\n      return 'Ò®Ó¨';\r\n    } else {\r\n      return 'Ò®Ð¥';\r\n    }\r\n  },\r\n  calendar: {\r\n    sameDay: '[Ó¨Ð½Ó©Ó©Ð´Ó©Ñ] LT',\r\n    nextDay: '[ÐÐ°ÑÐ³Ð°Ð°Ñ] LT',\r\n    nextWeek: '[ÐÑÑÑ] dddd LT',\r\n    lastDay: '[Ó¨ÑÐ¸Ð³Ð´Ó©Ñ] LT',\r\n    lastWeek: '[Ó¨Ð½Ð³Ó©ÑÑÓ©Ð½] dddd LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: '%s Ð´Ð°ÑÐ°Ð°',\r\n    past: '%s Ó©Ð¼Ð½Ó©',\r\n    s: translate,\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: translate,\r\n    dd: translate,\r\n    M: translate,\r\n    MM: translate,\r\n    y: translate,\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2} Ó©Ð´Ó©Ñ/,\r\n  ordinal: function (num: number, period: string): string {\r\n    switch (period) {\r\n      case 'd':\r\n      case 'D':\r\n      case 'DDD':\r\n        return num + ' Ó©Ð´Ó©Ñ';\r\n      default:\r\n        return num.toString(10);\r\n    }\r\n  }\r\n};\r\n","// tslint:disable:comment-format\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Norwegian BokmÃ¥l [nb]\r\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\r\n//!           Sigurd Gartmann : https://github.com/sigurdga\r\n\r\nexport const nbLocale: LocaleData = {\r\n  abbr: 'nb',\r\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\r\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'sÃ¸ndag_mandag_tirsdag_onsdag_torsdag_fredag_lÃ¸rdag'.split('_'),\r\n  weekdaysShort: 'sÃ¸._ma._ti._on._to._fr._lÃ¸.'.split('_'),\r\n  weekdaysMin: 'sÃ¸_ma_ti_on_to_fr_lÃ¸'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D. MMMM YYYY',\r\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\r\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[i dag kl.] LT',\r\n    nextDay: '[i morgen kl.] LT',\r\n    nextWeek: 'dddd [kl.] LT',\r\n    lastDay: '[i gÃ¥r kl.] LT',\r\n    lastWeek: '[forrige] dddd [kl.] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'om %s',\r\n    past: '%s siden',\r\n    s: 'noen sekunder',\r\n    ss: '%d sekunder',\r\n    m: 'ett minutt',\r\n    mm: '%d minutter',\r\n    h: 'en time',\r\n    hh: '%d timer',\r\n    d: 'en dag',\r\n    dd: '%d dager',\r\n    M: 'en mÃ¥ned',\r\n    MM: '%d mÃ¥neder',\r\n    y: 'ett Ã¥r',\r\n    yy: '%d Ã¥r'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Dutch (Belgium) [nl-be]\r\n//! author : Joris RÃ¶ling : https://github.com/jorisroling\r\n//! author : Jacob Middag : https://github.com/middagj\r\n\r\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\r\nlet monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\r\n\r\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\r\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\r\n\r\nexport const nlBeLocale: LocaleData = {\r\n  abbr: 'nl-be',\r\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortWithDots;\r\n    } else if (/-MMM-/.test(format)) {\r\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsShortWithDots[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\r\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\r\n\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n\r\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\r\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\r\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[vandaag om] LT',\r\n    nextDay: '[morgen om] LT',\r\n    nextWeek: 'dddd [om] LT',\r\n    lastDay: '[gisteren om] LT',\r\n    lastWeek: '[afgelopen] dddd [om] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'over %s',\r\n    past: '%s geleden',\r\n    s: 'een paar seconden',\r\n    ss: '%d seconden',\r\n    m: 'Ã©Ã©n minuut',\r\n    mm: '%d minuten',\r\n    h: 'Ã©Ã©n uur',\r\n    hh: '%d uur',\r\n    d: 'Ã©Ã©n dag',\r\n    dd: '%d dagen',\r\n    M: 'Ã©Ã©n maand',\r\n    MM: '%d maanden',\r\n    y: 'Ã©Ã©n jaar',\r\n    yy: '%d jaar'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Dutch [nl]\r\n//! author : Joris RÃ¶ling : https://github.com/jorisroling\r\n//! author : Jacob Middag : https://github.com/middagj\r\n\r\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\r\n  monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\r\n\r\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\r\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\r\n\r\nexport const nlLocale: LocaleData = {\r\n  abbr: 'nl',\r\n  months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\r\n  monthsShort (date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortWithDots;\r\n    } else if (/-MMM-/.test(format)) {\r\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsShortWithDots[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\r\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\r\n\r\n  monthsParse,\r\n  longMonthsParse : monthsParse,\r\n  shortMonthsParse : monthsParse,\r\n\r\n  weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\r\n  weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\r\n  weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\r\n  weekdaysParseExact : true,\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'DD-MM-YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY HH:mm',\r\n    LLLL : 'dddd D MMMM YYYY HH:mm'\r\n  },\r\n  calendar : {\r\n    sameDay: '[vandaag om] LT',\r\n    nextDay: '[morgen om] LT',\r\n    nextWeek: 'dddd [om] LT',\r\n    lastDay: '[gisteren om] LT',\r\n    lastWeek: '[afgelopen] dddd [om] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime : {\r\n    future : 'over %s',\r\n    past : '%s geleden',\r\n    s : 'een paar seconden',\r\n    ss : '%d seconden',\r\n    m : 'Ã©Ã©n minuut',\r\n    mm : '%d minuten',\r\n    h : 'Ã©Ã©n uur',\r\n    hh : '%d uur',\r\n    d : 'Ã©Ã©n dag',\r\n    dd : '%d dagen',\r\n    M : 'Ã©Ã©n maand',\r\n    MM : '%d maanden',\r\n    y : 'Ã©Ã©n jaar',\r\n    yy : '%d jaar'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\r\n  ordinal (_num: number): string {\r\n    const num = Number(_num);\r\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\r\n  },\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getMonth } from '../utils/date-getters';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Polish [pl]\r\n//! author : Rafal Hirsz : https://github.com/evoL\r\n\r\nlet monthsNominative = 'styczeÅ_luty_marzec_kwiecieÅ_maj_czerwiec_lipiec_sierpieÅ_wrzesieÅ_paÅºdziernik_listopad_grudzieÅ'.split('_');\r\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_wrzeÅnia_paÅºdziernika_listopada_grudnia'.split('_');\r\n\r\nfunction plural(num: number): boolean {\r\n  return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\r\n}\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string): string {\r\n  let result = num + ' ';\r\n  switch (key) {\r\n    case 'ss':\r\n      return result + (plural(num) ? 'sekundy' : 'sekund');\r\n    case 'm':\r\n      return withoutSuffix ? 'minuta' : 'minutÄ';\r\n    case 'mm':\r\n      return result + (plural(num) ? 'minuty' : 'minut');\r\n    case 'h':\r\n      return withoutSuffix ? 'godzina' : 'godzinÄ';\r\n    case 'hh':\r\n      return result + (plural(num) ? 'godziny' : 'godzin');\r\n    case 'MM':\r\n      return result + (plural(num) ? 'miesiÄce' : 'miesiÄcy');\r\n    case 'yy':\r\n      return result + (plural(num) ? 'lata' : 'lat');\r\n  }\r\n}\r\n\r\nexport const plLocale: LocaleData = {\r\n  abbr: 'pl',\r\n  months(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsNominative;\r\n    } else if (format === '') {\r\n      // Hack: if format empty we know this is used to generate\r\n      // RegExp by moment. Give then back both valid forms of months\r\n      // in RegExp ready format.\r\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\r\n    } else if (/D MMMM/.test(format)) {\r\n      return monthsSubjective[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsNominative[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paÅº_lis_gru'.split('_'),\r\n  weekdays: 'niedziela_poniedziaÅek_wtorek_Åroda_czwartek_piÄtek_sobota'.split('_'),\r\n  weekdaysShort: 'ndz_pon_wt_År_czw_pt_sob'.split('_'),\r\n  weekdaysMin: 'Nd_Pn_Wt_År_Cz_Pt_So'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[DziÅ o] LT',\r\n    nextDay: '[Jutro o] LT',\r\n    nextWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[W niedzielÄ o] LT';\r\n\r\n        case 2:\r\n          return '[We wtorek o] LT';\r\n\r\n        case 3:\r\n          return '[W ÅrodÄ o] LT';\r\n\r\n        case 5:\r\n          return '[W piÄtek o] LT';\r\n\r\n        case 6:\r\n          return '[W sobotÄ o] LT';\r\n\r\n        default:\r\n          return '[W] dddd [o] LT';\r\n      }\r\n    },\r\n    lastDay: '[Wczoraj o] LT',\r\n    lastWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[W zeszÅÄ niedzielÄ o] LT';\r\n        case 3:\r\n          return '[W zeszÅÄ ÅrodÄ o] LT';\r\n        case 4:\r\n          return '[W zeszÅÄ czwartek o] LT';\r\n        case 5:\r\n          return '[W zeszÅÄ piÄtek o] LT';\r\n        case 6:\r\n          return '[W zeszÅÄ sobotÄ o] LT';\r\n        default:\r\n          return '[W zeszÅy] dddd [o] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'za %s',\r\n    past: '%s temu',\r\n    s: 'kilka sekund',\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: '1 dzieÅ',\r\n    dd: '%d dni',\r\n    M: 'miesiÄc',\r\n    MM: translate,\r\n    y: 'rok',\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Portuguese (Brazil) [pt-br]\r\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\r\n\r\nexport const ptBrLocale: LocaleData = {\r\n  abbr: 'pt-br',\r\n  months: 'Janeiro_Fevereiro_MarÃ§o_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\r\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\r\n  weekdays: 'Domingo_Segunda-feira_TerÃ§a-feira_Quarta-feira_Quinta-feira_Sexta-feira_SÃ¡bado'.split('_'),\r\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_SÃ¡b'.split('_'),\r\n  weekdaysMin: 'Do_2Âª_3Âª_4Âª_5Âª_6Âª_SÃ¡'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [de] MMMM [de] YYYY',\r\n    LLL: 'D [de] MMMM [de] YYYY [Ã s] HH:mm',\r\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [Ã s] HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Hoje Ã s] LT',\r\n    nextDay: '[AmanhÃ£ Ã s] LT',\r\n    nextWeek: 'dddd [Ã s] LT',\r\n    lastDay: '[Ontem Ã s] LT',\r\n    lastWeek(date: Date) {\r\n      return (getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6) ?\r\n        '[Ãltimo] dddd [Ã s] LT' : // Saturday + Sunday\r\n        '[Ãltima] dddd [Ã s] LT'; // Monday - Friday\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'em %s',\r\n    past: '%s atrÃ¡s',\r\n    s: 'poucos segundos',\r\n    ss: '%d segundos',\r\n    m: 'um minuto',\r\n    mm: '%d minutos',\r\n    h: 'uma hora',\r\n    hh: '%d horas',\r\n    d: 'um dia',\r\n    dd: '%d dias',\r\n    M: 'um mÃªs',\r\n    MM: '%d meses',\r\n    y: 'um ano',\r\n    yy: '%d anos'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\r\n  ordinal: '%dÂº'\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n// ! moment.js locale configuration\r\n// ! locale : Romanian [ro]\r\n//! author : Vlad Gurdiga : https://github.com/gurdiga\r\n//! author : Valentin Agachi : https://github.com/avaly\r\n// ! author : Earle white: https://github.com/5earle\r\n\r\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\r\n  let format: {[key:string]: string} = {\r\n    ss: 'secunde',\r\n    mm: 'minute',\r\n    hh: 'ore',\r\n    dd: 'zile',\r\n    MM: 'luni',\r\n    yy: 'ani'\r\n  };\r\n\r\n  let separator = ' ';\r\n  if (num % 100 >= 20 || (num >= 100 && num % 100 === 0)) {\r\n    separator = ' de ';\r\n  }\r\n  return num + separator + format[key];\r\n}\r\n\r\n\r\nexport const roLocale: LocaleData = {\r\n  abbr: 'ro',\r\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\r\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'duminicÄ_luni_marÈi_miercuri_joi_vineri_sÃ¢mbÄtÄ'.split('_'),\r\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_SÃ¢m'.split('_'),\r\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_SÃ¢'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY H:mm',\r\n    LLLL: 'dddd, D MMMM YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[azi la] LT',\r\n    nextDay: '[mÃ¢ine la] LT',\r\n    nextWeek: 'dddd [la] LT',\r\n    lastDay: '[ieri la] LT',\r\n    lastWeek: '[fosta] dddd [la] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'peste %s',\r\n    past: '%s Ã®n urmÄ',\r\n    s: 'cÃ¢teva secunde',\r\n    ss: relativeTimeWithPlural,\r\n    m: 'un minut',\r\n    mm: relativeTimeWithPlural,\r\n    h: 'o orÄ',\r\n    hh: relativeTimeWithPlural,\r\n    d: 'o zi',\r\n    dd: relativeTimeWithPlural,\r\n    M: 'o lunÄ',\r\n    MM: relativeTimeWithPlural,\r\n    y: 'un an',\r\n    yy: relativeTimeWithPlural\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getWeek } from '../units/week';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Russian [ru]\r\n//! author : Viktorminator : https://github.com/Viktorminator\r\n//! Author : Menelion ElensÃºle : https://github.com/Oire\r\n//! author : ÐÐ¾ÑÐµÐ½Ð±ÐµÑÐ³ ÐÐ°ÑÐº : https://github.com/socketpair\r\n\r\nfunction plural(word: string, num: number): string {\r\n  let forms = word.split('_');\r\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\r\n}\r\n\r\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\r\n  let format: {[key: string]: string} = {\r\n    ss: withoutSuffix ? 'ÑÐµÐºÑÐ½Ð´Ð°_ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´' : 'ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´',\r\n    mm: withoutSuffix ? 'Ð¼Ð¸Ð½ÑÑÐ°_Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑ' : 'Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑ',\r\n    hh: 'ÑÐ°Ñ_ÑÐ°ÑÐ°_ÑÐ°ÑÐ¾Ð²',\r\n    dd: 'Ð´ÐµÐ½Ñ_Ð´Ð½Ñ_Ð´Ð½ÐµÐ¹',\r\n    MM: 'Ð¼ÐµÑÑÑ_Ð¼ÐµÑÑÑÐ°_Ð¼ÐµÑÑÑÐµÐ²',\r\n    yy: 'Ð³Ð¾Ð´_Ð³Ð¾Ð´Ð°_Ð»ÐµÑ'\r\n  };\r\n  if (key === 'm') {\r\n    return withoutSuffix ? 'Ð¼Ð¸Ð½ÑÑÐ°' : 'Ð¼Ð¸Ð½ÑÑÑ';\r\n  }\r\n  return num + ' ' + plural(format[key], +num);\r\n}\r\n\r\nlet monthsParse = [/^ÑÐ½Ð²/i, /^ÑÐµÐ²/i, /^Ð¼Ð°Ñ/i, /^Ð°Ð¿Ñ/i, /^Ð¼Ð°[Ð¹Ñ]/i, /^Ð¸ÑÐ½/i, /^Ð¸ÑÐ»/i, /^Ð°Ð²Ð³/i, /^ÑÐµÐ½/i, /^Ð¾ÐºÑ/i, /^Ð½Ð¾Ñ/i, /^Ð´ÐµÐº/i];\r\n\r\n// http://new.gramota.ru/spravka/rules/139-prop : Â§ 103\r\n// Ð¡Ð¾ÐºÑÐ°ÑÐµÐ½Ð¸Ñ Ð¼ÐµÑÑÑÐµÐ²: http://new.gramota.ru/spravka/buro/search-answer?s=242637\r\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\r\nexport const ruLocale: LocaleData = {\r\n  abbr: 'ru',\r\n  months: {\r\n    format: 'ÑÐ½Ð²Ð°ÑÑ_ÑÐµÐ²ÑÐ°Ð»Ñ_Ð¼Ð°ÑÑÐ°_Ð°Ð¿ÑÐµÐ»Ñ_Ð¼Ð°Ñ_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³ÑÑÑÐ°_ÑÐµÐ½ÑÑÐ±ÑÑ_Ð¾ÐºÑÑÐ±ÑÑ_Ð½Ð¾ÑÐ±ÑÑ_Ð´ÐµÐºÐ°Ð±ÑÑ'.split('_'),\r\n    standalone: 'ÑÐ½Ð²Ð°ÑÑ_ÑÐµÐ²ÑÐ°Ð»Ñ_Ð¼Ð°ÑÑ_Ð°Ð¿ÑÐµÐ»Ñ_Ð¼Ð°Ð¹_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³ÑÑÑ_ÑÐµÐ½ÑÑÐ±ÑÑ_Ð¾ÐºÑÑÐ±ÑÑ_Ð½Ð¾ÑÐ±ÑÑ_Ð´ÐµÐºÐ°Ð±ÑÑ'.split('_')\r\n  },\r\n  monthsShort: {\r\n    // Ð¿Ð¾ CLDR Ð¸Ð¼ÐµÐ½Ð½Ð¾ \"Ð¸ÑÐ».\" Ð¸ \"Ð¸ÑÐ½.\", Ð½Ð¾ ÐºÐ°ÐºÐ¾Ð¹ ÑÐ¼ÑÑÐ» Ð¼ÐµÐ½ÑÑÑ Ð±ÑÐºÐ²Ñ Ð½Ð° ÑÐ¾ÑÐºÑ ?\r\n    format: 'ÑÐ½Ð²._ÑÐµÐ²Ñ._Ð¼Ð°Ñ._Ð°Ð¿Ñ._Ð¼Ð°Ñ_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ._Ð¾ÐºÑ._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.'.split('_'),\r\n    standalone: 'ÑÐ½Ð²._ÑÐµÐ²Ñ._Ð¼Ð°ÑÑ_Ð°Ð¿Ñ._Ð¼Ð°Ð¹_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ._Ð¾ÐºÑ._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.'.split('_')\r\n  },\r\n  weekdays: {\r\n    standalone: 'Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÐµÐ´Ð°_ÑÐµÑÐ²ÐµÑÐ³_Ð¿ÑÑÐ½Ð¸ÑÐ°_ÑÑÐ±Ð±Ð¾ÑÐ°'.split('_'),\r\n    format: 'Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÐµÐ´Ñ_ÑÐµÑÐ²ÐµÑÐ³_Ð¿ÑÑÐ½Ð¸ÑÑ_ÑÑÐ±Ð±Ð¾ÑÑ'.split('_'),\r\n    isFormat: /\\[ ?[ÐÐ²] ?(?:Ð¿ÑÐ¾ÑÐ»ÑÑ|ÑÐ»ÐµÐ´ÑÑÑÑÑ|ÑÑÑ)? ?\\] ?dddd/\r\n  },\r\n  weekdaysShort: 'Ð²Ñ_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\r\n  weekdaysMin: 'Ð²Ñ_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n\r\n  // Ð¿Ð¾Ð»Ð½ÑÐµ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ñ Ñ Ð¿Ð°Ð´ÐµÐ¶Ð°Ð¼Ð¸, Ð¿Ð¾ ÑÑÐ¸ Ð±ÑÐºÐ²Ñ, Ð´Ð»Ñ Ð½ÐµÐºÐ¾ÑÐ¾ÑÑÑ, Ð¿Ð¾ 4 Ð±ÑÐºÐ²Ñ, ÑÐ¾ÐºÑÐ°ÑÐµÐ½Ð¸Ñ Ñ ÑÐ¾ÑÐºÐ¾Ð¹ Ð¸ Ð±ÐµÐ· ÑÐ¾ÑÐºÐ¸\r\n  monthsRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐ½Ð²\\.?|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|ÑÐµÐ²Ñ?\\.?|Ð¼Ð°ÑÑÐ°?|Ð¼Ð°Ñ\\.?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð°Ð¿Ñ\\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ½\\.?|Ð¸ÑÐ»[ÑÑ]|Ð¸ÑÐ»\\.?|Ð°Ð²Ð³ÑÑÑÐ°?|Ð°Ð²Ð³\\.?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|ÑÐµÐ½Ñ?\\.?|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑ\\.?|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±?\\.?|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ]|Ð´ÐµÐº\\.?)/i,\r\n\r\n  // ÐºÐ¾Ð¿Ð¸Ñ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ³Ð¾\r\n  monthsShortRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐ½Ð²\\.?|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|ÑÐµÐ²Ñ?\\.?|Ð¼Ð°ÑÑÐ°?|Ð¼Ð°Ñ\\.?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð°Ð¿Ñ\\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ½\\.?|Ð¸ÑÐ»[ÑÑ]|Ð¸ÑÐ»\\.?|Ð°Ð²Ð³ÑÑÑÐ°?|Ð°Ð²Ð³\\.?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|ÑÐµÐ½Ñ?\\.?|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑ\\.?|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±?\\.?|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ]|Ð´ÐµÐº\\.?)/i,\r\n\r\n  // Ð¿Ð¾Ð»Ð½ÑÐµ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ñ Ñ Ð¿Ð°Ð´ÐµÐ¶Ð°Ð¼Ð¸\r\n  monthsStrictRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|Ð¼Ð°ÑÑÐ°?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð¼Ð°[ÑÐ¹]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ»[ÑÑ]|Ð°Ð²Ð³ÑÑÑÐ°?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ])/i,\r\n\r\n  // ÐÑÑÐ°Ð¶ÐµÐ½Ð¸Ðµ, ÐºÐ¾ÑÐ¾ÑÐ¾Ðµ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÐ²ÑÐµÑ ÑÐ¾Ð»ÑÐºÐ¾ ÑÐ¾ÐºÑÐ°ÑÑÐ½Ð½ÑÐ¼ ÑÐ¾ÑÐ¼Ð°Ð¼\r\n  monthsShortStrictRegex: /^(ÑÐ½Ð²\\.|ÑÐµÐ²Ñ?\\.|Ð¼Ð°Ñ[Ñ.]|Ð°Ð¿Ñ\\.|Ð¼Ð°[ÑÐ¹]|Ð¸ÑÐ½[ÑÑ.]|Ð¸ÑÐ»[ÑÑ.]|Ð°Ð²Ð³\\.|ÑÐµÐ½Ñ?\\.|Ð¾ÐºÑ\\.|Ð½Ð¾ÑÐ±?\\.|Ð´ÐµÐº\\.)/i,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY Ð³.',\r\n    LLL: 'D MMMM YYYY Ð³., H:mm',\r\n    LLLL: 'dddd, D MMMM YYYY Ð³., H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ Ð²] LT',\r\n    nextDay: '[ÐÐ°Ð²ÑÑÐ° Ð²] LT',\r\n    lastDay: '[ÐÑÐµÑÐ° Ð²] LT',\r\n    nextWeek(date: Date, now: Date) {\r\n      if (getWeek(now) !== getWeek(date)) {\r\n        switch (getDayOfWeek(date)) {\r\n          case 0:\r\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÐµÐµ] dddd [Ð²] LT';\r\n          case 1:\r\n          case 2:\r\n          case 4:\r\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÐ¸Ð¹] dddd [Ð²] LT';\r\n          case 3:\r\n          case 5:\r\n          case 6:\r\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÑÑ] dddd [Ð²] LT';\r\n        }\r\n      } else {\r\n        if (getDayOfWeek(date) === 2) {\r\n          return '[ÐÐ¾] dddd [Ð²] LT';\r\n        } else {\r\n          return '[Ð] dddd [Ð²] LT';\r\n        }\r\n      }\r\n    },\r\n    lastWeek(date: Date, now: Date) {\r\n      if (getWeek(now) !== getWeek(date)) {\r\n        switch (getDayOfWeek(date)) {\r\n          case 0:\r\n            return '[Ð Ð¿ÑÐ¾ÑÐ»Ð¾Ðµ] dddd [Ð²] LT';\r\n          case 1:\r\n          case 2:\r\n          case 4:\r\n            return '[Ð Ð¿ÑÐ¾ÑÐ»ÑÐ¹] dddd [Ð²] LT';\r\n          case 3:\r\n          case 5:\r\n          case 6:\r\n            return '[Ð Ð¿ÑÐ¾ÑÐ»ÑÑ] dddd [Ð²] LT';\r\n        }\r\n      } else {\r\n        if (getDayOfWeek(date) === 2) {\r\n          return '[ÐÐ¾] dddd [Ð²] LT';\r\n        } else {\r\n          return '[Ð] dddd [Ð²] LT';\r\n        }\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'ÑÐµÑÐµÐ· %s',\r\n    past: '%s Ð½Ð°Ð·Ð°Ð´',\r\n    s: 'Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ ÑÐµÐºÑÐ½Ð´',\r\n    ss: relativeTimeWithPlural,\r\n    m: relativeTimeWithPlural,\r\n    mm: relativeTimeWithPlural,\r\n    h: 'ÑÐ°Ñ',\r\n    hh: relativeTimeWithPlural,\r\n    d: 'Ð´ÐµÐ½Ñ',\r\n    dd: relativeTimeWithPlural,\r\n    M: 'Ð¼ÐµÑÑÑ',\r\n    MM: relativeTimeWithPlural,\r\n    y: 'Ð³Ð¾Ð´',\r\n    yy: relativeTimeWithPlural\r\n  },\r\n  meridiemParse: /Ð½Ð¾ÑÐ¸|ÑÑÑÐ°|Ð´Ð½Ñ|Ð²ÐµÑÐµÑÐ°/i,\r\n  isPM(input) {\r\n    return /^(Ð´Ð½Ñ|Ð²ÐµÑÐµÑÐ°)$/.test(input);\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 4) {\r\n      return 'Ð½Ð¾ÑÐ¸';\r\n    } else if (hour < 12) {\r\n      return 'ÑÑÑÐ°';\r\n    } else if (hour < 17) {\r\n      return 'Ð´Ð½Ñ';\r\n    } else {\r\n      return 'Ð²ÐµÑÐµÑÐ°';\r\n    }\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}-(Ð¹|Ð³Ð¾|Ñ)/,\r\n  ordinal(_num: number, period: string): string {\r\n    const num = Number(_num);\r\n    switch (period) {\r\n      case 'M':\r\n      case 'd':\r\n      case 'DDD':\r\n        return num + '-Ð¹';\r\n      case 'D':\r\n        return num + '-Ð³Ð¾';\r\n      case 'w':\r\n      case 'W':\r\n        return num + '-Ñ';\r\n      default:\r\n        return num.toString(10);\r\n    }\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Slovak [sk]\r\n//! author : Jozef PaÅ¾in : https://github.com/atiris\r\n\r\nconst months = 'januÃ¡r_februÃ¡r_marec_aprÃ­l_mÃ¡j_jÃºn_jÃºl_august_september_oktÃ³ber_november_december'.split('_');\r\nconst monthsShort = 'jan_feb_mar_apr_mÃ¡j_jÃºn_jÃºl_aug_sep_okt_nov_dec'.split('_');\r\n\r\nfunction plural(num: number): boolean {\r\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\r\n}\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  const result = num + ' ';\r\n\r\n  switch (key) {\r\n    case 's':// a few seconds / in a few seconds / a few seconds ago\r\n      return (withoutSuffix || isFuture) ? 'pÃ¡r sekÃºnd' : 'pÃ¡r sekundami';\r\n    case 'ss':// 9 seconds / in 9 seconds / 9 seconds ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'sekundy' : 'sekÃºnd');\r\n      }\r\n      else {\r\n        return result + 'sekundami';\r\n      }\r\n    // break;\r\n    case 'm':// a minute / in a minute / a minute ago\r\n      return withoutSuffix ? 'minÃºta' : (isFuture ? 'minÃºtu' : 'minÃºtou');\r\n    case 'mm':// 9 minutes / in 9 minutes / 9 minutes ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'minÃºty' : 'minÃºt');\r\n      }\r\n      else {\r\n        return result + 'minÃºtami';\r\n      }\r\n    // break;\r\n    case 'h':// an hour / in an hour / an hour ago\r\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\r\n    case 'hh':// 9 hours / in 9 hours / 9 hours ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'hodiny' : 'hodÃ­n');\r\n      }\r\n      else {\r\n        return result + 'hodinami';\r\n      }\r\n    // break;\r\n    case 'd':// a day / in a day / a day ago\r\n      return (withoutSuffix || isFuture) ? 'deÅ' : 'dÅom';\r\n    case 'dd':// 9 days / in 9 days / 9 days ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'dni' : 'dnÃ­');\r\n      }\r\n      else {\r\n        return result + 'dÅami';\r\n      }\r\n    // break;\r\n    case 'M':// a month / in a month / a month ago\r\n      return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\r\n    case 'MM':// 9 months / in 9 months / 9 months ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'mesiace' : 'mesiacov');\r\n      }\r\n      else {\r\n        return result + 'mesiacmi';\r\n      }\r\n    // break;\r\n    case 'y':// a year / in a year / a year ago\r\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\r\n    case 'yy':// 9 years / in 9 years / 9 years ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'roky' : 'rokov');\r\n      }\r\n      else {\r\n        return result + 'rokmi';\r\n      }\r\n    // break;\r\n  }\r\n}\r\n\r\nexport const skLocale: LocaleData = {\r\n  abbr: 'sk',\r\n  months,\r\n  monthsShort,\r\n  weekdays: 'nedeÄ¾a_pondelok_utorok_streda_Å¡tvrtok_piatok_sobota'.split('_'),\r\n  weekdaysShort: 'ne_po_ut_st_Å¡t_pi_so'.split('_'),\r\n  weekdaysMin: 'ne_po_ut_st_Å¡t_pi_so'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D. MMMM YYYY',\r\n    LLL: 'D. MMMM YYYY H:mm',\r\n    LLLL: 'dddd D. MMMM YYYY H:mm',\r\n    l: 'D. M. YYYY'\r\n  },\r\n  calendar: {\r\n    sameDay: '[dnes o] LT',\r\n    nextDay: '[zajtra o] LT',\r\n    nextWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[v nedeÄ¾u o] LT';\r\n        case 1:\r\n        case 2:\r\n          return '[v] dddd [o] LT';\r\n        case 3:\r\n          return '[v stredu o] LT';\r\n        case 4:\r\n          return '[vo Å¡tvrtok o] LT';\r\n        case 5:\r\n          return '[v piatok o] LT';\r\n        case 6:\r\n          return '[v sobotu o] LT';\r\n      }\r\n    },\r\n    lastDay: '[vÄera o] LT',\r\n    lastWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[minulÃº nedeÄ¾u o] LT';\r\n        case 1:\r\n        case 2:\r\n          return '[minulÃ½] dddd [o] LT';\r\n        case 3:\r\n          return '[minulÃº stredu o] LT';\r\n        case 4:\r\n        case 5:\r\n          return '[minulÃ½] dddd [o] LT';\r\n        case 6:\r\n          return '[minulÃº sobotu o] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'o %s',\r\n    past: 'pred %s',\r\n    s: translate,\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: translate,\r\n    dd: translate,\r\n    M: translate,\r\n    MM: translate,\r\n    y: translate,\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n// tslint:disable:object-literal-key-quotes\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Slovenian [sl]\r\n//! author : mihan : https://github.com/mihan\r\n\r\nfunction processRelativeTime(number: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  var result = number + ' ';\r\n  switch (key) {\r\n    case 's':\r\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\r\n    case 'ss':\r\n      if (number === 1) {\r\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\r\n      } else if (number < 5) {\r\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\r\n      }\r\n      return result;\r\n    case 'm':\r\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\r\n    case 'mm':\r\n      if (number === 1) {\r\n        result += withoutSuffix ? 'minuta' : 'minuto';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\r\n      } else if (number < 5) {\r\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\r\n      }\r\n      return result;\r\n    case 'h':\r\n      return withoutSuffix ? 'ena ura' : 'eno uro';\r\n    case 'hh':\r\n      if (number === 1) {\r\n        result += withoutSuffix ? 'ura' : 'uro';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\r\n      } else if (number < 5) {\r\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\r\n      }\r\n      return result;\r\n    case 'd':\r\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\r\n    case 'dd':\r\n      if (number === 1) {\r\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\r\n      }\r\n      return result;\r\n    case 'M':\r\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\r\n    case 'MM':\r\n      if (number === 1) {\r\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\r\n      } else if (number < 5) {\r\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\r\n      }\r\n      return result;\r\n    case 'y':\r\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\r\n    case 'yy':\r\n      if (number === 1) {\r\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\r\n      } else if (number < 5) {\r\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\r\n      }\r\n      return result;\r\n  }\r\n}\r\n\r\nexport const slLocale: LocaleData = {\r\n  abbr: 'sl',\r\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\r\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'nedelja_ponedeljek_torek_sreda_Äetrtek_petek_sobota'.split('_'),\r\n  weekdaysShort: 'ned._pon._tor._sre._Äet._pet._sob.'.split('_'),\r\n  weekdaysMin: 'ne_po_to_sr_Äe_pe_so'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D. MMMM YYYY',\r\n    LLL: 'D. MMMM YYYY H:mm',\r\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[danes ob] LT',\r\n    nextDay: '[jutri ob] LT',\r\n\r\n    nextWeek(date: Date) {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[v] [nedeljo] [ob] LT';\r\n        case 3:\r\n          return '[v] [sredo] [ob] LT';\r\n        case 6:\r\n          return '[v] [soboto] [ob] LT';\r\n        case 1:\r\n        case 2:\r\n        case 4:\r\n        case 5:\r\n          return '[v] dddd [ob] LT';\r\n      }\r\n    },\r\n    lastDay: '[vÄeraj ob] LT',\r\n    lastWeek(date: Date) {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[prejÅ¡njo] [nedeljo] [ob] LT';\r\n        case 3:\r\n          return '[prejÅ¡njo] [sredo] [ob] LT';\r\n        case 6:\r\n          return '[prejÅ¡njo] [soboto] [ob] LT';\r\n        case 1:\r\n        case 2:\r\n        case 4:\r\n        case 5:\r\n          return '[prejÅ¡nji] dddd [ob] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'Äez %s',\r\n    past: 'pred %s',\r\n    s: processRelativeTime,\r\n    ss: processRelativeTime,\r\n    m: processRelativeTime,\r\n    mm: processRelativeTime,\r\n    h: processRelativeTime,\r\n    hh: processRelativeTime,\r\n    d: processRelativeTime,\r\n    dd: processRelativeTime,\r\n    M: processRelativeTime,\r\n    MM: processRelativeTime,\r\n    y: processRelativeTime,\r\n    yy: processRelativeTime\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Swedish [sv]\r\n//! author : Jens Alm : https://github.com/ulmus\r\n\r\nexport const svLocale: LocaleData = {\r\n  abbr: 'sv',\r\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\r\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\r\n  weekdays: 'sÃ¶ndag_mÃ¥ndag_tisdag_onsdag_torsdag_fredag_lÃ¶rdag'.split('_'),\r\n  weekdaysShort: 'sÃ¶n_mÃ¥n_tis_ons_tor_fre_lÃ¶r'.split('_'),\r\n  weekdaysMin: 'sÃ¶_mÃ¥_ti_on_to_fr_lÃ¶'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'YYYY-MM-DD',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\r\n    lll: 'D MMM YYYY HH:mm',\r\n    llll: 'ddd D MMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Idag] LT',\r\n    nextDay: '[Imorgon] LT',\r\n    lastDay: '[IgÃ¥r] LT',\r\n    nextWeek: '[PÃ¥] dddd LT',\r\n    lastWeek: '[I] dddd[s] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'om %s',\r\n    past: 'fÃ¶r %s sedan',\r\n    s: 'nÃ¥gra sekunder',\r\n    ss: '%d sekunder',\r\n    m: 'en minut',\r\n    mm: '%d minuter',\r\n    h: 'en timme',\r\n    hh: '%d timmar',\r\n    d: 'en dag',\r\n    dd: '%d dagar',\r\n    M: 'en mÃ¥nad',\r\n    MM: '%d mÃ¥nader',\r\n    y: 'ett Ã¥r',\r\n    yy: '%d Ã¥r'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    let b = num % 10,\r\n      output = (~~(num % 100 / 10) === 1) ? 'e' :\r\n        (b === 1) ? 'a' :\r\n          (b === 2) ? 'a' :\r\n            (b === 3) ? 'e' : 'e';\r\n    return num + output;\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\n// moment.js locale configuration\r\n// locale : Thai [th]\r\n// author : Watcharapol Sanitwong : https://github.com/tumit\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\nexport const thLocale: LocaleData = {\r\n  abbr: 'th',\r\n  months: 'à¸¡à¸à¸£à¸²à¸à¸¡_à¸à¸¸à¸¡à¸ à¸²à¸à¸±à¸à¸à¹_à¸¡à¸µà¸à¸²à¸à¸¡_à¹à¸¡à¸©à¸²à¸¢à¸_à¸à¸¤à¸©à¸ à¸²à¸à¸¡_à¸¡à¸´à¸à¸¸à¸à¸²à¸¢à¸_à¸à¸£à¸à¸à¸²à¸à¸¡_à¸ªà¸´à¸à¸«à¸²à¸à¸¡_à¸à¸±à¸à¸¢à¸²à¸¢à¸_à¸à¸¸à¸¥à¸²à¸à¸¡_à¸à¸¤à¸¨à¸à¸´à¸à¸²à¸¢à¸_à¸à¸±à¸à¸§à¸²à¸à¸¡'.split('_'),\r\n  monthsShort: 'à¸¡.à¸._à¸.à¸._à¸¡à¸µ.à¸._à¹à¸¡.à¸¢._à¸.à¸._à¸¡à¸´.à¸¢._à¸.à¸._à¸ª.à¸._à¸.à¸¢._à¸.à¸._à¸.à¸¢._à¸.à¸.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'à¸­à¸²à¸à¸´à¸à¸¢à¹_à¸à¸±à¸à¸à¸£à¹_à¸­à¸±à¸à¸à¸²à¸£_à¸à¸¸à¸_à¸à¸¤à¸«à¸±à¸ªà¸à¸à¸µ_à¸¨à¸¸à¸à¸£à¹_à¹à¸ªà¸²à¸£à¹'.split('_'),\r\n  weekdaysShort: 'à¸­à¸²à¸à¸´à¸à¸¢à¹_à¸à¸±à¸à¸à¸£à¹_à¸­à¸±à¸à¸à¸²à¸£_à¸à¸¸à¸_à¸à¸¤à¸«à¸±à¸ª_à¸¨à¸¸à¸à¸£à¹_à¹à¸ªà¸²à¸£à¹'.split('_'), // yes, three characters difference\r\n  weekdaysMin: 'à¸­à¸²._à¸._à¸­._à¸._à¸à¸¤._à¸¨._à¸ª.'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY à¹à¸§à¸¥à¸² H:mm',\r\n    LLLL: 'à¸§à¸±à¸ddddà¸à¸µà¹ D MMMM YYYY à¹à¸§à¸¥à¸² H:mm'\r\n  },\r\n  meridiemParse: /à¸à¹à¸­à¸à¹à¸à¸µà¹à¸¢à¸|à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸/,\r\n  isPM(input) {\r\n    return input === 'à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸';\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 12) {\r\n      return 'à¸à¹à¸­à¸à¹à¸à¸µà¹à¸¢à¸';\r\n    } else {\r\n      return 'à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸';\r\n    }\r\n  },\r\n  calendar: {\r\n    sameDay: '[à¸§à¸±à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\r\n    nextDay: '[à¸à¸£à¸¸à¹à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\r\n    nextWeek: 'dddd[à¸«à¸à¹à¸² à¹à¸§à¸¥à¸²] LT',\r\n    lastDay: '[à¹à¸¡à¸·à¹à¸­à¸§à¸²à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\r\n    lastWeek: '[à¸§à¸±à¸]dddd[à¸à¸µà¹à¹à¸¥à¹à¸§ à¹à¸§à¸¥à¸²] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'à¸­à¸µà¸ %s',\r\n    past: '%sà¸à¸µà¹à¹à¸¥à¹à¸§',\r\n    s: 'à¹à¸¡à¹à¸à¸µà¹à¸§à¸´à¸à¸²à¸à¸µ',\r\n    ss: '%d à¸§à¸´à¸à¸²à¸à¸µ',\r\n    m: '1 à¸à¸²à¸à¸µ',\r\n    mm: '%d à¸à¸²à¸à¸µ',\r\n    h: '1 à¸à¸±à¹à¸§à¹à¸¡à¸',\r\n    hh: '%d à¸à¸±à¹à¸§à¹à¸¡à¸',\r\n    d: '1 à¸§à¸±à¸',\r\n    dd: '%d à¸§à¸±à¸',\r\n    M: '1 à¹à¸à¸·à¸­à¸',\r\n    MM: '%d à¹à¸à¸·à¸­à¸',\r\n    y: '1 à¸à¸µ',\r\n    yy: '%d à¸à¸µ'\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Turkish [tr]\r\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\r\n//!           Burak YiÄit Kaya: https://github.com/BYK\r\n\r\nlet suffixes: { [key: string]: string } = {\r\n  1: '\\'inci',\r\n  5: '\\'inci',\r\n  8: '\\'inci',\r\n  70: '\\'inci',\r\n  80: '\\'inci',\r\n  2: '\\'nci',\r\n  7: '\\'nci',\r\n  20: '\\'nci',\r\n  50: '\\'nci',\r\n  3: '\\'Ã¼ncÃ¼',\r\n  4: '\\'Ã¼ncÃ¼',\r\n  100: '\\'Ã¼ncÃ¼',\r\n  6: '\\'ncÄ±',\r\n  9: '\\'uncu',\r\n  10: '\\'uncu',\r\n  30: '\\'uncu',\r\n  60: '\\'Ä±ncÄ±',\r\n  90: '\\'Ä±ncÄ±'\r\n};\r\n\r\nexport const trLocale: LocaleData = {\r\n  abbr: 'tr',\r\n  months: 'Ocak_Åubat_Mart_Nisan_MayÄ±s_Haziran_Temmuz_AÄustos_EylÃ¼l_Ekim_KasÄ±m_AralÄ±k'.split('_'),\r\n  monthsShort: 'Oca_Åub_Mar_Nis_May_Haz_Tem_AÄu_Eyl_Eki_Kas_Ara'.split('_'),\r\n  weekdays: 'Pazar_Pazartesi_SalÄ±_ÃarÅamba_PerÅembe_Cuma_Cumartesi'.split('_'),\r\n  weekdaysShort: 'Paz_Pts_Sal_Ãar_Per_Cum_Cts'.split('_'),\r\n  weekdaysMin: 'Pz_Pt_Sa_Ãa_Pe_Cu_Ct'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[bugÃ¼n saat] LT',\r\n    nextDay: '[yarÄ±n saat] LT',\r\n    nextWeek: '[gelecek] dddd [saat] LT',\r\n    lastDay: '[dÃ¼n] LT',\r\n    lastWeek: '[geÃ§en] dddd [saat] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: '%s sonra',\r\n    past: '%s Ã¶nce',\r\n    s: 'birkaÃ§ saniye',\r\n    ss: '%d saniye',\r\n    m: 'bir dakika',\r\n    mm: '%d dakika',\r\n    h: 'bir saat',\r\n    hh: '%d saat',\r\n    d: 'bir gÃ¼n',\r\n    dd: '%d gÃ¼n',\r\n    M: 'bir ay',\r\n    MM: '%d ay',\r\n    y: 'bir yÄ±l',\r\n    yy: '%d yÄ±l'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|Ã¼ncÃ¼|ncÄ±|uncu|Ä±ncÄ±)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    if (num === 0) {  // special case for zero\r\n      return num + '\\'Ä±ncÄ±';\r\n    }\r\n    let a = num % 10,\r\n      b = num % 100 - a,\r\n      c = num >= 100 ? 100 : null;\r\n    return num + (suffixes[a] || suffixes[b] || suffixes[c]);\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n// tslint:disable:no-parameter-reassignment prefer-switch\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Chinese (China) [zh-cn]\r\n//! author : suupic : https://github.com/suupic\r\n//! author : Zeno Zeng : https://github.com/zenozeng\r\n\r\nexport const zhCnLocale: LocaleData = {\r\n  abbr: 'zh-cn',\r\n  months: 'ä¸æ_äºæ_ä¸æ_åæ_äºæ_å­æ_ä¸æ_å«æ_ä¹æ_åæ_åä¸æ_åäºæ'.split('_'),\r\n  monthsShort: '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\r\n  weekdays: 'æææ¥_ææä¸_ææäº_ææä¸_ææå_ææäº_ææå­'.split('_'),\r\n  weekdaysShort: 'å¨æ¥_å¨ä¸_å¨äº_å¨ä¸_å¨å_å¨äº_å¨å­'.split('_'),\r\n  weekdaysMin: 'æ¥_ä¸_äº_ä¸_å_äº_å­'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'YYYY/MM/DD',\r\n    LL: 'YYYYå¹´MæDæ¥',\r\n    LLL: 'YYYYå¹´MæDæ¥Ahç¹mmå',\r\n    LLLL: 'YYYYå¹´MæDæ¥ddddAhç¹mmå',\r\n    l: 'YYYY/M/D',\r\n    ll: 'YYYYå¹´MæDæ¥',\r\n    lll: 'YYYYå¹´MæDæ¥ HH:mm',\r\n    llll: 'YYYYå¹´MæDæ¥dddd HH:mm'\r\n  },\r\n  meridiemParse: /åæ¨|æ©ä¸|ä¸å|ä¸­å|ä¸å|æä¸/,\r\n  meridiemHour(hour, meridiem) {\r\n    if (hour === 12) {\r\n      hour = 0;\r\n    }\r\n    if (meridiem === 'åæ¨' || meridiem === 'æ©ä¸' ||\r\n      meridiem === 'ä¸å') {\r\n      return hour;\r\n    } else if (meridiem === 'ä¸å' || meridiem === 'æä¸') {\r\n      return hour + 12;\r\n    } else {\r\n      // 'ä¸­å'\r\n      return hour >= 11 ? hour : hour + 12;\r\n    }\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    let hm = hour * 100 + minute;\r\n    if (hm < 600) {\r\n      return 'åæ¨';\r\n    } else if (hm < 900) {\r\n      return 'æ©ä¸';\r\n    } else if (hm < 1130) {\r\n      return 'ä¸å';\r\n    } else if (hm < 1230) {\r\n      return 'ä¸­å';\r\n    } else if (hm < 1800) {\r\n      return 'ä¸å';\r\n    } else {\r\n      return 'æä¸';\r\n    }\r\n  },\r\n  calendar: {\r\n    sameDay: '[ä»å¤©]LT',\r\n    nextDay: '[æå¤©]LT',\r\n    nextWeek: '[ä¸]ddddLT',\r\n    lastDay: '[æ¨å¤©]LT',\r\n    lastWeek: '[ä¸]ddddLT',\r\n    sameElse: 'L'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(æ¥|æ|å¨)/,\r\n  ordinal(_num: number, period) {\r\n    const num = Number(_num);\r\n    switch (period) {\r\n      case 'd':\r\n      case 'D':\r\n      case 'DDD':\r\n        return num + 'æ¥';\r\n      case 'M':\r\n        return num + 'æ';\r\n      case 'w':\r\n      case 'W':\r\n        return num + 'å¨';\r\n      default:\r\n        return num.toString();\r\n    }\r\n  },\r\n  relativeTime: {\r\n    future: '%så',\r\n    past: '%så',\r\n    s: 'å ç§',\r\n    ss: '%d ç§',\r\n    m: '1 åé',\r\n    mm: '%d åé',\r\n    h: '1 å°æ¶',\r\n    hh: '%d å°æ¶',\r\n    d: '1 å¤©',\r\n    dd: '%d å¤©',\r\n    M: '1 ä¸ªæ',\r\n    MM: '%d ä¸ªæ',\r\n    y: '1 å¹´',\r\n    yy: '%d å¹´'\r\n  },\r\n  week: {\r\n    // GB/T 7408-1994ãæ°æ®ååäº¤æ¢æ ¼å¼Â·ä¿¡æ¯äº¤æ¢Â·æ¥æåæ¶é´è¡¨ç¤ºæ³ãä¸ISO 8601:1988ç­æ\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n"]}